# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_iec61850')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_iec61850')
    _iec61850 = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_iec61850', [dirname(__file__)])
        except ImportError:
            import _iec61850
            return _iec61850
        try:
            _mod = imp.load_module('_iec61850', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _iec61850 = swig_import_helper()
    del swig_import_helper
else:
    import _iec61850
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class LastApplError(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, LastApplError, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, LastApplError, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ctlNum"] = _iec61850.LastApplError_ctlNum_set
    __swig_getmethods__["ctlNum"] = _iec61850.LastApplError_ctlNum_get
    if _newclass:
        ctlNum = _swig_property(_iec61850.LastApplError_ctlNum_get, _iec61850.LastApplError_ctlNum_set)
    __swig_setmethods__["error"] = _iec61850.LastApplError_error_set
    __swig_getmethods__["error"] = _iec61850.LastApplError_error_get
    if _newclass:
        error = _swig_property(_iec61850.LastApplError_error_get, _iec61850.LastApplError_error_set)
    __swig_setmethods__["addCause"] = _iec61850.LastApplError_addCause_set
    __swig_getmethods__["addCause"] = _iec61850.LastApplError_addCause_get
    if _newclass:
        addCause = _swig_property(_iec61850.LastApplError_addCause_get, _iec61850.LastApplError_addCause_set)

    def __init__(self):
        this = _iec61850.new_LastApplError()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_LastApplError
    __del__ = lambda self: None
LastApplError_swigregister = _iec61850.LastApplError_swigregister
LastApplError_swigregister(LastApplError)

IED_STATE_IDLE = _iec61850.IED_STATE_IDLE
IED_STATE_CONNECTED = _iec61850.IED_STATE_CONNECTED
IED_STATE_CLOSED = _iec61850.IED_STATE_CLOSED
IED_ERROR_OK = _iec61850.IED_ERROR_OK
IED_ERROR_NOT_CONNECTED = _iec61850.IED_ERROR_NOT_CONNECTED
IED_ERROR_ALREADY_CONNECTED = _iec61850.IED_ERROR_ALREADY_CONNECTED
IED_ERROR_CONNECTION_LOST = _iec61850.IED_ERROR_CONNECTION_LOST
IED_ERROR_SERVICE_NOT_SUPPORTED = _iec61850.IED_ERROR_SERVICE_NOT_SUPPORTED
IED_ERROR_CONNECTION_REJECTED = _iec61850.IED_ERROR_CONNECTION_REJECTED
IED_ERROR_USER_PROVIDED_INVALID_ARGUMENT = _iec61850.IED_ERROR_USER_PROVIDED_INVALID_ARGUMENT
IED_ERROR_ENABLE_REPORT_FAILED_DATASET_MISMATCH = _iec61850.IED_ERROR_ENABLE_REPORT_FAILED_DATASET_MISMATCH
IED_ERROR_OBJECT_REFERENCE_INVALID = _iec61850.IED_ERROR_OBJECT_REFERENCE_INVALID
IED_ERROR_UNEXPECTED_VALUE_RECEIVED = _iec61850.IED_ERROR_UNEXPECTED_VALUE_RECEIVED
IED_ERROR_TIMEOUT = _iec61850.IED_ERROR_TIMEOUT
IED_ERROR_ACCESS_DENIED = _iec61850.IED_ERROR_ACCESS_DENIED
IED_ERROR_OBJECT_DOES_NOT_EXIST = _iec61850.IED_ERROR_OBJECT_DOES_NOT_EXIST
IED_ERROR_OBJECT_EXISTS = _iec61850.IED_ERROR_OBJECT_EXISTS
IED_ERROR_OBJECT_ACCESS_UNSUPPORTED = _iec61850.IED_ERROR_OBJECT_ACCESS_UNSUPPORTED
IED_ERROR_TYPE_INCONSISTENT = _iec61850.IED_ERROR_TYPE_INCONSISTENT
IED_ERROR_TEMPORARILY_UNAVAILABLE = _iec61850.IED_ERROR_TEMPORARILY_UNAVAILABLE
IED_ERROR_OBJECT_UNDEFINED = _iec61850.IED_ERROR_OBJECT_UNDEFINED
IED_ERROR_INVALID_ADDRESS = _iec61850.IED_ERROR_INVALID_ADDRESS
IED_ERROR_HARDWARE_FAULT = _iec61850.IED_ERROR_HARDWARE_FAULT
IED_ERROR_TYPE_UNSUPPORTED = _iec61850.IED_ERROR_TYPE_UNSUPPORTED
IED_ERROR_OBJECT_ATTRIBUTE_INCONSISTENT = _iec61850.IED_ERROR_OBJECT_ATTRIBUTE_INCONSISTENT
IED_ERROR_OBJECT_VALUE_INVALID = _iec61850.IED_ERROR_OBJECT_VALUE_INVALID
IED_ERROR_OBJECT_INVALIDATED = _iec61850.IED_ERROR_OBJECT_INVALIDATED
IED_ERROR_SERVICE_NOT_IMPLEMENTED = _iec61850.IED_ERROR_SERVICE_NOT_IMPLEMENTED
IED_ERROR_UNKNOWN = _iec61850.IED_ERROR_UNKNOWN

def IedConnection_create():
    return _iec61850.IedConnection_create()
IedConnection_create = _iec61850.IedConnection_create

def IedConnection_destroy(arg1):
    return _iec61850.IedConnection_destroy(arg1)
IedConnection_destroy = _iec61850.IedConnection_destroy

def IedConnection_setConnectTimeout(arg1, timeoutInMs):
    return _iec61850.IedConnection_setConnectTimeout(arg1, timeoutInMs)
IedConnection_setConnectTimeout = _iec61850.IedConnection_setConnectTimeout

def IedConnection_connect(arg1, hostname, tcpPort):
    return _iec61850.IedConnection_connect(arg1, hostname, tcpPort)
IedConnection_connect = _iec61850.IedConnection_connect

def IedConnection_abort(arg1):
    return _iec61850.IedConnection_abort(arg1)
IedConnection_abort = _iec61850.IedConnection_abort

def IedConnection_release(arg1):
    return _iec61850.IedConnection_release(arg1)
IedConnection_release = _iec61850.IedConnection_release

def IedConnection_close(arg1):
    return _iec61850.IedConnection_close(arg1)
IedConnection_close = _iec61850.IedConnection_close

def IedConnection_getState(arg1):
    return _iec61850.IedConnection_getState(arg1)
IedConnection_getState = _iec61850.IedConnection_getState

def IedConnection_getLastApplError(arg1):
    return _iec61850.IedConnection_getLastApplError(arg1)
IedConnection_getLastApplError = _iec61850.IedConnection_getLastApplError

def IedConnection_installConnectionClosedHandler(arg1, handler, parameter):
    return _iec61850.IedConnection_installConnectionClosedHandler(arg1, handler, parameter)
IedConnection_installConnectionClosedHandler = _iec61850.IedConnection_installConnectionClosedHandler

def IedConnection_getMmsConnection(arg1):
    return _iec61850.IedConnection_getMmsConnection(arg1)
IedConnection_getMmsConnection = _iec61850.IedConnection_getMmsConnection
IEC61850_SV_OPT_REFRESH_TIME = _iec61850.IEC61850_SV_OPT_REFRESH_TIME
IEC61850_SV_OPT_SAMPLE_SYNC = _iec61850.IEC61850_SV_OPT_SAMPLE_SYNC
IEC61850_SV_OPT_SAMPLE_RATE = _iec61850.IEC61850_SV_OPT_SAMPLE_RATE
IEC61850_SV_OPT_DATA_SET = _iec61850.IEC61850_SV_OPT_DATA_SET
IEC61850_SV_OPT_SECURITY = _iec61850.IEC61850_SV_OPT_SECURITY

def ClientSVControlBlock_create(connection, reference):
    return _iec61850.ClientSVControlBlock_create(connection, reference)
ClientSVControlBlock_create = _iec61850.ClientSVControlBlock_create

def ClientSVControlBlock_destroy(arg1):
    return _iec61850.ClientSVControlBlock_destroy(arg1)
ClientSVControlBlock_destroy = _iec61850.ClientSVControlBlock_destroy

def ClientSVControlBlock_isMulticast(arg1):
    return _iec61850.ClientSVControlBlock_isMulticast(arg1)
ClientSVControlBlock_isMulticast = _iec61850.ClientSVControlBlock_isMulticast

def ClientSVControlBlock_getLastComError(arg1):
    return _iec61850.ClientSVControlBlock_getLastComError(arg1)
ClientSVControlBlock_getLastComError = _iec61850.ClientSVControlBlock_getLastComError

def ClientSVControlBlock_setSvEna(arg1, svEna):
    return _iec61850.ClientSVControlBlock_setSvEna(arg1, svEna)
ClientSVControlBlock_setSvEna = _iec61850.ClientSVControlBlock_setSvEna

def ClientSVControlBlock_getSvEna(arg1):
    return _iec61850.ClientSVControlBlock_getSvEna(arg1)
ClientSVControlBlock_getSvEna = _iec61850.ClientSVControlBlock_getSvEna

def ClientSVControlBlock_setResv(arg1, svEna):
    return _iec61850.ClientSVControlBlock_setResv(arg1, svEna)
ClientSVControlBlock_setResv = _iec61850.ClientSVControlBlock_setResv

def ClientSVControlBlock_getResv(arg1):
    return _iec61850.ClientSVControlBlock_getResv(arg1)
ClientSVControlBlock_getResv = _iec61850.ClientSVControlBlock_getResv

def ClientSVControlBlock_getMsvID(arg1):
    return _iec61850.ClientSVControlBlock_getMsvID(arg1)
ClientSVControlBlock_getMsvID = _iec61850.ClientSVControlBlock_getMsvID

def ClientSVControlBlock_getDatSet(arg1):
    return _iec61850.ClientSVControlBlock_getDatSet(arg1)
ClientSVControlBlock_getDatSet = _iec61850.ClientSVControlBlock_getDatSet

def ClientSVControlBlock_getConfRev(arg1):
    return _iec61850.ClientSVControlBlock_getConfRev(arg1)
ClientSVControlBlock_getConfRev = _iec61850.ClientSVControlBlock_getConfRev

def ClientSVControlBlock_getSmpRate(arg1):
    return _iec61850.ClientSVControlBlock_getSmpRate(arg1)
ClientSVControlBlock_getSmpRate = _iec61850.ClientSVControlBlock_getSmpRate

def ClientSVControlBlock_getDstAddress(arg1):
    return _iec61850.ClientSVControlBlock_getDstAddress(arg1)
ClientSVControlBlock_getDstAddress = _iec61850.ClientSVControlBlock_getDstAddress

def ClientSVControlBlock_getOptFlds(arg1):
    return _iec61850.ClientSVControlBlock_getOptFlds(arg1)
ClientSVControlBlock_getOptFlds = _iec61850.ClientSVControlBlock_getOptFlds

def ClientSVControlBlock_getSmpMod(arg1):
    return _iec61850.ClientSVControlBlock_getSmpMod(arg1)
ClientSVControlBlock_getSmpMod = _iec61850.ClientSVControlBlock_getSmpMod

def ClientSVControlBlock_getNoASDU(arg1):
    return _iec61850.ClientSVControlBlock_getNoASDU(arg1)
ClientSVControlBlock_getNoASDU = _iec61850.ClientSVControlBlock_getNoASDU
GOCB_ELEMENT_GO_ENA = _iec61850.GOCB_ELEMENT_GO_ENA
GOCB_ELEMENT_GO_ID = _iec61850.GOCB_ELEMENT_GO_ID
GOCB_ELEMENT_DATSET = _iec61850.GOCB_ELEMENT_DATSET
GOCB_ELEMENT_CONF_REV = _iec61850.GOCB_ELEMENT_CONF_REV
GOCB_ELEMENT_NDS_COMM = _iec61850.GOCB_ELEMENT_NDS_COMM
GOCB_ELEMENT_DST_ADDRESS = _iec61850.GOCB_ELEMENT_DST_ADDRESS
GOCB_ELEMENT_MIN_TIME = _iec61850.GOCB_ELEMENT_MIN_TIME
GOCB_ELEMENT_MAX_TIME = _iec61850.GOCB_ELEMENT_MAX_TIME
GOCB_ELEMENT_FIXED_OFFS = _iec61850.GOCB_ELEMENT_FIXED_OFFS
GOCB_ELEMENT_ALL = _iec61850.GOCB_ELEMENT_ALL

def ClientGooseControlBlock_create(dataAttributeReference):
    return _iec61850.ClientGooseControlBlock_create(dataAttributeReference)
ClientGooseControlBlock_create = _iec61850.ClientGooseControlBlock_create

def ClientGooseControlBlock_destroy(arg1):
    return _iec61850.ClientGooseControlBlock_destroy(arg1)
ClientGooseControlBlock_destroy = _iec61850.ClientGooseControlBlock_destroy

def ClientGooseControlBlock_getGoEna(arg1):
    return _iec61850.ClientGooseControlBlock_getGoEna(arg1)
ClientGooseControlBlock_getGoEna = _iec61850.ClientGooseControlBlock_getGoEna

def ClientGooseControlBlock_setGoEna(arg1, goEna):
    return _iec61850.ClientGooseControlBlock_setGoEna(arg1, goEna)
ClientGooseControlBlock_setGoEna = _iec61850.ClientGooseControlBlock_setGoEna

def ClientGooseControlBlock_getGoID(arg1):
    return _iec61850.ClientGooseControlBlock_getGoID(arg1)
ClientGooseControlBlock_getGoID = _iec61850.ClientGooseControlBlock_getGoID

def ClientGooseControlBlock_setGoID(arg1, goID):
    return _iec61850.ClientGooseControlBlock_setGoID(arg1, goID)
ClientGooseControlBlock_setGoID = _iec61850.ClientGooseControlBlock_setGoID

def ClientGooseControlBlock_getDatSet(arg1):
    return _iec61850.ClientGooseControlBlock_getDatSet(arg1)
ClientGooseControlBlock_getDatSet = _iec61850.ClientGooseControlBlock_getDatSet

def ClientGooseControlBlock_setDatSet(arg1, datSet):
    return _iec61850.ClientGooseControlBlock_setDatSet(arg1, datSet)
ClientGooseControlBlock_setDatSet = _iec61850.ClientGooseControlBlock_setDatSet

def ClientGooseControlBlock_getConfRev(arg1):
    return _iec61850.ClientGooseControlBlock_getConfRev(arg1)
ClientGooseControlBlock_getConfRev = _iec61850.ClientGooseControlBlock_getConfRev

def ClientGooseControlBlock_getNdsComm(arg1):
    return _iec61850.ClientGooseControlBlock_getNdsComm(arg1)
ClientGooseControlBlock_getNdsComm = _iec61850.ClientGooseControlBlock_getNdsComm

def ClientGooseControlBlock_getMinTime(arg1):
    return _iec61850.ClientGooseControlBlock_getMinTime(arg1)
ClientGooseControlBlock_getMinTime = _iec61850.ClientGooseControlBlock_getMinTime

def ClientGooseControlBlock_getMaxTime(arg1):
    return _iec61850.ClientGooseControlBlock_getMaxTime(arg1)
ClientGooseControlBlock_getMaxTime = _iec61850.ClientGooseControlBlock_getMaxTime

def ClientGooseControlBlock_getFixedOffs(arg1):
    return _iec61850.ClientGooseControlBlock_getFixedOffs(arg1)
ClientGooseControlBlock_getFixedOffs = _iec61850.ClientGooseControlBlock_getFixedOffs

def ClientGooseControlBlock_getDstAddress_addr(arg1):
    return _iec61850.ClientGooseControlBlock_getDstAddress_addr(arg1)
ClientGooseControlBlock_getDstAddress_addr = _iec61850.ClientGooseControlBlock_getDstAddress_addr

def ClientGooseControlBlock_setDstAddress_addr(arg1, macAddr):
    return _iec61850.ClientGooseControlBlock_setDstAddress_addr(arg1, macAddr)
ClientGooseControlBlock_setDstAddress_addr = _iec61850.ClientGooseControlBlock_setDstAddress_addr

def ClientGooseControlBlock_getDstAddress_priority(arg1):
    return _iec61850.ClientGooseControlBlock_getDstAddress_priority(arg1)
ClientGooseControlBlock_getDstAddress_priority = _iec61850.ClientGooseControlBlock_getDstAddress_priority

def ClientGooseControlBlock_setDstAddress_priority(arg1, priorityValue):
    return _iec61850.ClientGooseControlBlock_setDstAddress_priority(arg1, priorityValue)
ClientGooseControlBlock_setDstAddress_priority = _iec61850.ClientGooseControlBlock_setDstAddress_priority

def ClientGooseControlBlock_getDstAddress_vid(arg1):
    return _iec61850.ClientGooseControlBlock_getDstAddress_vid(arg1)
ClientGooseControlBlock_getDstAddress_vid = _iec61850.ClientGooseControlBlock_getDstAddress_vid

def ClientGooseControlBlock_setDstAddress_vid(arg1, vidValue):
    return _iec61850.ClientGooseControlBlock_setDstAddress_vid(arg1, vidValue)
ClientGooseControlBlock_setDstAddress_vid = _iec61850.ClientGooseControlBlock_setDstAddress_vid

def ClientGooseControlBlock_getDstAddress_appid(arg1):
    return _iec61850.ClientGooseControlBlock_getDstAddress_appid(arg1)
ClientGooseControlBlock_getDstAddress_appid = _iec61850.ClientGooseControlBlock_getDstAddress_appid

def ClientGooseControlBlock_setDstAddress_appid(arg1, appidValue):
    return _iec61850.ClientGooseControlBlock_setDstAddress_appid(arg1, appidValue)
ClientGooseControlBlock_setDstAddress_appid = _iec61850.ClientGooseControlBlock_setDstAddress_appid

def IedConnection_getGoCBValues(arg1, goCBReference, updateGoCB):
    return _iec61850.IedConnection_getGoCBValues(arg1, goCBReference, updateGoCB)
IedConnection_getGoCBValues = _iec61850.IedConnection_getGoCBValues

def IedConnection_setGoCBValues(arg1, goCB, parametersMask, singleRequest):
    return _iec61850.IedConnection_setGoCBValues(arg1, goCB, parametersMask, singleRequest)
IedConnection_setGoCBValues = _iec61850.IedConnection_setGoCBValues

def IedConnection_getRCBValues(arg1, rcbReference, updateRcb):
    return _iec61850.IedConnection_getRCBValues(arg1, rcbReference, updateRcb)
IedConnection_getRCBValues = _iec61850.IedConnection_getRCBValues
IEC61850_REASON_NOT_INCLUDED = _iec61850.IEC61850_REASON_NOT_INCLUDED
IEC61850_REASON_DATA_CHANGE = _iec61850.IEC61850_REASON_DATA_CHANGE
IEC61850_REASON_QUALITY_CHANGE = _iec61850.IEC61850_REASON_QUALITY_CHANGE
IEC61850_REASON_DATA_UPDATE = _iec61850.IEC61850_REASON_DATA_UPDATE
IEC61850_REASON_INTEGRITY = _iec61850.IEC61850_REASON_INTEGRITY
IEC61850_REASON_GI = _iec61850.IEC61850_REASON_GI
IEC61850_REASON_UNKNOWN = _iec61850.IEC61850_REASON_UNKNOWN
RCB_ELEMENT_RPT_ID = _iec61850.RCB_ELEMENT_RPT_ID
RCB_ELEMENT_RPT_ENA = _iec61850.RCB_ELEMENT_RPT_ENA
RCB_ELEMENT_RESV = _iec61850.RCB_ELEMENT_RESV
RCB_ELEMENT_DATSET = _iec61850.RCB_ELEMENT_DATSET
RCB_ELEMENT_CONF_REV = _iec61850.RCB_ELEMENT_CONF_REV
RCB_ELEMENT_OPT_FLDS = _iec61850.RCB_ELEMENT_OPT_FLDS
RCB_ELEMENT_BUF_TM = _iec61850.RCB_ELEMENT_BUF_TM
RCB_ELEMENT_SQ_NUM = _iec61850.RCB_ELEMENT_SQ_NUM
RCB_ELEMENT_TRG_OPS = _iec61850.RCB_ELEMENT_TRG_OPS
RCB_ELEMENT_INTG_PD = _iec61850.RCB_ELEMENT_INTG_PD
RCB_ELEMENT_GI = _iec61850.RCB_ELEMENT_GI
RCB_ELEMENT_PURGE_BUF = _iec61850.RCB_ELEMENT_PURGE_BUF
RCB_ELEMENT_ENTRY_ID = _iec61850.RCB_ELEMENT_ENTRY_ID
RCB_ELEMENT_TIME_OF_ENTRY = _iec61850.RCB_ELEMENT_TIME_OF_ENTRY
RCB_ELEMENT_RESV_TMS = _iec61850.RCB_ELEMENT_RESV_TMS
RCB_ELEMENT_OWNER = _iec61850.RCB_ELEMENT_OWNER

def IedConnection_setRCBValues(arg1, rcb, parametersMask, singleRequest):
    return _iec61850.IedConnection_setRCBValues(arg1, rcb, parametersMask, singleRequest)
IedConnection_setRCBValues = _iec61850.IedConnection_setRCBValues

def IedConnection_installReportHandler(arg1, rcbReference, rptId, handler, handlerParameter):
    return _iec61850.IedConnection_installReportHandler(arg1, rcbReference, rptId, handler, handlerParameter)
IedConnection_installReportHandler = _iec61850.IedConnection_installReportHandler

def IedConnection_uninstallReportHandler(arg1, rcbReference):
    return _iec61850.IedConnection_uninstallReportHandler(arg1, rcbReference)
IedConnection_uninstallReportHandler = _iec61850.IedConnection_uninstallReportHandler

def IedConnection_triggerGIReport(arg1, rcbReference):
    return _iec61850.IedConnection_triggerGIReport(arg1, rcbReference)
IedConnection_triggerGIReport = _iec61850.IedConnection_triggerGIReport

def ClientReport_getDataSetName(arg1):
    return _iec61850.ClientReport_getDataSetName(arg1)
ClientReport_getDataSetName = _iec61850.ClientReport_getDataSetName

def ClientReport_getDataSetValues(arg1):
    return _iec61850.ClientReport_getDataSetValues(arg1)
ClientReport_getDataSetValues = _iec61850.ClientReport_getDataSetValues

def ClientReport_getRcbReference(arg1):
    return _iec61850.ClientReport_getRcbReference(arg1)
ClientReport_getRcbReference = _iec61850.ClientReport_getRcbReference

def ClientReport_getRptId(arg1):
    return _iec61850.ClientReport_getRptId(arg1)
ClientReport_getRptId = _iec61850.ClientReport_getRptId

def ClientReport_getReasonForInclusion(arg1, elementIndex):
    return _iec61850.ClientReport_getReasonForInclusion(arg1, elementIndex)
ClientReport_getReasonForInclusion = _iec61850.ClientReport_getReasonForInclusion

def ClientReport_getEntryId(arg1):
    return _iec61850.ClientReport_getEntryId(arg1)
ClientReport_getEntryId = _iec61850.ClientReport_getEntryId

def ClientReport_hasTimestamp(arg1):
    return _iec61850.ClientReport_hasTimestamp(arg1)
ClientReport_hasTimestamp = _iec61850.ClientReport_hasTimestamp

def ClientReport_hasSeqNum(arg1):
    return _iec61850.ClientReport_hasSeqNum(arg1)
ClientReport_hasSeqNum = _iec61850.ClientReport_hasSeqNum

def ClientReport_getSeqNum(arg1):
    return _iec61850.ClientReport_getSeqNum(arg1)
ClientReport_getSeqNum = _iec61850.ClientReport_getSeqNum

def ClientReport_hasDataSetName(arg1):
    return _iec61850.ClientReport_hasDataSetName(arg1)
ClientReport_hasDataSetName = _iec61850.ClientReport_hasDataSetName

def ClientReport_hasReasonForInclusion(arg1):
    return _iec61850.ClientReport_hasReasonForInclusion(arg1)
ClientReport_hasReasonForInclusion = _iec61850.ClientReport_hasReasonForInclusion

def ClientReport_hasConfRev(arg1):
    return _iec61850.ClientReport_hasConfRev(arg1)
ClientReport_hasConfRev = _iec61850.ClientReport_hasConfRev

def ClientReport_getConfRev(arg1):
    return _iec61850.ClientReport_getConfRev(arg1)
ClientReport_getConfRev = _iec61850.ClientReport_getConfRev

def ClientReport_hasBufOvfl(arg1):
    return _iec61850.ClientReport_hasBufOvfl(arg1)
ClientReport_hasBufOvfl = _iec61850.ClientReport_hasBufOvfl

def ClientReport_getBufOvfl(arg1):
    return _iec61850.ClientReport_getBufOvfl(arg1)
ClientReport_getBufOvfl = _iec61850.ClientReport_getBufOvfl

def ClientReport_hasDataReference(arg1):
    return _iec61850.ClientReport_hasDataReference(arg1)
ClientReport_hasDataReference = _iec61850.ClientReport_hasDataReference

def ClientReport_getDataReference(arg1, elementIndex):
    return _iec61850.ClientReport_getDataReference(arg1, elementIndex)
ClientReport_getDataReference = _iec61850.ClientReport_getDataReference

def ClientReport_getTimestamp(arg1):
    return _iec61850.ClientReport_getTimestamp(arg1)
ClientReport_getTimestamp = _iec61850.ClientReport_getTimestamp

def ReasonForInclusion_getValueAsString(reasonCode):
    return _iec61850.ReasonForInclusion_getValueAsString(reasonCode)
ReasonForInclusion_getValueAsString = _iec61850.ReasonForInclusion_getValueAsString

def ClientReportControlBlock_create(rcbReference):
    return _iec61850.ClientReportControlBlock_create(rcbReference)
ClientReportControlBlock_create = _iec61850.ClientReportControlBlock_create

def ClientReportControlBlock_destroy(arg1):
    return _iec61850.ClientReportControlBlock_destroy(arg1)
ClientReportControlBlock_destroy = _iec61850.ClientReportControlBlock_destroy

def ClientReportControlBlock_getObjectReference(arg1):
    return _iec61850.ClientReportControlBlock_getObjectReference(arg1)
ClientReportControlBlock_getObjectReference = _iec61850.ClientReportControlBlock_getObjectReference

def ClientReportControlBlock_isBuffered(arg1):
    return _iec61850.ClientReportControlBlock_isBuffered(arg1)
ClientReportControlBlock_isBuffered = _iec61850.ClientReportControlBlock_isBuffered

def ClientReportControlBlock_getRptId(arg1):
    return _iec61850.ClientReportControlBlock_getRptId(arg1)
ClientReportControlBlock_getRptId = _iec61850.ClientReportControlBlock_getRptId

def ClientReportControlBlock_setRptId(arg1, rptId):
    return _iec61850.ClientReportControlBlock_setRptId(arg1, rptId)
ClientReportControlBlock_setRptId = _iec61850.ClientReportControlBlock_setRptId

def ClientReportControlBlock_getRptEna(arg1):
    return _iec61850.ClientReportControlBlock_getRptEna(arg1)
ClientReportControlBlock_getRptEna = _iec61850.ClientReportControlBlock_getRptEna

def ClientReportControlBlock_setRptEna(arg1, rptEna):
    return _iec61850.ClientReportControlBlock_setRptEna(arg1, rptEna)
ClientReportControlBlock_setRptEna = _iec61850.ClientReportControlBlock_setRptEna

def ClientReportControlBlock_getResv(arg1):
    return _iec61850.ClientReportControlBlock_getResv(arg1)
ClientReportControlBlock_getResv = _iec61850.ClientReportControlBlock_getResv

def ClientReportControlBlock_setResv(arg1, resv):
    return _iec61850.ClientReportControlBlock_setResv(arg1, resv)
ClientReportControlBlock_setResv = _iec61850.ClientReportControlBlock_setResv

def ClientReportControlBlock_getDataSetReference(arg1):
    return _iec61850.ClientReportControlBlock_getDataSetReference(arg1)
ClientReportControlBlock_getDataSetReference = _iec61850.ClientReportControlBlock_getDataSetReference

def ClientReportControlBlock_setDataSetReference(arg1, dataSetReference):
    return _iec61850.ClientReportControlBlock_setDataSetReference(arg1, dataSetReference)
ClientReportControlBlock_setDataSetReference = _iec61850.ClientReportControlBlock_setDataSetReference

def ClientReportControlBlock_getConfRev(arg1):
    return _iec61850.ClientReportControlBlock_getConfRev(arg1)
ClientReportControlBlock_getConfRev = _iec61850.ClientReportControlBlock_getConfRev

def ClientReportControlBlock_getOptFlds(arg1):
    return _iec61850.ClientReportControlBlock_getOptFlds(arg1)
ClientReportControlBlock_getOptFlds = _iec61850.ClientReportControlBlock_getOptFlds

def ClientReportControlBlock_setOptFlds(arg1, optFlds):
    return _iec61850.ClientReportControlBlock_setOptFlds(arg1, optFlds)
ClientReportControlBlock_setOptFlds = _iec61850.ClientReportControlBlock_setOptFlds

def ClientReportControlBlock_getBufTm(arg1):
    return _iec61850.ClientReportControlBlock_getBufTm(arg1)
ClientReportControlBlock_getBufTm = _iec61850.ClientReportControlBlock_getBufTm

def ClientReportControlBlock_setBufTm(arg1, bufTm):
    return _iec61850.ClientReportControlBlock_setBufTm(arg1, bufTm)
ClientReportControlBlock_setBufTm = _iec61850.ClientReportControlBlock_setBufTm

def ClientReportControlBlock_getSqNum(arg1):
    return _iec61850.ClientReportControlBlock_getSqNum(arg1)
ClientReportControlBlock_getSqNum = _iec61850.ClientReportControlBlock_getSqNum

def ClientReportControlBlock_getTrgOps(arg1):
    return _iec61850.ClientReportControlBlock_getTrgOps(arg1)
ClientReportControlBlock_getTrgOps = _iec61850.ClientReportControlBlock_getTrgOps

def ClientReportControlBlock_setTrgOps(arg1, trgOps):
    return _iec61850.ClientReportControlBlock_setTrgOps(arg1, trgOps)
ClientReportControlBlock_setTrgOps = _iec61850.ClientReportControlBlock_setTrgOps

def ClientReportControlBlock_getIntgPd(arg1):
    return _iec61850.ClientReportControlBlock_getIntgPd(arg1)
ClientReportControlBlock_getIntgPd = _iec61850.ClientReportControlBlock_getIntgPd

def ClientReportControlBlock_setIntgPd(arg1, intgPd):
    return _iec61850.ClientReportControlBlock_setIntgPd(arg1, intgPd)
ClientReportControlBlock_setIntgPd = _iec61850.ClientReportControlBlock_setIntgPd

def ClientReportControlBlock_getGI(arg1):
    return _iec61850.ClientReportControlBlock_getGI(arg1)
ClientReportControlBlock_getGI = _iec61850.ClientReportControlBlock_getGI

def ClientReportControlBlock_setGI(arg1, gi):
    return _iec61850.ClientReportControlBlock_setGI(arg1, gi)
ClientReportControlBlock_setGI = _iec61850.ClientReportControlBlock_setGI

def ClientReportControlBlock_getPurgeBuf(arg1):
    return _iec61850.ClientReportControlBlock_getPurgeBuf(arg1)
ClientReportControlBlock_getPurgeBuf = _iec61850.ClientReportControlBlock_getPurgeBuf

def ClientReportControlBlock_setPurgeBuf(arg1, purgeBuf):
    return _iec61850.ClientReportControlBlock_setPurgeBuf(arg1, purgeBuf)
ClientReportControlBlock_setPurgeBuf = _iec61850.ClientReportControlBlock_setPurgeBuf

def ClientReportControlBlock_getResvTms(arg1):
    return _iec61850.ClientReportControlBlock_getResvTms(arg1)
ClientReportControlBlock_getResvTms = _iec61850.ClientReportControlBlock_getResvTms

def ClientReportControlBlock_setResvTms(arg1, resvTms):
    return _iec61850.ClientReportControlBlock_setResvTms(arg1, resvTms)
ClientReportControlBlock_setResvTms = _iec61850.ClientReportControlBlock_setResvTms

def ClientReportControlBlock_getEntryId(arg1):
    return _iec61850.ClientReportControlBlock_getEntryId(arg1)
ClientReportControlBlock_getEntryId = _iec61850.ClientReportControlBlock_getEntryId

def ClientReportControlBlock_setEntryId(arg1, entryId):
    return _iec61850.ClientReportControlBlock_setEntryId(arg1, entryId)
ClientReportControlBlock_setEntryId = _iec61850.ClientReportControlBlock_setEntryId

def ClientReportControlBlock_getEntryTime(arg1):
    return _iec61850.ClientReportControlBlock_getEntryTime(arg1)
ClientReportControlBlock_getEntryTime = _iec61850.ClientReportControlBlock_getEntryTime

def ClientReportControlBlock_getOwner(arg1):
    return _iec61850.ClientReportControlBlock_getOwner(arg1)
ClientReportControlBlock_getOwner = _iec61850.ClientReportControlBlock_getOwner

def IedConnection_readObject(arg1, dataAttributeReference, fc):
    return _iec61850.IedConnection_readObject(arg1, dataAttributeReference, fc)
IedConnection_readObject = _iec61850.IedConnection_readObject

def IedConnection_writeObject(arg1, dataAttributeReference, fc, value):
    return _iec61850.IedConnection_writeObject(arg1, dataAttributeReference, fc, value)
IedConnection_writeObject = _iec61850.IedConnection_writeObject

def IedConnection_readBooleanValue(arg1, objectReference, fc):
    return _iec61850.IedConnection_readBooleanValue(arg1, objectReference, fc)
IedConnection_readBooleanValue = _iec61850.IedConnection_readBooleanValue

def IedConnection_readFloatValue(arg1, objectReference, fc):
    return _iec61850.IedConnection_readFloatValue(arg1, objectReference, fc)
IedConnection_readFloatValue = _iec61850.IedConnection_readFloatValue

def IedConnection_readStringValue(arg1, objectReference, fc):
    return _iec61850.IedConnection_readStringValue(arg1, objectReference, fc)
IedConnection_readStringValue = _iec61850.IedConnection_readStringValue

def IedConnection_readInt32Value(arg1, objectReference, fc):
    return _iec61850.IedConnection_readInt32Value(arg1, objectReference, fc)
IedConnection_readInt32Value = _iec61850.IedConnection_readInt32Value

def IedConnection_readInt64Value(arg1, objectReference, fc):
    return _iec61850.IedConnection_readInt64Value(arg1, objectReference, fc)
IedConnection_readInt64Value = _iec61850.IedConnection_readInt64Value

def IedConnection_readUnsigned32Value(arg1, objectReference, fc):
    return _iec61850.IedConnection_readUnsigned32Value(arg1, objectReference, fc)
IedConnection_readUnsigned32Value = _iec61850.IedConnection_readUnsigned32Value

def IedConnection_readTimestampValue(arg1, objectReference, fc, timeStamp):
    return _iec61850.IedConnection_readTimestampValue(arg1, objectReference, fc, timeStamp)
IedConnection_readTimestampValue = _iec61850.IedConnection_readTimestampValue

def IedConnection_readQualityValue(arg1, objectReference, fc):
    return _iec61850.IedConnection_readQualityValue(arg1, objectReference, fc)
IedConnection_readQualityValue = _iec61850.IedConnection_readQualityValue

def IedConnection_writeBooleanValue(arg1, objectReference, fc, value):
    return _iec61850.IedConnection_writeBooleanValue(arg1, objectReference, fc, value)
IedConnection_writeBooleanValue = _iec61850.IedConnection_writeBooleanValue

def IedConnection_writeInt32Value(arg1, objectReference, fc, value):
    return _iec61850.IedConnection_writeInt32Value(arg1, objectReference, fc, value)
IedConnection_writeInt32Value = _iec61850.IedConnection_writeInt32Value

def IedConnection_writeUnsigned32Value(arg1, objectReference, fc, value):
    return _iec61850.IedConnection_writeUnsigned32Value(arg1, objectReference, fc, value)
IedConnection_writeUnsigned32Value = _iec61850.IedConnection_writeUnsigned32Value

def IedConnection_writeFloatValue(arg1, objectReference, fc, value):
    return _iec61850.IedConnection_writeFloatValue(arg1, objectReference, fc, value)
IedConnection_writeFloatValue = _iec61850.IedConnection_writeFloatValue

def IedConnection_writeVisibleStringValue(arg1, objectReference, fc, value):
    return _iec61850.IedConnection_writeVisibleStringValue(arg1, objectReference, fc, value)
IedConnection_writeVisibleStringValue = _iec61850.IedConnection_writeVisibleStringValue

def IedConnection_writeOctetString(arg1, objectReference, fc, value, valueLength):
    return _iec61850.IedConnection_writeOctetString(arg1, objectReference, fc, value, valueLength)
IedConnection_writeOctetString = _iec61850.IedConnection_writeOctetString

def IedConnection_readDataSetValues(arg1, dataSetReference, dataSet):
    return _iec61850.IedConnection_readDataSetValues(arg1, dataSetReference, dataSet)
IedConnection_readDataSetValues = _iec61850.IedConnection_readDataSetValues

def IedConnection_createDataSet(arg1, dataSetReference, dataSetElements):
    return _iec61850.IedConnection_createDataSet(arg1, dataSetReference, dataSetElements)
IedConnection_createDataSet = _iec61850.IedConnection_createDataSet

def IedConnection_deleteDataSet(arg1, dataSetReference):
    return _iec61850.IedConnection_deleteDataSet(arg1, dataSetReference)
IedConnection_deleteDataSet = _iec61850.IedConnection_deleteDataSet

def IedConnection_getDataSetDirectory(arg1, dataSetReference, isDeletable):
    return _iec61850.IedConnection_getDataSetDirectory(arg1, dataSetReference, isDeletable)
IedConnection_getDataSetDirectory = _iec61850.IedConnection_getDataSetDirectory

def ClientDataSet_destroy(arg1):
    return _iec61850.ClientDataSet_destroy(arg1)
ClientDataSet_destroy = _iec61850.ClientDataSet_destroy

def ClientDataSet_getValues(arg1):
    return _iec61850.ClientDataSet_getValues(arg1)
ClientDataSet_getValues = _iec61850.ClientDataSet_getValues

def ClientDataSet_getReference(arg1):
    return _iec61850.ClientDataSet_getReference(arg1)
ClientDataSet_getReference = _iec61850.ClientDataSet_getReference

def ClientDataSet_getDataSetSize(arg1):
    return _iec61850.ClientDataSet_getDataSetSize(arg1)
ClientDataSet_getDataSetSize = _iec61850.ClientDataSet_getDataSetSize
CONTROL_MODEL_STATUS_ONLY = _iec61850.CONTROL_MODEL_STATUS_ONLY
CONTROL_MODEL_DIRECT_NORMAL = _iec61850.CONTROL_MODEL_DIRECT_NORMAL
CONTROL_MODEL_SBO_NORMAL = _iec61850.CONTROL_MODEL_SBO_NORMAL
CONTROL_MODEL_DIRECT_ENHANCED = _iec61850.CONTROL_MODEL_DIRECT_ENHANCED
CONTROL_MODEL_SBO_ENHANCED = _iec61850.CONTROL_MODEL_SBO_ENHANCED

def ControlObjectClient_create(objectReference, connection):
    return _iec61850.ControlObjectClient_create(objectReference, connection)
ControlObjectClient_create = _iec61850.ControlObjectClient_create

def ControlObjectClient_destroy(arg1):
    return _iec61850.ControlObjectClient_destroy(arg1)
ControlObjectClient_destroy = _iec61850.ControlObjectClient_destroy

def ControlObjectClient_getObjectReference(arg1):
    return _iec61850.ControlObjectClient_getObjectReference(arg1)
ControlObjectClient_getObjectReference = _iec61850.ControlObjectClient_getObjectReference

def ControlObjectClient_getControlModel(arg1):
    return _iec61850.ControlObjectClient_getControlModel(arg1)
ControlObjectClient_getControlModel = _iec61850.ControlObjectClient_getControlModel

def ControlObjectClient_operate(arg1, ctlVal, operTime):
    return _iec61850.ControlObjectClient_operate(arg1, ctlVal, operTime)
ControlObjectClient_operate = _iec61850.ControlObjectClient_operate

def ControlObjectClient_select(arg1):
    return _iec61850.ControlObjectClient_select(arg1)
ControlObjectClient_select = _iec61850.ControlObjectClient_select

def ControlObjectClient_selectWithValue(arg1, ctlVal):
    return _iec61850.ControlObjectClient_selectWithValue(arg1, ctlVal)
ControlObjectClient_selectWithValue = _iec61850.ControlObjectClient_selectWithValue

def ControlObjectClient_cancel(arg1):
    return _iec61850.ControlObjectClient_cancel(arg1)
ControlObjectClient_cancel = _iec61850.ControlObjectClient_cancel

def ControlObjectClient_setLastApplError(arg1, lastAppIError):
    return _iec61850.ControlObjectClient_setLastApplError(arg1, lastAppIError)
ControlObjectClient_setLastApplError = _iec61850.ControlObjectClient_setLastApplError

def ControlObjectClient_getLastApplError(arg1):
    return _iec61850.ControlObjectClient_getLastApplError(arg1)
ControlObjectClient_getLastApplError = _iec61850.ControlObjectClient_getLastApplError

def ControlObjectClient_setTestMode(arg1, value):
    return _iec61850.ControlObjectClient_setTestMode(arg1, value)
ControlObjectClient_setTestMode = _iec61850.ControlObjectClient_setTestMode

def ControlObjectClient_setOrigin(arg1, orIdent, orCat):
    return _iec61850.ControlObjectClient_setOrigin(arg1, orIdent, orCat)
ControlObjectClient_setOrigin = _iec61850.ControlObjectClient_setOrigin

def ControlObjectClient_useConstantT(arg1, useConstantT):
    return _iec61850.ControlObjectClient_useConstantT(arg1, useConstantT)
ControlObjectClient_useConstantT = _iec61850.ControlObjectClient_useConstantT

def ControlObjectClient_enableInterlockCheck(arg1):
    return _iec61850.ControlObjectClient_enableInterlockCheck(arg1)
ControlObjectClient_enableInterlockCheck = _iec61850.ControlObjectClient_enableInterlockCheck

def ControlObjectClient_enableSynchroCheck(arg1):
    return _iec61850.ControlObjectClient_enableSynchroCheck(arg1)
ControlObjectClient_enableSynchroCheck = _iec61850.ControlObjectClient_enableSynchroCheck

def ControlObjectClient_setInterlockCheck(arg1, value):
    return _iec61850.ControlObjectClient_setInterlockCheck(arg1, value)
ControlObjectClient_setInterlockCheck = _iec61850.ControlObjectClient_setInterlockCheck

def ControlObjectClient_setSynchroCheck(arg1, value):
    return _iec61850.ControlObjectClient_setSynchroCheck(arg1, value)
ControlObjectClient_setSynchroCheck = _iec61850.ControlObjectClient_setSynchroCheck

def ControlObjectClient_setCommandTerminationHandler(arg1, handler, handlerParameter):
    return _iec61850.ControlObjectClient_setCommandTerminationHandler(arg1, handler, handlerParameter)
ControlObjectClient_setCommandTerminationHandler = _iec61850.ControlObjectClient_setCommandTerminationHandler

def IedConnection_getDeviceModelFromServer(arg1):
    return _iec61850.IedConnection_getDeviceModelFromServer(arg1)
IedConnection_getDeviceModelFromServer = _iec61850.IedConnection_getDeviceModelFromServer

def IedConnection_getLogicalDeviceList(arg1):
    return _iec61850.IedConnection_getLogicalDeviceList(arg1)
IedConnection_getLogicalDeviceList = _iec61850.IedConnection_getLogicalDeviceList

def IedConnection_getServerDirectory(arg1, getFileNames):
    return _iec61850.IedConnection_getServerDirectory(arg1, getFileNames)
IedConnection_getServerDirectory = _iec61850.IedConnection_getServerDirectory

def IedConnection_getLogicalDeviceDirectory(arg1, logicalDeviceName):
    return _iec61850.IedConnection_getLogicalDeviceDirectory(arg1, logicalDeviceName)
IedConnection_getLogicalDeviceDirectory = _iec61850.IedConnection_getLogicalDeviceDirectory
ACSI_CLASS_DATA_OBJECT = _iec61850.ACSI_CLASS_DATA_OBJECT
ACSI_CLASS_DATA_SET = _iec61850.ACSI_CLASS_DATA_SET
ACSI_CLASS_BRCB = _iec61850.ACSI_CLASS_BRCB
ACSI_CLASS_URCB = _iec61850.ACSI_CLASS_URCB
ACSI_CLASS_LCB = _iec61850.ACSI_CLASS_LCB
ACSI_CLASS_LOG = _iec61850.ACSI_CLASS_LOG
ACSI_CLASS_SGCB = _iec61850.ACSI_CLASS_SGCB
ACSI_CLASS_GoCB = _iec61850.ACSI_CLASS_GoCB
ACSI_CLASS_GsCB = _iec61850.ACSI_CLASS_GsCB
ACSI_CLASS_MSVCB = _iec61850.ACSI_CLASS_MSVCB
ACSI_CLASS_USVCB = _iec61850.ACSI_CLASS_USVCB

def IedConnection_getLogicalNodeVariables(arg1, logicalNodeReference):
    return _iec61850.IedConnection_getLogicalNodeVariables(arg1, logicalNodeReference)
IedConnection_getLogicalNodeVariables = _iec61850.IedConnection_getLogicalNodeVariables

def IedConnection_getLogicalNodeDirectory(arg1, logicalNodeReference, acsiClass):
    return _iec61850.IedConnection_getLogicalNodeDirectory(arg1, logicalNodeReference, acsiClass)
IedConnection_getLogicalNodeDirectory = _iec61850.IedConnection_getLogicalNodeDirectory

def IedConnection_getDataDirectory(arg1, dataReference):
    return _iec61850.IedConnection_getDataDirectory(arg1, dataReference)
IedConnection_getDataDirectory = _iec61850.IedConnection_getDataDirectory

def IedConnection_getDataDirectoryFC(arg1, dataReference):
    return _iec61850.IedConnection_getDataDirectoryFC(arg1, dataReference)
IedConnection_getDataDirectoryFC = _iec61850.IedConnection_getDataDirectoryFC

def IedConnection_getDataDirectoryByFC(arg1, dataReference, fc):
    return _iec61850.IedConnection_getDataDirectoryByFC(arg1, dataReference, fc)
IedConnection_getDataDirectoryByFC = _iec61850.IedConnection_getDataDirectoryByFC

def IedConnection_getVariableSpecification(arg1, dataAttributeReference, fc):
    return _iec61850.IedConnection_getVariableSpecification(arg1, dataAttributeReference, fc)
IedConnection_getVariableSpecification = _iec61850.IedConnection_getVariableSpecification

def IedConnection_queryLogByTime(arg1, logReference, startTime, endTime, moreFollows):
    return _iec61850.IedConnection_queryLogByTime(arg1, logReference, startTime, endTime, moreFollows)
IedConnection_queryLogByTime = _iec61850.IedConnection_queryLogByTime

def IedConnection_queryLogAfter(arg1, logReference, entryID, timeStamp, moreFollows):
    return _iec61850.IedConnection_queryLogAfter(arg1, logReference, entryID, timeStamp, moreFollows)
IedConnection_queryLogAfter = _iec61850.IedConnection_queryLogAfter

def FileDirectoryEntry_create(fileName, fileSize, lastModified):
    return _iec61850.FileDirectoryEntry_create(fileName, fileSize, lastModified)
FileDirectoryEntry_create = _iec61850.FileDirectoryEntry_create

def FileDirectoryEntry_destroy(arg1):
    return _iec61850.FileDirectoryEntry_destroy(arg1)
FileDirectoryEntry_destroy = _iec61850.FileDirectoryEntry_destroy

def FileDirectoryEntry_getFileName(arg1):
    return _iec61850.FileDirectoryEntry_getFileName(arg1)
FileDirectoryEntry_getFileName = _iec61850.FileDirectoryEntry_getFileName

def FileDirectoryEntry_getFileSize(arg1):
    return _iec61850.FileDirectoryEntry_getFileSize(arg1)
FileDirectoryEntry_getFileSize = _iec61850.FileDirectoryEntry_getFileSize

def FileDirectoryEntry_getLastModified(arg1):
    return _iec61850.FileDirectoryEntry_getLastModified(arg1)
FileDirectoryEntry_getLastModified = _iec61850.FileDirectoryEntry_getLastModified

def IedConnection_getFileDirectory(arg1, directoryName):
    return _iec61850.IedConnection_getFileDirectory(arg1, directoryName)
IedConnection_getFileDirectory = _iec61850.IedConnection_getFileDirectory

def IedConnection_getFile(arg1, fileName, handler, handlerParameter):
    return _iec61850.IedConnection_getFile(arg1, fileName, handler, handlerParameter)
IedConnection_getFile = _iec61850.IedConnection_getFile

def IedConnection_setFile(arg1, sourceFilename, destinationFilename):
    return _iec61850.IedConnection_setFile(arg1, sourceFilename, destinationFilename)
IedConnection_setFile = _iec61850.IedConnection_setFile

def IedConnection_deleteFile(arg1, fileName):
    return _iec61850.IedConnection_deleteFile(arg1, fileName)
IedConnection_deleteFile = _iec61850.IedConnection_deleteFile
ACSE_AUTH_NONE = _iec61850.ACSE_AUTH_NONE
ACSE_AUTH_PASSWORD = _iec61850.ACSE_AUTH_PASSWORD
class sAcseAuthenticationParameter(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sAcseAuthenticationParameter, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sAcseAuthenticationParameter, name)
    __repr__ = _swig_repr
    __swig_setmethods__["mechanism"] = _iec61850.sAcseAuthenticationParameter_mechanism_set
    __swig_getmethods__["mechanism"] = _iec61850.sAcseAuthenticationParameter_mechanism_get
    if _newclass:
        mechanism = _swig_property(_iec61850.sAcseAuthenticationParameter_mechanism_get, _iec61850.sAcseAuthenticationParameter_mechanism_set)

    def __init__(self):
        this = _iec61850.new_sAcseAuthenticationParameter()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sAcseAuthenticationParameter
    __del__ = lambda self: None
sAcseAuthenticationParameter_swigregister = _iec61850.sAcseAuthenticationParameter_swigregister
sAcseAuthenticationParameter_swigregister(sAcseAuthenticationParameter)


def AcseAuthenticationParameter_create():
    return _iec61850.AcseAuthenticationParameter_create()
AcseAuthenticationParameter_create = _iec61850.AcseAuthenticationParameter_create

def AcseAuthenticationParameter_destroy(arg1):
    return _iec61850.AcseAuthenticationParameter_destroy(arg1)
AcseAuthenticationParameter_destroy = _iec61850.AcseAuthenticationParameter_destroy

def AcseAuthenticationParameter_setAuthMechanism(arg1, mechanism):
    return _iec61850.AcseAuthenticationParameter_setAuthMechanism(arg1, mechanism)
AcseAuthenticationParameter_setAuthMechanism = _iec61850.AcseAuthenticationParameter_setAuthMechanism

def AcseAuthenticationParameter_setPassword(arg1, password):
    return _iec61850.AcseAuthenticationParameter_setPassword(arg1, password)
AcseAuthenticationParameter_setPassword = _iec61850.AcseAuthenticationParameter_setPassword
class TSelector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TSelector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TSelector, name)
    __repr__ = _swig_repr
    __swig_setmethods__["size"] = _iec61850.TSelector_size_set
    __swig_getmethods__["size"] = _iec61850.TSelector_size_get
    if _newclass:
        size = _swig_property(_iec61850.TSelector_size_get, _iec61850.TSelector_size_set)
    __swig_setmethods__["value"] = _iec61850.TSelector_value_set
    __swig_getmethods__["value"] = _iec61850.TSelector_value_get
    if _newclass:
        value = _swig_property(_iec61850.TSelector_value_get, _iec61850.TSelector_value_set)

    def __init__(self):
        this = _iec61850.new_TSelector()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_TSelector
    __del__ = lambda self: None
TSelector_swigregister = _iec61850.TSelector_swigregister
TSelector_swigregister(TSelector)

class SSelector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SSelector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SSelector, name)
    __repr__ = _swig_repr
    __swig_setmethods__["size"] = _iec61850.SSelector_size_set
    __swig_getmethods__["size"] = _iec61850.SSelector_size_get
    if _newclass:
        size = _swig_property(_iec61850.SSelector_size_get, _iec61850.SSelector_size_set)
    __swig_setmethods__["value"] = _iec61850.SSelector_value_set
    __swig_getmethods__["value"] = _iec61850.SSelector_value_get
    if _newclass:
        value = _swig_property(_iec61850.SSelector_value_get, _iec61850.SSelector_value_set)

    def __init__(self):
        this = _iec61850.new_SSelector()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_SSelector
    __del__ = lambda self: None
SSelector_swigregister = _iec61850.SSelector_swigregister
SSelector_swigregister(SSelector)

class sIsoConnectionParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sIsoConnectionParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sIsoConnectionParameters, name)
    __repr__ = _swig_repr
    __swig_setmethods__["acseAuthParameter"] = _iec61850.sIsoConnectionParameters_acseAuthParameter_set
    __swig_getmethods__["acseAuthParameter"] = _iec61850.sIsoConnectionParameters_acseAuthParameter_get
    if _newclass:
        acseAuthParameter = _swig_property(_iec61850.sIsoConnectionParameters_acseAuthParameter_get, _iec61850.sIsoConnectionParameters_acseAuthParameter_set)
    __swig_setmethods__["hostname"] = _iec61850.sIsoConnectionParameters_hostname_set
    __swig_getmethods__["hostname"] = _iec61850.sIsoConnectionParameters_hostname_get
    if _newclass:
        hostname = _swig_property(_iec61850.sIsoConnectionParameters_hostname_get, _iec61850.sIsoConnectionParameters_hostname_set)
    __swig_setmethods__["tcpPort"] = _iec61850.sIsoConnectionParameters_tcpPort_set
    __swig_getmethods__["tcpPort"] = _iec61850.sIsoConnectionParameters_tcpPort_get
    if _newclass:
        tcpPort = _swig_property(_iec61850.sIsoConnectionParameters_tcpPort_get, _iec61850.sIsoConnectionParameters_tcpPort_set)
    __swig_setmethods__["remoteApTitle"] = _iec61850.sIsoConnectionParameters_remoteApTitle_set
    __swig_getmethods__["remoteApTitle"] = _iec61850.sIsoConnectionParameters_remoteApTitle_get
    if _newclass:
        remoteApTitle = _swig_property(_iec61850.sIsoConnectionParameters_remoteApTitle_get, _iec61850.sIsoConnectionParameters_remoteApTitle_set)
    __swig_setmethods__["remoteApTitleLen"] = _iec61850.sIsoConnectionParameters_remoteApTitleLen_set
    __swig_getmethods__["remoteApTitleLen"] = _iec61850.sIsoConnectionParameters_remoteApTitleLen_get
    if _newclass:
        remoteApTitleLen = _swig_property(_iec61850.sIsoConnectionParameters_remoteApTitleLen_get, _iec61850.sIsoConnectionParameters_remoteApTitleLen_set)
    __swig_setmethods__["remoteAEQualifier"] = _iec61850.sIsoConnectionParameters_remoteAEQualifier_set
    __swig_getmethods__["remoteAEQualifier"] = _iec61850.sIsoConnectionParameters_remoteAEQualifier_get
    if _newclass:
        remoteAEQualifier = _swig_property(_iec61850.sIsoConnectionParameters_remoteAEQualifier_get, _iec61850.sIsoConnectionParameters_remoteAEQualifier_set)
    __swig_setmethods__["remotePSelector"] = _iec61850.sIsoConnectionParameters_remotePSelector_set
    __swig_getmethods__["remotePSelector"] = _iec61850.sIsoConnectionParameters_remotePSelector_get
    if _newclass:
        remotePSelector = _swig_property(_iec61850.sIsoConnectionParameters_remotePSelector_get, _iec61850.sIsoConnectionParameters_remotePSelector_set)
    __swig_setmethods__["remoteSSelector"] = _iec61850.sIsoConnectionParameters_remoteSSelector_set
    __swig_getmethods__["remoteSSelector"] = _iec61850.sIsoConnectionParameters_remoteSSelector_get
    if _newclass:
        remoteSSelector = _swig_property(_iec61850.sIsoConnectionParameters_remoteSSelector_get, _iec61850.sIsoConnectionParameters_remoteSSelector_set)
    __swig_setmethods__["remoteTSelector"] = _iec61850.sIsoConnectionParameters_remoteTSelector_set
    __swig_getmethods__["remoteTSelector"] = _iec61850.sIsoConnectionParameters_remoteTSelector_get
    if _newclass:
        remoteTSelector = _swig_property(_iec61850.sIsoConnectionParameters_remoteTSelector_get, _iec61850.sIsoConnectionParameters_remoteTSelector_set)
    __swig_setmethods__["localApTitle"] = _iec61850.sIsoConnectionParameters_localApTitle_set
    __swig_getmethods__["localApTitle"] = _iec61850.sIsoConnectionParameters_localApTitle_get
    if _newclass:
        localApTitle = _swig_property(_iec61850.sIsoConnectionParameters_localApTitle_get, _iec61850.sIsoConnectionParameters_localApTitle_set)
    __swig_setmethods__["localApTitleLen"] = _iec61850.sIsoConnectionParameters_localApTitleLen_set
    __swig_getmethods__["localApTitleLen"] = _iec61850.sIsoConnectionParameters_localApTitleLen_get
    if _newclass:
        localApTitleLen = _swig_property(_iec61850.sIsoConnectionParameters_localApTitleLen_get, _iec61850.sIsoConnectionParameters_localApTitleLen_set)
    __swig_setmethods__["localAEQualifier"] = _iec61850.sIsoConnectionParameters_localAEQualifier_set
    __swig_getmethods__["localAEQualifier"] = _iec61850.sIsoConnectionParameters_localAEQualifier_get
    if _newclass:
        localAEQualifier = _swig_property(_iec61850.sIsoConnectionParameters_localAEQualifier_get, _iec61850.sIsoConnectionParameters_localAEQualifier_set)
    __swig_setmethods__["localPSelector"] = _iec61850.sIsoConnectionParameters_localPSelector_set
    __swig_getmethods__["localPSelector"] = _iec61850.sIsoConnectionParameters_localPSelector_get
    if _newclass:
        localPSelector = _swig_property(_iec61850.sIsoConnectionParameters_localPSelector_get, _iec61850.sIsoConnectionParameters_localPSelector_set)
    __swig_setmethods__["localSSelector"] = _iec61850.sIsoConnectionParameters_localSSelector_set
    __swig_getmethods__["localSSelector"] = _iec61850.sIsoConnectionParameters_localSSelector_get
    if _newclass:
        localSSelector = _swig_property(_iec61850.sIsoConnectionParameters_localSSelector_get, _iec61850.sIsoConnectionParameters_localSSelector_set)
    __swig_setmethods__["localTSelector"] = _iec61850.sIsoConnectionParameters_localTSelector_set
    __swig_getmethods__["localTSelector"] = _iec61850.sIsoConnectionParameters_localTSelector_get
    if _newclass:
        localTSelector = _swig_property(_iec61850.sIsoConnectionParameters_localTSelector_get, _iec61850.sIsoConnectionParameters_localTSelector_set)

    def __init__(self):
        this = _iec61850.new_sIsoConnectionParameters()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sIsoConnectionParameters
    __del__ = lambda self: None
sIsoConnectionParameters_swigregister = _iec61850.sIsoConnectionParameters_swigregister
sIsoConnectionParameters_swigregister(sIsoConnectionParameters)


def IsoConnectionParameters_create():
    return _iec61850.IsoConnectionParameters_create()
IsoConnectionParameters_create = _iec61850.IsoConnectionParameters_create

def IsoConnectionParameters_destroy(arg1):
    return _iec61850.IsoConnectionParameters_destroy(arg1)
IsoConnectionParameters_destroy = _iec61850.IsoConnectionParameters_destroy

def IsoConnectionParameters_setAcseAuthenticationParameter(arg1, acseAuthParameter):
    return _iec61850.IsoConnectionParameters_setAcseAuthenticationParameter(arg1, acseAuthParameter)
IsoConnectionParameters_setAcseAuthenticationParameter = _iec61850.IsoConnectionParameters_setAcseAuthenticationParameter

def IsoConnectionParameters_setTcpParameters(arg1, hostname, tcpPort):
    return _iec61850.IsoConnectionParameters_setTcpParameters(arg1, hostname, tcpPort)
IsoConnectionParameters_setTcpParameters = _iec61850.IsoConnectionParameters_setTcpParameters

def IsoConnectionParameters_setRemoteApTitle(arg1, apTitle, aeQualifier):
    return _iec61850.IsoConnectionParameters_setRemoteApTitle(arg1, apTitle, aeQualifier)
IsoConnectionParameters_setRemoteApTitle = _iec61850.IsoConnectionParameters_setRemoteApTitle

def IsoConnectionParameters_setRemoteAddresses(arg1, pSelector, sSelector, tSelector):
    return _iec61850.IsoConnectionParameters_setRemoteAddresses(arg1, pSelector, sSelector, tSelector)
IsoConnectionParameters_setRemoteAddresses = _iec61850.IsoConnectionParameters_setRemoteAddresses

def IsoConnectionParameters_setLocalApTitle(arg1, apTitle, aeQualifier):
    return _iec61850.IsoConnectionParameters_setLocalApTitle(arg1, apTitle, aeQualifier)
IsoConnectionParameters_setLocalApTitle = _iec61850.IsoConnectionParameters_setLocalApTitle

def IsoConnectionParameters_setLocalAddresses(arg1, pSelector, sSelector, tSelector):
    return _iec61850.IsoConnectionParameters_setLocalAddresses(arg1, pSelector, sSelector, tSelector)
IsoConnectionParameters_setLocalAddresses = _iec61850.IsoConnectionParameters_setLocalAddresses
class MmsConnectionParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MmsConnectionParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MmsConnectionParameters, name)
    __repr__ = _swig_repr
    __swig_setmethods__["maxServOutstandingCalling"] = _iec61850.MmsConnectionParameters_maxServOutstandingCalling_set
    __swig_getmethods__["maxServOutstandingCalling"] = _iec61850.MmsConnectionParameters_maxServOutstandingCalling_get
    if _newclass:
        maxServOutstandingCalling = _swig_property(_iec61850.MmsConnectionParameters_maxServOutstandingCalling_get, _iec61850.MmsConnectionParameters_maxServOutstandingCalling_set)
    __swig_setmethods__["maxServOutstandingCalled"] = _iec61850.MmsConnectionParameters_maxServOutstandingCalled_set
    __swig_getmethods__["maxServOutstandingCalled"] = _iec61850.MmsConnectionParameters_maxServOutstandingCalled_get
    if _newclass:
        maxServOutstandingCalled = _swig_property(_iec61850.MmsConnectionParameters_maxServOutstandingCalled_get, _iec61850.MmsConnectionParameters_maxServOutstandingCalled_set)
    __swig_setmethods__["dataStructureNestingLevel"] = _iec61850.MmsConnectionParameters_dataStructureNestingLevel_set
    __swig_getmethods__["dataStructureNestingLevel"] = _iec61850.MmsConnectionParameters_dataStructureNestingLevel_get
    if _newclass:
        dataStructureNestingLevel = _swig_property(_iec61850.MmsConnectionParameters_dataStructureNestingLevel_get, _iec61850.MmsConnectionParameters_dataStructureNestingLevel_set)
    __swig_setmethods__["maxPduSize"] = _iec61850.MmsConnectionParameters_maxPduSize_set
    __swig_getmethods__["maxPduSize"] = _iec61850.MmsConnectionParameters_maxPduSize_get
    if _newclass:
        maxPduSize = _swig_property(_iec61850.MmsConnectionParameters_maxPduSize_get, _iec61850.MmsConnectionParameters_maxPduSize_set)
    __swig_setmethods__["servicesSupported"] = _iec61850.MmsConnectionParameters_servicesSupported_set
    __swig_getmethods__["servicesSupported"] = _iec61850.MmsConnectionParameters_servicesSupported_get
    if _newclass:
        servicesSupported = _swig_property(_iec61850.MmsConnectionParameters_servicesSupported_get, _iec61850.MmsConnectionParameters_servicesSupported_set)

    def __init__(self):
        this = _iec61850.new_MmsConnectionParameters()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_MmsConnectionParameters
    __del__ = lambda self: None
MmsConnectionParameters_swigregister = _iec61850.MmsConnectionParameters_swigregister
MmsConnectionParameters_swigregister(MmsConnectionParameters)

class MmsServerIdentity(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MmsServerIdentity, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MmsServerIdentity, name)
    __repr__ = _swig_repr
    __swig_setmethods__["vendorName"] = _iec61850.MmsServerIdentity_vendorName_set
    __swig_getmethods__["vendorName"] = _iec61850.MmsServerIdentity_vendorName_get
    if _newclass:
        vendorName = _swig_property(_iec61850.MmsServerIdentity_vendorName_get, _iec61850.MmsServerIdentity_vendorName_set)
    __swig_setmethods__["modelName"] = _iec61850.MmsServerIdentity_modelName_set
    __swig_getmethods__["modelName"] = _iec61850.MmsServerIdentity_modelName_get
    if _newclass:
        modelName = _swig_property(_iec61850.MmsServerIdentity_modelName_get, _iec61850.MmsServerIdentity_modelName_set)
    __swig_setmethods__["revision"] = _iec61850.MmsServerIdentity_revision_set
    __swig_getmethods__["revision"] = _iec61850.MmsServerIdentity_revision_get
    if _newclass:
        revision = _swig_property(_iec61850.MmsServerIdentity_revision_get, _iec61850.MmsServerIdentity_revision_set)

    def __init__(self):
        this = _iec61850.new_MmsServerIdentity()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_MmsServerIdentity
    __del__ = lambda self: None
MmsServerIdentity_swigregister = _iec61850.MmsServerIdentity_swigregister
MmsServerIdentity_swigregister(MmsServerIdentity)


def MmsConnection_create():
    return _iec61850.MmsConnection_create()
MmsConnection_create = _iec61850.MmsConnection_create

def MmsConnection_setRawMessageHandler(arg1, handler, parameter):
    return _iec61850.MmsConnection_setRawMessageHandler(arg1, handler, parameter)
MmsConnection_setRawMessageHandler = _iec61850.MmsConnection_setRawMessageHandler

def MmsConnection_setRequestTimeout(arg1, timeoutInMs):
    return _iec61850.MmsConnection_setRequestTimeout(arg1, timeoutInMs)
MmsConnection_setRequestTimeout = _iec61850.MmsConnection_setRequestTimeout

def MmsConnection_setConnectTimeout(arg1, timeoutInMs):
    return _iec61850.MmsConnection_setConnectTimeout(arg1, timeoutInMs)
MmsConnection_setConnectTimeout = _iec61850.MmsConnection_setConnectTimeout

def MmsConnection_setInformationReportHandler(arg1, handler, parameter):
    return _iec61850.MmsConnection_setInformationReportHandler(arg1, handler, parameter)
MmsConnection_setInformationReportHandler = _iec61850.MmsConnection_setInformationReportHandler

def MmsConnection_getIsoConnectionParameters(arg1):
    return _iec61850.MmsConnection_getIsoConnectionParameters(arg1)
MmsConnection_getIsoConnectionParameters = _iec61850.MmsConnection_getIsoConnectionParameters

def MmsConnection_getMmsConnectionParameters(arg1):
    return _iec61850.MmsConnection_getMmsConnectionParameters(arg1)
MmsConnection_getMmsConnectionParameters = _iec61850.MmsConnection_getMmsConnectionParameters

def MmsConnection_setConnectionLostHandler(arg1, handler, handlerParameter):
    return _iec61850.MmsConnection_setConnectionLostHandler(arg1, handler, handlerParameter)
MmsConnection_setConnectionLostHandler = _iec61850.MmsConnection_setConnectionLostHandler

def MmsConnection_destroy(arg1):
    return _iec61850.MmsConnection_destroy(arg1)
MmsConnection_destroy = _iec61850.MmsConnection_destroy

def MmsConnection_connect(arg1, mmsError, serverName, serverPort):
    return _iec61850.MmsConnection_connect(arg1, mmsError, serverName, serverPort)
MmsConnection_connect = _iec61850.MmsConnection_connect

def MmsConnection_close(arg1):
    return _iec61850.MmsConnection_close(arg1)
MmsConnection_close = _iec61850.MmsConnection_close

def MmsConnection_abort(arg1, mmsError):
    return _iec61850.MmsConnection_abort(arg1, mmsError)
MmsConnection_abort = _iec61850.MmsConnection_abort

def MmsConnection_conclude(arg1, mmsError):
    return _iec61850.MmsConnection_conclude(arg1, mmsError)
MmsConnection_conclude = _iec61850.MmsConnection_conclude

def MmsConnection_getVMDVariableNames(arg1, mmsError):
    return _iec61850.MmsConnection_getVMDVariableNames(arg1, mmsError)
MmsConnection_getVMDVariableNames = _iec61850.MmsConnection_getVMDVariableNames

def MmsConnection_getDomainNames(arg1, mmsError):
    return _iec61850.MmsConnection_getDomainNames(arg1, mmsError)
MmsConnection_getDomainNames = _iec61850.MmsConnection_getDomainNames

def MmsConnection_getDomainVariableNames(arg1, mmsError, domainId):
    return _iec61850.MmsConnection_getDomainVariableNames(arg1, mmsError, domainId)
MmsConnection_getDomainVariableNames = _iec61850.MmsConnection_getDomainVariableNames

def MmsConnection_getDomainVariableListNames(arg1, mmsError, domainId):
    return _iec61850.MmsConnection_getDomainVariableListNames(arg1, mmsError, domainId)
MmsConnection_getDomainVariableListNames = _iec61850.MmsConnection_getDomainVariableListNames

def MmsConnection_getDomainJournals(arg1, mmsError, domainId):
    return _iec61850.MmsConnection_getDomainJournals(arg1, mmsError, domainId)
MmsConnection_getDomainJournals = _iec61850.MmsConnection_getDomainJournals

def MmsConnection_getVariableListNamesAssociationSpecific(arg1, mmsError):
    return _iec61850.MmsConnection_getVariableListNamesAssociationSpecific(arg1, mmsError)
MmsConnection_getVariableListNamesAssociationSpecific = _iec61850.MmsConnection_getVariableListNamesAssociationSpecific

def MmsConnection_readVariable(arg1, mmsError, domainId, itemId):
    return _iec61850.MmsConnection_readVariable(arg1, mmsError, domainId, itemId)
MmsConnection_readVariable = _iec61850.MmsConnection_readVariable

def MmsConnection_readArrayElements(arg1, mmsError, domainId, itemId, startIndex, numberOfElements):
    return _iec61850.MmsConnection_readArrayElements(arg1, mmsError, domainId, itemId, startIndex, numberOfElements)
MmsConnection_readArrayElements = _iec61850.MmsConnection_readArrayElements

def MmsConnection_readMultipleVariables(arg1, mmsError, domainId, items):
    return _iec61850.MmsConnection_readMultipleVariables(arg1, mmsError, domainId, items)
MmsConnection_readMultipleVariables = _iec61850.MmsConnection_readMultipleVariables

def MmsConnection_writeVariable(arg1, mmsError, domainId, itemId, value):
    return _iec61850.MmsConnection_writeVariable(arg1, mmsError, domainId, itemId, value)
MmsConnection_writeVariable = _iec61850.MmsConnection_writeVariable

def MmsConnection_writeMultipleVariables(arg1, mmsError, domainId, items, values, accessResults):
    return _iec61850.MmsConnection_writeMultipleVariables(arg1, mmsError, domainId, items, values, accessResults)
MmsConnection_writeMultipleVariables = _iec61850.MmsConnection_writeMultipleVariables

def MmsConnection_getVariableAccessAttributes(arg1, mmsError, domainId, itemId):
    return _iec61850.MmsConnection_getVariableAccessAttributes(arg1, mmsError, domainId, itemId)
MmsConnection_getVariableAccessAttributes = _iec61850.MmsConnection_getVariableAccessAttributes

def MmsConnection_readNamedVariableListValues(arg1, mmsError, domainId, listName, specWithResult):
    return _iec61850.MmsConnection_readNamedVariableListValues(arg1, mmsError, domainId, listName, specWithResult)
MmsConnection_readNamedVariableListValues = _iec61850.MmsConnection_readNamedVariableListValues

def MmsConnection_readNamedVariableListValuesAssociationSpecific(arg1, mmsError, listName, specWithResult):
    return _iec61850.MmsConnection_readNamedVariableListValuesAssociationSpecific(arg1, mmsError, listName, specWithResult)
MmsConnection_readNamedVariableListValuesAssociationSpecific = _iec61850.MmsConnection_readNamedVariableListValuesAssociationSpecific

def MmsConnection_defineNamedVariableList(arg1, mmsError, domainId, listName, variableSpecs):
    return _iec61850.MmsConnection_defineNamedVariableList(arg1, mmsError, domainId, listName, variableSpecs)
MmsConnection_defineNamedVariableList = _iec61850.MmsConnection_defineNamedVariableList

def MmsConnection_defineNamedVariableListAssociationSpecific(arg1, mmsError, listName, variableSpecs):
    return _iec61850.MmsConnection_defineNamedVariableListAssociationSpecific(arg1, mmsError, listName, variableSpecs)
MmsConnection_defineNamedVariableListAssociationSpecific = _iec61850.MmsConnection_defineNamedVariableListAssociationSpecific

def MmsConnection_readNamedVariableListDirectory(arg1, mmsError, domainId, listName, deletable):
    return _iec61850.MmsConnection_readNamedVariableListDirectory(arg1, mmsError, domainId, listName, deletable)
MmsConnection_readNamedVariableListDirectory = _iec61850.MmsConnection_readNamedVariableListDirectory

def MmsConnection_readNamedVariableListDirectoryAssociationSpecific(arg1, mmsError, listName, deletable):
    return _iec61850.MmsConnection_readNamedVariableListDirectoryAssociationSpecific(arg1, mmsError, listName, deletable)
MmsConnection_readNamedVariableListDirectoryAssociationSpecific = _iec61850.MmsConnection_readNamedVariableListDirectoryAssociationSpecific

def MmsConnection_deleteNamedVariableList(arg1, mmsError, domainId, listName):
    return _iec61850.MmsConnection_deleteNamedVariableList(arg1, mmsError, domainId, listName)
MmsConnection_deleteNamedVariableList = _iec61850.MmsConnection_deleteNamedVariableList

def MmsConnection_deleteAssociationSpecificNamedVariableList(arg1, mmsError, listName):
    return _iec61850.MmsConnection_deleteAssociationSpecificNamedVariableList(arg1, mmsError, listName)
MmsConnection_deleteAssociationSpecificNamedVariableList = _iec61850.MmsConnection_deleteAssociationSpecificNamedVariableList

def MmsVariableAccessSpecification_create(domainId, itemId):
    return _iec61850.MmsVariableAccessSpecification_create(domainId, itemId)
MmsVariableAccessSpecification_create = _iec61850.MmsVariableAccessSpecification_create

def MmsVariableAccessSpecification_createAlternateAccess(domainId, itemId, index, componentName):
    return _iec61850.MmsVariableAccessSpecification_createAlternateAccess(domainId, itemId, index, componentName)
MmsVariableAccessSpecification_createAlternateAccess = _iec61850.MmsVariableAccessSpecification_createAlternateAccess

def MmsVariableAccessSpecification_destroy(arg1):
    return _iec61850.MmsVariableAccessSpecification_destroy(arg1)
MmsVariableAccessSpecification_destroy = _iec61850.MmsVariableAccessSpecification_destroy

def MmsConnection_setLocalDetail(arg1, localDetail):
    return _iec61850.MmsConnection_setLocalDetail(arg1, localDetail)
MmsConnection_setLocalDetail = _iec61850.MmsConnection_setLocalDetail

def MmsConnection_getLocalDetail(arg1):
    return _iec61850.MmsConnection_getLocalDetail(arg1)
MmsConnection_getLocalDetail = _iec61850.MmsConnection_getLocalDetail

def MmsConnection_identify(arg1, mmsError):
    return _iec61850.MmsConnection_identify(arg1, mmsError)
MmsConnection_identify = _iec61850.MmsConnection_identify

def MmsServerIdentity_destroy(arg1):
    return _iec61850.MmsServerIdentity_destroy(arg1)
MmsServerIdentity_destroy = _iec61850.MmsServerIdentity_destroy

def MmsConnection_getServerStatus(arg1, mmsError, vmdLogicalStatus, vmdPhysicalStatus, extendedDerivation):
    return _iec61850.MmsConnection_getServerStatus(arg1, mmsError, vmdLogicalStatus, vmdPhysicalStatus, extendedDerivation)
MmsConnection_getServerStatus = _iec61850.MmsConnection_getServerStatus

def MmsConnection_fileOpen(arg1, mmsError, filename, initialPosition, fileSize, lastModified):
    return _iec61850.MmsConnection_fileOpen(arg1, mmsError, filename, initialPosition, fileSize, lastModified)
MmsConnection_fileOpen = _iec61850.MmsConnection_fileOpen

def MmsConnection_fileRead(arg1, mmsError, frsmId, handler, handlerParameter):
    return _iec61850.MmsConnection_fileRead(arg1, mmsError, frsmId, handler, handlerParameter)
MmsConnection_fileRead = _iec61850.MmsConnection_fileRead

def MmsConnection_fileClose(arg1, mmsError, frsmId):
    return _iec61850.MmsConnection_fileClose(arg1, mmsError, frsmId)
MmsConnection_fileClose = _iec61850.MmsConnection_fileClose

def MmsConnection_fileDelete(arg1, mmsError, fileName):
    return _iec61850.MmsConnection_fileDelete(arg1, mmsError, fileName)
MmsConnection_fileDelete = _iec61850.MmsConnection_fileDelete

def MmsConnection_fileRename(arg1, mmsError, currentFileName, newFileName):
    return _iec61850.MmsConnection_fileRename(arg1, mmsError, currentFileName, newFileName)
MmsConnection_fileRename = _iec61850.MmsConnection_fileRename

def MmsConnection_obtainFile(arg1, mmsError, sourceFile, destinationFile):
    return _iec61850.MmsConnection_obtainFile(arg1, mmsError, sourceFile, destinationFile)
MmsConnection_obtainFile = _iec61850.MmsConnection_obtainFile

def MmsConnection_getFileDirectory(arg1, mmsError, fileSpecification, continueAfter, handler, handlerParameter):
    return _iec61850.MmsConnection_getFileDirectory(arg1, mmsError, fileSpecification, continueAfter, handler, handlerParameter)
MmsConnection_getFileDirectory = _iec61850.MmsConnection_getFileDirectory
class sMmsJournalEntry(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sMmsJournalEntry, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sMmsJournalEntry, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entryID"] = _iec61850.sMmsJournalEntry_entryID_set
    __swig_getmethods__["entryID"] = _iec61850.sMmsJournalEntry_entryID_get
    if _newclass:
        entryID = _swig_property(_iec61850.sMmsJournalEntry_entryID_get, _iec61850.sMmsJournalEntry_entryID_set)
    __swig_setmethods__["occurenceTime"] = _iec61850.sMmsJournalEntry_occurenceTime_set
    __swig_getmethods__["occurenceTime"] = _iec61850.sMmsJournalEntry_occurenceTime_get
    if _newclass:
        occurenceTime = _swig_property(_iec61850.sMmsJournalEntry_occurenceTime_get, _iec61850.sMmsJournalEntry_occurenceTime_set)
    __swig_setmethods__["journalVariables"] = _iec61850.sMmsJournalEntry_journalVariables_set
    __swig_getmethods__["journalVariables"] = _iec61850.sMmsJournalEntry_journalVariables_get
    if _newclass:
        journalVariables = _swig_property(_iec61850.sMmsJournalEntry_journalVariables_get, _iec61850.sMmsJournalEntry_journalVariables_set)

    def __init__(self):
        this = _iec61850.new_sMmsJournalEntry()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sMmsJournalEntry
    __del__ = lambda self: None
sMmsJournalEntry_swigregister = _iec61850.sMmsJournalEntry_swigregister
sMmsJournalEntry_swigregister(sMmsJournalEntry)

class sMmsJournalVariable(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sMmsJournalVariable, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sMmsJournalVariable, name)
    __repr__ = _swig_repr
    __swig_setmethods__["tag"] = _iec61850.sMmsJournalVariable_tag_set
    __swig_getmethods__["tag"] = _iec61850.sMmsJournalVariable_tag_get
    if _newclass:
        tag = _swig_property(_iec61850.sMmsJournalVariable_tag_get, _iec61850.sMmsJournalVariable_tag_set)
    __swig_setmethods__["value"] = _iec61850.sMmsJournalVariable_value_set
    __swig_getmethods__["value"] = _iec61850.sMmsJournalVariable_value_get
    if _newclass:
        value = _swig_property(_iec61850.sMmsJournalVariable_value_get, _iec61850.sMmsJournalVariable_value_set)

    def __init__(self):
        this = _iec61850.new_sMmsJournalVariable()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sMmsJournalVariable
    __del__ = lambda self: None
sMmsJournalVariable_swigregister = _iec61850.sMmsJournalVariable_swigregister
sMmsJournalVariable_swigregister(sMmsJournalVariable)


def MmsJournalEntry_destroy(arg1):
    return _iec61850.MmsJournalEntry_destroy(arg1)
MmsJournalEntry_destroy = _iec61850.MmsJournalEntry_destroy

def MmsJournalEntry_getEntryID(arg1):
    return _iec61850.MmsJournalEntry_getEntryID(arg1)
MmsJournalEntry_getEntryID = _iec61850.MmsJournalEntry_getEntryID

def MmsJournalEntry_getOccurenceTime(arg1):
    return _iec61850.MmsJournalEntry_getOccurenceTime(arg1)
MmsJournalEntry_getOccurenceTime = _iec61850.MmsJournalEntry_getOccurenceTime

def MmsJournalEntry_getJournalVariables(arg1):
    return _iec61850.MmsJournalEntry_getJournalVariables(arg1)
MmsJournalEntry_getJournalVariables = _iec61850.MmsJournalEntry_getJournalVariables

def MmsJournalVariable_getTag(arg1):
    return _iec61850.MmsJournalVariable_getTag(arg1)
MmsJournalVariable_getTag = _iec61850.MmsJournalVariable_getTag

def MmsJournalVariable_getValue(arg1):
    return _iec61850.MmsJournalVariable_getValue(arg1)
MmsJournalVariable_getValue = _iec61850.MmsJournalVariable_getValue

def MmsConnection_readJournalTimeRange(arg1, mmsError, domainId, itemId, startingTime, endingTime, moreFollows):
    return _iec61850.MmsConnection_readJournalTimeRange(arg1, mmsError, domainId, itemId, startingTime, endingTime, moreFollows)
MmsConnection_readJournalTimeRange = _iec61850.MmsConnection_readJournalTimeRange

def MmsConnection_readJournalStartAfter(arg1, mmsError, domainId, itemId, timeSpecification, entrySpecification, moreFollows):
    return _iec61850.MmsConnection_readJournalStartAfter(arg1, mmsError, domainId, itemId, timeSpecification, entrySpecification, moreFollows)
MmsConnection_readJournalStartAfter = _iec61850.MmsConnection_readJournalStartAfter
class PhyComAddress(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PhyComAddress, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PhyComAddress, name)
    __repr__ = _swig_repr
    __swig_setmethods__["vlanPriority"] = _iec61850.PhyComAddress_vlanPriority_set
    __swig_getmethods__["vlanPriority"] = _iec61850.PhyComAddress_vlanPriority_get
    if _newclass:
        vlanPriority = _swig_property(_iec61850.PhyComAddress_vlanPriority_get, _iec61850.PhyComAddress_vlanPriority_set)
    __swig_setmethods__["vlanId"] = _iec61850.PhyComAddress_vlanId_set
    __swig_getmethods__["vlanId"] = _iec61850.PhyComAddress_vlanId_get
    if _newclass:
        vlanId = _swig_property(_iec61850.PhyComAddress_vlanId_get, _iec61850.PhyComAddress_vlanId_set)
    __swig_setmethods__["appId"] = _iec61850.PhyComAddress_appId_set
    __swig_getmethods__["appId"] = _iec61850.PhyComAddress_appId_get
    if _newclass:
        appId = _swig_property(_iec61850.PhyComAddress_appId_get, _iec61850.PhyComAddress_appId_set)
    __swig_setmethods__["dstAddress"] = _iec61850.PhyComAddress_dstAddress_set
    __swig_getmethods__["dstAddress"] = _iec61850.PhyComAddress_dstAddress_get
    if _newclass:
        dstAddress = _swig_property(_iec61850.PhyComAddress_dstAddress_get, _iec61850.PhyComAddress_dstAddress_set)

    def __init__(self):
        this = _iec61850.new_PhyComAddress()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_PhyComAddress
    __del__ = lambda self: None
PhyComAddress_swigregister = _iec61850.PhyComAddress_swigregister
PhyComAddress_swigregister(PhyComAddress)

TRG_OPT_DATA_CHANGED = _iec61850.TRG_OPT_DATA_CHANGED
TRG_OPT_QUALITY_CHANGED = _iec61850.TRG_OPT_QUALITY_CHANGED
TRG_OPT_DATA_UPDATE = _iec61850.TRG_OPT_DATA_UPDATE
TRG_OPT_INTEGRITY = _iec61850.TRG_OPT_INTEGRITY
TRG_OPT_GI = _iec61850.TRG_OPT_GI
RPT_OPT_SEQ_NUM = _iec61850.RPT_OPT_SEQ_NUM
RPT_OPT_TIME_STAMP = _iec61850.RPT_OPT_TIME_STAMP
RPT_OPT_REASON_FOR_INCLUSION = _iec61850.RPT_OPT_REASON_FOR_INCLUSION
RPT_OPT_DATA_SET = _iec61850.RPT_OPT_DATA_SET
RPT_OPT_DATA_REFERENCE = _iec61850.RPT_OPT_DATA_REFERENCE
RPT_OPT_BUFFER_OVERFLOW = _iec61850.RPT_OPT_BUFFER_OVERFLOW
RPT_OPT_ENTRY_ID = _iec61850.RPT_OPT_ENTRY_ID
RPT_OPT_CONF_REV = _iec61850.RPT_OPT_CONF_REV
CONTROL_ORCAT_NOT_SUPPORTED = _iec61850.CONTROL_ORCAT_NOT_SUPPORTED
CONTROL_ORCAT_BAY_CONTROL = _iec61850.CONTROL_ORCAT_BAY_CONTROL
CONTROL_ORCAT_STATION_CONTROL = _iec61850.CONTROL_ORCAT_STATION_CONTROL
CONTROL_ORCAT_REMOTE_CONTROL = _iec61850.CONTROL_ORCAT_REMOTE_CONTROL
CONTROL_ORCAT_AUTOMATIC_BAY = _iec61850.CONTROL_ORCAT_AUTOMATIC_BAY
CONTROL_ORCAT_AUTOMATIC_STATION = _iec61850.CONTROL_ORCAT_AUTOMATIC_STATION
CONTROL_ORCAT_AUTOMATIC_REMOTE = _iec61850.CONTROL_ORCAT_AUTOMATIC_REMOTE
CONTROL_ORCAT_MAINTENANCE = _iec61850.CONTROL_ORCAT_MAINTENANCE
CONTROL_ORCAT_PROCESS = _iec61850.CONTROL_ORCAT_PROCESS
ADD_CAUSE_UNKNOWN = _iec61850.ADD_CAUSE_UNKNOWN
ADD_CAUSE_NOT_SUPPORTED = _iec61850.ADD_CAUSE_NOT_SUPPORTED
ADD_CAUSE_BLOCKED_BY_SWITCHING_HIERARCHY = _iec61850.ADD_CAUSE_BLOCKED_BY_SWITCHING_HIERARCHY
ADD_CAUSE_SELECT_FAILED = _iec61850.ADD_CAUSE_SELECT_FAILED
ADD_CAUSE_INVALID_POSITION = _iec61850.ADD_CAUSE_INVALID_POSITION
ADD_CAUSE_POSITION_REACHED = _iec61850.ADD_CAUSE_POSITION_REACHED
ADD_CAUSE_PARAMETER_CHANGE_IN_EXECUTION = _iec61850.ADD_CAUSE_PARAMETER_CHANGE_IN_EXECUTION
ADD_CAUSE_STEP_LIMIT = _iec61850.ADD_CAUSE_STEP_LIMIT
ADD_CAUSE_BLOCKED_BY_MODE = _iec61850.ADD_CAUSE_BLOCKED_BY_MODE
ADD_CAUSE_BLOCKED_BY_PROCESS = _iec61850.ADD_CAUSE_BLOCKED_BY_PROCESS
ADD_CAUSE_BLOCKED_BY_INTERLOCKING = _iec61850.ADD_CAUSE_BLOCKED_BY_INTERLOCKING
ADD_CAUSE_BLOCKED_BY_SYNCHROCHECK = _iec61850.ADD_CAUSE_BLOCKED_BY_SYNCHROCHECK
ADD_CAUSE_COMMAND_ALREADY_IN_EXECUTION = _iec61850.ADD_CAUSE_COMMAND_ALREADY_IN_EXECUTION
ADD_CAUSE_BLOCKED_BY_HEALTH = _iec61850.ADD_CAUSE_BLOCKED_BY_HEALTH
ADD_CAUSE_1_OF_N_CONTROL = _iec61850.ADD_CAUSE_1_OF_N_CONTROL
ADD_CAUSE_ABORTION_BY_CANCEL = _iec61850.ADD_CAUSE_ABORTION_BY_CANCEL
ADD_CAUSE_TIME_LIMIT_OVER = _iec61850.ADD_CAUSE_TIME_LIMIT_OVER
ADD_CAUSE_ABORTION_BY_TRIP = _iec61850.ADD_CAUSE_ABORTION_BY_TRIP
ADD_CAUSE_OBJECT_NOT_SELECTED = _iec61850.ADD_CAUSE_OBJECT_NOT_SELECTED
ADD_CAUSE_OBJECT_ALREADY_SELECTED = _iec61850.ADD_CAUSE_OBJECT_ALREADY_SELECTED
ADD_CAUSE_NO_ACCESS_AUTHORITY = _iec61850.ADD_CAUSE_NO_ACCESS_AUTHORITY
ADD_CAUSE_ENDED_WITH_OVERSHOOT = _iec61850.ADD_CAUSE_ENDED_WITH_OVERSHOOT
ADD_CAUSE_ABORTION_DUE_TO_DEVIATION = _iec61850.ADD_CAUSE_ABORTION_DUE_TO_DEVIATION
ADD_CAUSE_ABORTION_BY_COMMUNICATION_LOSS = _iec61850.ADD_CAUSE_ABORTION_BY_COMMUNICATION_LOSS
ADD_CAUSE_ABORTION_BY_COMMAND = _iec61850.ADD_CAUSE_ABORTION_BY_COMMAND
ADD_CAUSE_NONE = _iec61850.ADD_CAUSE_NONE
ADD_CAUSE_INCONSISTENT_PARAMETERS = _iec61850.ADD_CAUSE_INCONSISTENT_PARAMETERS
ADD_CAUSE_LOCKED_BY_OTHER_CLIENT = _iec61850.ADD_CAUSE_LOCKED_BY_OTHER_CLIENT
IEC61850_FC_ST = _iec61850.IEC61850_FC_ST
IEC61850_FC_MX = _iec61850.IEC61850_FC_MX
IEC61850_FC_SP = _iec61850.IEC61850_FC_SP
IEC61850_FC_SV = _iec61850.IEC61850_FC_SV
IEC61850_FC_CF = _iec61850.IEC61850_FC_CF
IEC61850_FC_DC = _iec61850.IEC61850_FC_DC
IEC61850_FC_SG = _iec61850.IEC61850_FC_SG
IEC61850_FC_SE = _iec61850.IEC61850_FC_SE
IEC61850_FC_SR = _iec61850.IEC61850_FC_SR
IEC61850_FC_OR = _iec61850.IEC61850_FC_OR
IEC61850_FC_BL = _iec61850.IEC61850_FC_BL
IEC61850_FC_EX = _iec61850.IEC61850_FC_EX
IEC61850_FC_CO = _iec61850.IEC61850_FC_CO
IEC61850_FC_US = _iec61850.IEC61850_FC_US
IEC61850_FC_MS = _iec61850.IEC61850_FC_MS
IEC61850_FC_RP = _iec61850.IEC61850_FC_RP
IEC61850_FC_BR = _iec61850.IEC61850_FC_BR
IEC61850_FC_LG = _iec61850.IEC61850_FC_LG
IEC61850_FC_ALL = _iec61850.IEC61850_FC_ALL
IEC61850_FC_NONE = _iec61850.IEC61850_FC_NONE

def FunctionalConstraint_toString(fc):
    return _iec61850.FunctionalConstraint_toString(fc)
FunctionalConstraint_toString = _iec61850.FunctionalConstraint_toString

def FunctionalConstraint_fromString(fcString):
    return _iec61850.FunctionalConstraint_fromString(fcString)
FunctionalConstraint_fromString = _iec61850.FunctionalConstraint_fromString
QUALITY_VALIDITY_GOOD = _iec61850.QUALITY_VALIDITY_GOOD
QUALITY_VALIDITY_INVALID = _iec61850.QUALITY_VALIDITY_INVALID
QUALITY_VALIDITY_RESERVED = _iec61850.QUALITY_VALIDITY_RESERVED
QUALITY_VALIDITY_QUESTIONABLE = _iec61850.QUALITY_VALIDITY_QUESTIONABLE
QUALITY_DETAIL_OVERFLOW = _iec61850.QUALITY_DETAIL_OVERFLOW
QUALITY_DETAIL_OUT_OF_RANGE = _iec61850.QUALITY_DETAIL_OUT_OF_RANGE
QUALITY_DETAIL_BAD_REFERENCE = _iec61850.QUALITY_DETAIL_BAD_REFERENCE
QUALITY_DETAIL_OSCILLATORY = _iec61850.QUALITY_DETAIL_OSCILLATORY
QUALITY_DETAIL_FAILURE = _iec61850.QUALITY_DETAIL_FAILURE
QUALITY_DETAIL_OLD_DATA = _iec61850.QUALITY_DETAIL_OLD_DATA
QUALITY_DETAIL_INCONSISTENT = _iec61850.QUALITY_DETAIL_INCONSISTENT
QUALITY_DETAIL_INACCURATE = _iec61850.QUALITY_DETAIL_INACCURATE
QUALITY_SOURCE_SUBSTITUTED = _iec61850.QUALITY_SOURCE_SUBSTITUTED
QUALITY_TEST = _iec61850.QUALITY_TEST
QUALITY_OPERATOR_BLOCKED = _iec61850.QUALITY_OPERATOR_BLOCKED

def Quality_getValidity(arg1):
    return _iec61850.Quality_getValidity(arg1)
Quality_getValidity = _iec61850.Quality_getValidity

def Quality_setValidity(arg1, validity):
    return _iec61850.Quality_setValidity(arg1, validity)
Quality_setValidity = _iec61850.Quality_setValidity

def Quality_setFlag(arg1, flag):
    return _iec61850.Quality_setFlag(arg1, flag)
Quality_setFlag = _iec61850.Quality_setFlag

def Quality_unsetFlag(arg1, flag):
    return _iec61850.Quality_unsetFlag(arg1, flag)
Quality_unsetFlag = _iec61850.Quality_unsetFlag

def Quality_isFlagSet(arg1, flag):
    return _iec61850.Quality_isFlagSet(arg1, flag)
Quality_isFlagSet = _iec61850.Quality_isFlagSet

def Quality_fromMmsValue(mmsValue):
    return _iec61850.Quality_fromMmsValue(mmsValue)
Quality_fromMmsValue = _iec61850.Quality_fromMmsValue
DBPOS_INTERMEDIATE_STATE = _iec61850.DBPOS_INTERMEDIATE_STATE
DBPOS_OFF = _iec61850.DBPOS_OFF
DBPOS_ON = _iec61850.DBPOS_ON
DBPOS_BAD_STATE = _iec61850.DBPOS_BAD_STATE

def Dbpos_fromMmsValue(mmsValue):
    return _iec61850.Dbpos_fromMmsValue(mmsValue)
Dbpos_fromMmsValue = _iec61850.Dbpos_fromMmsValue

def Dbpos_toMmsValue(mmsValue, dbpos):
    return _iec61850.Dbpos_toMmsValue(mmsValue, dbpos)
Dbpos_toMmsValue = _iec61850.Dbpos_toMmsValue
class Timestamp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Timestamp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Timestamp, name)
    __repr__ = _swig_repr
    __swig_setmethods__["val"] = _iec61850.Timestamp_val_set
    __swig_getmethods__["val"] = _iec61850.Timestamp_val_get
    if _newclass:
        val = _swig_property(_iec61850.Timestamp_val_get, _iec61850.Timestamp_val_set)

    def __init__(self):
        this = _iec61850.new_Timestamp()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_Timestamp
    __del__ = lambda self: None
Timestamp_swigregister = _iec61850.Timestamp_swigregister
Timestamp_swigregister(Timestamp)


def Timestamp_clearFlags(arg1):
    return _iec61850.Timestamp_clearFlags(arg1)
Timestamp_clearFlags = _iec61850.Timestamp_clearFlags

def Timestamp_getTimeInSeconds(arg1):
    return _iec61850.Timestamp_getTimeInSeconds(arg1)
Timestamp_getTimeInSeconds = _iec61850.Timestamp_getTimeInSeconds

def Timestamp_getTimeInMs(arg1):
    return _iec61850.Timestamp_getTimeInMs(arg1)
Timestamp_getTimeInMs = _iec61850.Timestamp_getTimeInMs

def Timestamp_isLeapSecondKnown(arg1):
    return _iec61850.Timestamp_isLeapSecondKnown(arg1)
Timestamp_isLeapSecondKnown = _iec61850.Timestamp_isLeapSecondKnown

def Timestamp_setLeapSecondKnown(arg1, value):
    return _iec61850.Timestamp_setLeapSecondKnown(arg1, value)
Timestamp_setLeapSecondKnown = _iec61850.Timestamp_setLeapSecondKnown

def Timestamp_hasClockFailure(arg1):
    return _iec61850.Timestamp_hasClockFailure(arg1)
Timestamp_hasClockFailure = _iec61850.Timestamp_hasClockFailure

def Timestamp_setClockFailure(arg1, value):
    return _iec61850.Timestamp_setClockFailure(arg1, value)
Timestamp_setClockFailure = _iec61850.Timestamp_setClockFailure

def Timestamp_isClockNotSynchronized(arg1):
    return _iec61850.Timestamp_isClockNotSynchronized(arg1)
Timestamp_isClockNotSynchronized = _iec61850.Timestamp_isClockNotSynchronized

def Timestamp_setClockNotSynchronized(arg1, value):
    return _iec61850.Timestamp_setClockNotSynchronized(arg1, value)
Timestamp_setClockNotSynchronized = _iec61850.Timestamp_setClockNotSynchronized

def Timestamp_getSubsecondPrecision(arg1):
    return _iec61850.Timestamp_getSubsecondPrecision(arg1)
Timestamp_getSubsecondPrecision = _iec61850.Timestamp_getSubsecondPrecision

def Timestamp_setSubsecondPrecision(arg1, subsecondPrecision):
    return _iec61850.Timestamp_setSubsecondPrecision(arg1, subsecondPrecision)
Timestamp_setSubsecondPrecision = _iec61850.Timestamp_setSubsecondPrecision

def Timestamp_setTimeInSeconds(arg1, secondsSinceEpoch):
    return _iec61850.Timestamp_setTimeInSeconds(arg1, secondsSinceEpoch)
Timestamp_setTimeInSeconds = _iec61850.Timestamp_setTimeInSeconds

def Timestamp_setTimeInMilliseconds(arg1, millisSinceEpoch):
    return _iec61850.Timestamp_setTimeInMilliseconds(arg1, millisSinceEpoch)
Timestamp_setTimeInMilliseconds = _iec61850.Timestamp_setTimeInMilliseconds

def LibIEC61850_getVersionString():
    return _iec61850.LibIEC61850_getVersionString()
LibIEC61850_getVersionString = _iec61850.LibIEC61850_getVersionString
DATA_ACCESS_ERROR_NO_RESPONSE = _iec61850.DATA_ACCESS_ERROR_NO_RESPONSE
DATA_ACCESS_ERROR_SUCCESS = _iec61850.DATA_ACCESS_ERROR_SUCCESS
DATA_ACCESS_ERROR_OBJECT_INVALIDATED = _iec61850.DATA_ACCESS_ERROR_OBJECT_INVALIDATED
DATA_ACCESS_ERROR_HARDWARE_FAULT = _iec61850.DATA_ACCESS_ERROR_HARDWARE_FAULT
DATA_ACCESS_ERROR_TEMPORARILY_UNAVAILABLE = _iec61850.DATA_ACCESS_ERROR_TEMPORARILY_UNAVAILABLE
DATA_ACCESS_ERROR_OBJECT_ACCESS_DENIED = _iec61850.DATA_ACCESS_ERROR_OBJECT_ACCESS_DENIED
DATA_ACCESS_ERROR_OBJECT_UNDEFINED = _iec61850.DATA_ACCESS_ERROR_OBJECT_UNDEFINED
DATA_ACCESS_ERROR_INVALID_ADDRESS = _iec61850.DATA_ACCESS_ERROR_INVALID_ADDRESS
DATA_ACCESS_ERROR_TYPE_UNSUPPORTED = _iec61850.DATA_ACCESS_ERROR_TYPE_UNSUPPORTED
DATA_ACCESS_ERROR_TYPE_INCONSISTENT = _iec61850.DATA_ACCESS_ERROR_TYPE_INCONSISTENT
DATA_ACCESS_ERROR_OBJECT_ATTRIBUTE_INCONSISTENT = _iec61850.DATA_ACCESS_ERROR_OBJECT_ATTRIBUTE_INCONSISTENT
DATA_ACCESS_ERROR_OBJECT_ACCESS_UNSUPPORTED = _iec61850.DATA_ACCESS_ERROR_OBJECT_ACCESS_UNSUPPORTED
DATA_ACCESS_ERROR_OBJECT_NONE_EXISTENT = _iec61850.DATA_ACCESS_ERROR_OBJECT_NONE_EXISTENT
DATA_ACCESS_ERROR_OBJECT_VALUE_INVALID = _iec61850.DATA_ACCESS_ERROR_OBJECT_VALUE_INVALID
DATA_ACCESS_ERROR_UNKNOWN = _iec61850.DATA_ACCESS_ERROR_UNKNOWN

def MmsValue_createArray(elementType, size):
    return _iec61850.MmsValue_createArray(elementType, size)
MmsValue_createArray = _iec61850.MmsValue_createArray

def MmsValue_getArraySize(arg1):
    return _iec61850.MmsValue_getArraySize(arg1)
MmsValue_getArraySize = _iec61850.MmsValue_getArraySize

def MmsValue_getElement(array, index):
    return _iec61850.MmsValue_getElement(array, index)
MmsValue_getElement = _iec61850.MmsValue_getElement

def MmsValue_createEmptyArray(size):
    return _iec61850.MmsValue_createEmptyArray(size)
MmsValue_createEmptyArray = _iec61850.MmsValue_createEmptyArray

def MmsValue_setElement(complexValue, index, elementValue):
    return _iec61850.MmsValue_setElement(complexValue, index, elementValue)
MmsValue_setElement = _iec61850.MmsValue_setElement

def MmsValue_getDataAccessError(arg1):
    return _iec61850.MmsValue_getDataAccessError(arg1)
MmsValue_getDataAccessError = _iec61850.MmsValue_getDataAccessError

def MmsValue_toInt64(arg1):
    return _iec61850.MmsValue_toInt64(arg1)
MmsValue_toInt64 = _iec61850.MmsValue_toInt64

def MmsValue_toInt32(value):
    return _iec61850.MmsValue_toInt32(value)
MmsValue_toInt32 = _iec61850.MmsValue_toInt32

def MmsValue_toUint32(value):
    return _iec61850.MmsValue_toUint32(value)
MmsValue_toUint32 = _iec61850.MmsValue_toUint32

def MmsValue_toDouble(arg1):
    return _iec61850.MmsValue_toDouble(arg1)
MmsValue_toDouble = _iec61850.MmsValue_toDouble

def MmsValue_toFloat(arg1):
    return _iec61850.MmsValue_toFloat(arg1)
MmsValue_toFloat = _iec61850.MmsValue_toFloat

def MmsValue_toUnixTimestamp(arg1):
    return _iec61850.MmsValue_toUnixTimestamp(arg1)
MmsValue_toUnixTimestamp = _iec61850.MmsValue_toUnixTimestamp

def MmsValue_setFloat(arg1, newFloatValue):
    return _iec61850.MmsValue_setFloat(arg1, newFloatValue)
MmsValue_setFloat = _iec61850.MmsValue_setFloat

def MmsValue_setDouble(arg1, newFloatValue):
    return _iec61850.MmsValue_setDouble(arg1, newFloatValue)
MmsValue_setDouble = _iec61850.MmsValue_setDouble

def MmsValue_setInt8(value, integer):
    return _iec61850.MmsValue_setInt8(value, integer)
MmsValue_setInt8 = _iec61850.MmsValue_setInt8

def MmsValue_setInt16(value, integer):
    return _iec61850.MmsValue_setInt16(value, integer)
MmsValue_setInt16 = _iec61850.MmsValue_setInt16

def MmsValue_setInt32(arg1, integer):
    return _iec61850.MmsValue_setInt32(arg1, integer)
MmsValue_setInt32 = _iec61850.MmsValue_setInt32

def MmsValue_setInt64(value, integer):
    return _iec61850.MmsValue_setInt64(value, integer)
MmsValue_setInt64 = _iec61850.MmsValue_setInt64

def MmsValue_setUint8(value, integer):
    return _iec61850.MmsValue_setUint8(value, integer)
MmsValue_setUint8 = _iec61850.MmsValue_setUint8

def MmsValue_setUint16(value, integer):
    return _iec61850.MmsValue_setUint16(value, integer)
MmsValue_setUint16 = _iec61850.MmsValue_setUint16

def MmsValue_setUint32(value, integer):
    return _iec61850.MmsValue_setUint32(value, integer)
MmsValue_setUint32 = _iec61850.MmsValue_setUint32

def MmsValue_setBoolean(value, boolValue):
    return _iec61850.MmsValue_setBoolean(value, boolValue)
MmsValue_setBoolean = _iec61850.MmsValue_setBoolean

def MmsValue_getBoolean(value):
    return _iec61850.MmsValue_getBoolean(value)
MmsValue_getBoolean = _iec61850.MmsValue_getBoolean

def MmsValue_toString(arg1):
    return _iec61850.MmsValue_toString(arg1)
MmsValue_toString = _iec61850.MmsValue_toString

def MmsValue_getStringSize(arg1):
    return _iec61850.MmsValue_getStringSize(arg1)
MmsValue_getStringSize = _iec61850.MmsValue_getStringSize

def MmsValue_setVisibleString(arg1, string):
    return _iec61850.MmsValue_setVisibleString(arg1, string)
MmsValue_setVisibleString = _iec61850.MmsValue_setVisibleString

def MmsValue_setBitStringBit(arg1, bitPos, value):
    return _iec61850.MmsValue_setBitStringBit(arg1, bitPos, value)
MmsValue_setBitStringBit = _iec61850.MmsValue_setBitStringBit

def MmsValue_getBitStringBit(arg1, bitPos):
    return _iec61850.MmsValue_getBitStringBit(arg1, bitPos)
MmsValue_getBitStringBit = _iec61850.MmsValue_getBitStringBit

def MmsValue_deleteAllBitStringBits(arg1):
    return _iec61850.MmsValue_deleteAllBitStringBits(arg1)
MmsValue_deleteAllBitStringBits = _iec61850.MmsValue_deleteAllBitStringBits

def MmsValue_getBitStringSize(arg1):
    return _iec61850.MmsValue_getBitStringSize(arg1)
MmsValue_getBitStringSize = _iec61850.MmsValue_getBitStringSize

def MmsValue_getBitStringByteSize(arg1):
    return _iec61850.MmsValue_getBitStringByteSize(arg1)
MmsValue_getBitStringByteSize = _iec61850.MmsValue_getBitStringByteSize

def MmsValue_getNumberOfSetBits(arg1):
    return _iec61850.MmsValue_getNumberOfSetBits(arg1)
MmsValue_getNumberOfSetBits = _iec61850.MmsValue_getNumberOfSetBits

def MmsValue_setAllBitStringBits(arg1):
    return _iec61850.MmsValue_setAllBitStringBits(arg1)
MmsValue_setAllBitStringBits = _iec61850.MmsValue_setAllBitStringBits

def MmsValue_getBitStringAsInteger(arg1):
    return _iec61850.MmsValue_getBitStringAsInteger(arg1)
MmsValue_getBitStringAsInteger = _iec61850.MmsValue_getBitStringAsInteger

def MmsValue_setBitStringFromInteger(arg1, intValue):
    return _iec61850.MmsValue_setBitStringFromInteger(arg1, intValue)
MmsValue_setBitStringFromInteger = _iec61850.MmsValue_setBitStringFromInteger

def MmsValue_getBitStringAsIntegerBigEndian(arg1):
    return _iec61850.MmsValue_getBitStringAsIntegerBigEndian(arg1)
MmsValue_getBitStringAsIntegerBigEndian = _iec61850.MmsValue_getBitStringAsIntegerBigEndian

def MmsValue_setBitStringFromIntegerBigEndian(arg1, intValue):
    return _iec61850.MmsValue_setBitStringFromIntegerBigEndian(arg1, intValue)
MmsValue_setBitStringFromIntegerBigEndian = _iec61850.MmsValue_setBitStringFromIntegerBigEndian

def MmsValue_setUtcTime(arg1, timeval):
    return _iec61850.MmsValue_setUtcTime(arg1, timeval)
MmsValue_setUtcTime = _iec61850.MmsValue_setUtcTime

def MmsValue_setUtcTimeMs(arg1, timeval):
    return _iec61850.MmsValue_setUtcTimeMs(arg1, timeval)
MmsValue_setUtcTimeMs = _iec61850.MmsValue_setUtcTimeMs

def MmsValue_setUtcTimeByBuffer(arg1, buffer):
    return _iec61850.MmsValue_setUtcTimeByBuffer(arg1, buffer)
MmsValue_setUtcTimeByBuffer = _iec61850.MmsValue_setUtcTimeByBuffer

def MmsValue_getUtcTimeBuffer(arg1):
    return _iec61850.MmsValue_getUtcTimeBuffer(arg1)
MmsValue_getUtcTimeBuffer = _iec61850.MmsValue_getUtcTimeBuffer

def MmsValue_getUtcTimeInMs(value):
    return _iec61850.MmsValue_getUtcTimeInMs(value)
MmsValue_getUtcTimeInMs = _iec61850.MmsValue_getUtcTimeInMs

def MmsValue_getUtcTimeInMsWithUs(arg1, usec):
    return _iec61850.MmsValue_getUtcTimeInMsWithUs(arg1, usec)
MmsValue_getUtcTimeInMsWithUs = _iec61850.MmsValue_getUtcTimeInMsWithUs

def MmsValue_setUtcTimeQuality(arg1, timeQuality):
    return _iec61850.MmsValue_setUtcTimeQuality(arg1, timeQuality)
MmsValue_setUtcTimeQuality = _iec61850.MmsValue_setUtcTimeQuality

def MmsValue_getUtcTimeQuality(arg1):
    return _iec61850.MmsValue_getUtcTimeQuality(arg1)
MmsValue_getUtcTimeQuality = _iec61850.MmsValue_getUtcTimeQuality

def MmsValue_setBinaryTime(arg1, timestamp):
    return _iec61850.MmsValue_setBinaryTime(arg1, timestamp)
MmsValue_setBinaryTime = _iec61850.MmsValue_setBinaryTime

def MmsValue_getBinaryTimeAsUtcMs(arg1):
    return _iec61850.MmsValue_getBinaryTimeAsUtcMs(arg1)
MmsValue_getBinaryTimeAsUtcMs = _iec61850.MmsValue_getBinaryTimeAsUtcMs

def MmsValue_setOctetString(arg1, buf, size):
    return _iec61850.MmsValue_setOctetString(arg1, buf, size)
MmsValue_setOctetString = _iec61850.MmsValue_setOctetString

def MmsValue_getOctetStringSize(arg1):
    return _iec61850.MmsValue_getOctetStringSize(arg1)
MmsValue_getOctetStringSize = _iec61850.MmsValue_getOctetStringSize

def MmsValue_getOctetStringMaxSize(arg1):
    return _iec61850.MmsValue_getOctetStringMaxSize(arg1)
MmsValue_getOctetStringMaxSize = _iec61850.MmsValue_getOctetStringMaxSize

def MmsValue_getOctetStringBuffer(arg1):
    return _iec61850.MmsValue_getOctetStringBuffer(arg1)
MmsValue_getOctetStringBuffer = _iec61850.MmsValue_getOctetStringBuffer

def MmsValue_update(arg1, source):
    return _iec61850.MmsValue_update(arg1, source)
MmsValue_update = _iec61850.MmsValue_update

def MmsValue_equals(arg1, otherValue):
    return _iec61850.MmsValue_equals(arg1, otherValue)
MmsValue_equals = _iec61850.MmsValue_equals

def MmsValue_equalTypes(arg1, otherValue):
    return _iec61850.MmsValue_equalTypes(arg1, otherValue)
MmsValue_equalTypes = _iec61850.MmsValue_equalTypes

def MmsValue_newDataAccessError(accessError):
    return _iec61850.MmsValue_newDataAccessError(accessError)
MmsValue_newDataAccessError = _iec61850.MmsValue_newDataAccessError

def MmsValue_newIntegerFromBerInteger(berInteger):
    return _iec61850.MmsValue_newIntegerFromBerInteger(berInteger)
MmsValue_newIntegerFromBerInteger = _iec61850.MmsValue_newIntegerFromBerInteger

def MmsValue_newUnsignedFromBerInteger(berInteger):
    return _iec61850.MmsValue_newUnsignedFromBerInteger(berInteger)
MmsValue_newUnsignedFromBerInteger = _iec61850.MmsValue_newUnsignedFromBerInteger

def MmsValue_newInteger(size):
    return _iec61850.MmsValue_newInteger(size)
MmsValue_newInteger = _iec61850.MmsValue_newInteger

def MmsValue_newUnsigned(size):
    return _iec61850.MmsValue_newUnsigned(size)
MmsValue_newUnsigned = _iec61850.MmsValue_newUnsigned

def MmsValue_newBoolean(boolean):
    return _iec61850.MmsValue_newBoolean(boolean)
MmsValue_newBoolean = _iec61850.MmsValue_newBoolean

def MmsValue_newBitString(bitSize):
    return _iec61850.MmsValue_newBitString(bitSize)
MmsValue_newBitString = _iec61850.MmsValue_newBitString

def MmsValue_newOctetString(size, maxSize):
    return _iec61850.MmsValue_newOctetString(size, maxSize)
MmsValue_newOctetString = _iec61850.MmsValue_newOctetString

def MmsValue_newStructure(typeSpec):
    return _iec61850.MmsValue_newStructure(typeSpec)
MmsValue_newStructure = _iec61850.MmsValue_newStructure

def MmsValue_createEmptyStructure(size):
    return _iec61850.MmsValue_createEmptyStructure(size)
MmsValue_createEmptyStructure = _iec61850.MmsValue_createEmptyStructure

def MmsValue_newDefaultValue(typeSpec):
    return _iec61850.MmsValue_newDefaultValue(typeSpec)
MmsValue_newDefaultValue = _iec61850.MmsValue_newDefaultValue

def MmsValue_newIntegerFromInt8(integer):
    return _iec61850.MmsValue_newIntegerFromInt8(integer)
MmsValue_newIntegerFromInt8 = _iec61850.MmsValue_newIntegerFromInt8

def MmsValue_newIntegerFromInt16(integer):
    return _iec61850.MmsValue_newIntegerFromInt16(integer)
MmsValue_newIntegerFromInt16 = _iec61850.MmsValue_newIntegerFromInt16

def MmsValue_newIntegerFromInt32(integer):
    return _iec61850.MmsValue_newIntegerFromInt32(integer)
MmsValue_newIntegerFromInt32 = _iec61850.MmsValue_newIntegerFromInt32

def MmsValue_newIntegerFromInt64(integer):
    return _iec61850.MmsValue_newIntegerFromInt64(integer)
MmsValue_newIntegerFromInt64 = _iec61850.MmsValue_newIntegerFromInt64

def MmsValue_newUnsignedFromUint32(integer):
    return _iec61850.MmsValue_newUnsignedFromUint32(integer)
MmsValue_newUnsignedFromUint32 = _iec61850.MmsValue_newUnsignedFromUint32

def MmsValue_newFloat(variable):
    return _iec61850.MmsValue_newFloat(variable)
MmsValue_newFloat = _iec61850.MmsValue_newFloat

def MmsValue_newDouble(variable):
    return _iec61850.MmsValue_newDouble(variable)
MmsValue_newDouble = _iec61850.MmsValue_newDouble

def MmsValue_clone(arg1):
    return _iec61850.MmsValue_clone(arg1)
MmsValue_clone = _iec61850.MmsValue_clone

def MmsValue_cloneToBuffer(arg1, destinationAddress):
    return _iec61850.MmsValue_cloneToBuffer(arg1, destinationAddress)
MmsValue_cloneToBuffer = _iec61850.MmsValue_cloneToBuffer

def MmsValue_getSizeInMemory(arg1):
    return _iec61850.MmsValue_getSizeInMemory(arg1)
MmsValue_getSizeInMemory = _iec61850.MmsValue_getSizeInMemory

def MmsValue_delete(arg1):
    return _iec61850.MmsValue_delete(arg1)
MmsValue_delete = _iec61850.MmsValue_delete

def MmsValue_deleteConditional(value):
    return _iec61850.MmsValue_deleteConditional(value)
MmsValue_deleteConditional = _iec61850.MmsValue_deleteConditional

def MmsValue_deleteIfNotNull(value):
    return _iec61850.MmsValue_deleteIfNotNull(value)
MmsValue_deleteIfNotNull = _iec61850.MmsValue_deleteIfNotNull

def MmsValue_newVisibleString(string):
    return _iec61850.MmsValue_newVisibleString(string)
MmsValue_newVisibleString = _iec61850.MmsValue_newVisibleString

def MmsValue_newVisibleStringWithSize(size):
    return _iec61850.MmsValue_newVisibleStringWithSize(size)
MmsValue_newVisibleStringWithSize = _iec61850.MmsValue_newVisibleStringWithSize

def MmsValue_newMmsStringWithSize(size):
    return _iec61850.MmsValue_newMmsStringWithSize(size)
MmsValue_newMmsStringWithSize = _iec61850.MmsValue_newMmsStringWithSize

def MmsValue_newBinaryTime(timeOfDay):
    return _iec61850.MmsValue_newBinaryTime(timeOfDay)
MmsValue_newBinaryTime = _iec61850.MmsValue_newBinaryTime

def MmsValue_newVisibleStringFromByteArray(byteArray, size):
    return _iec61850.MmsValue_newVisibleStringFromByteArray(byteArray, size)
MmsValue_newVisibleStringFromByteArray = _iec61850.MmsValue_newVisibleStringFromByteArray

def MmsValue_newMmsStringFromByteArray(byteArray, size):
    return _iec61850.MmsValue_newMmsStringFromByteArray(byteArray, size)
MmsValue_newMmsStringFromByteArray = _iec61850.MmsValue_newMmsStringFromByteArray

def MmsValue_newMmsString(string):
    return _iec61850.MmsValue_newMmsString(string)
MmsValue_newMmsString = _iec61850.MmsValue_newMmsString

def MmsValue_setMmsString(value, string):
    return _iec61850.MmsValue_setMmsString(value, string)
MmsValue_setMmsString = _iec61850.MmsValue_setMmsString

def MmsValue_newUtcTime(timeval):
    return _iec61850.MmsValue_newUtcTime(timeval)
MmsValue_newUtcTime = _iec61850.MmsValue_newUtcTime

def MmsValue_newUtcTimeByMsTime(timeval):
    return _iec61850.MmsValue_newUtcTimeByMsTime(timeval)
MmsValue_newUtcTimeByMsTime = _iec61850.MmsValue_newUtcTimeByMsTime

def MmsValue_setDeletable(arg1):
    return _iec61850.MmsValue_setDeletable(arg1)
MmsValue_setDeletable = _iec61850.MmsValue_setDeletable

def MmsValue_setDeletableRecursive(value):
    return _iec61850.MmsValue_setDeletableRecursive(value)
MmsValue_setDeletableRecursive = _iec61850.MmsValue_setDeletableRecursive

def MmsValue_isDeletable(arg1):
    return _iec61850.MmsValue_isDeletable(arg1)
MmsValue_isDeletable = _iec61850.MmsValue_isDeletable

def MmsValue_getType(arg1):
    return _iec61850.MmsValue_getType(arg1)
MmsValue_getType = _iec61850.MmsValue_getType

def MmsValue_getSubElement(arg1, varSpec, mmsPath):
    return _iec61850.MmsValue_getSubElement(arg1, varSpec, mmsPath)
MmsValue_getSubElement = _iec61850.MmsValue_getSubElement

def MmsValue_getTypeString(arg1):
    return _iec61850.MmsValue_getTypeString(arg1)
MmsValue_getTypeString = _iec61850.MmsValue_getTypeString

def MmsValue_printToBuffer(arg1, buffer, bufferSize):
    return _iec61850.MmsValue_printToBuffer(arg1, buffer, bufferSize)
MmsValue_printToBuffer = _iec61850.MmsValue_printToBuffer

def MmsValue_decodeMmsData(buffer, bufPos, bufferLength):
    return _iec61850.MmsValue_decodeMmsData(buffer, bufPos, bufferLength)
MmsValue_decodeMmsData = _iec61850.MmsValue_decodeMmsData

def MmsValue_encodeMmsData(arg1, buffer, bufPos, encode):
    return _iec61850.MmsValue_encodeMmsData(arg1, buffer, bufPos, encode)
MmsValue_encodeMmsData = _iec61850.MmsValue_encodeMmsData
IEC61850_BOOLEAN = _iec61850.IEC61850_BOOLEAN
IEC61850_INT8 = _iec61850.IEC61850_INT8
IEC61850_INT16 = _iec61850.IEC61850_INT16
IEC61850_INT32 = _iec61850.IEC61850_INT32
IEC61850_INT64 = _iec61850.IEC61850_INT64
IEC61850_INT128 = _iec61850.IEC61850_INT128
IEC61850_INT8U = _iec61850.IEC61850_INT8U
IEC61850_INT16U = _iec61850.IEC61850_INT16U
IEC61850_INT24U = _iec61850.IEC61850_INT24U
IEC61850_INT32U = _iec61850.IEC61850_INT32U
IEC61850_FLOAT32 = _iec61850.IEC61850_FLOAT32
IEC61850_FLOAT64 = _iec61850.IEC61850_FLOAT64
IEC61850_ENUMERATED = _iec61850.IEC61850_ENUMERATED
IEC61850_OCTET_STRING_64 = _iec61850.IEC61850_OCTET_STRING_64
IEC61850_OCTET_STRING_6 = _iec61850.IEC61850_OCTET_STRING_6
IEC61850_OCTET_STRING_8 = _iec61850.IEC61850_OCTET_STRING_8
IEC61850_VISIBLE_STRING_32 = _iec61850.IEC61850_VISIBLE_STRING_32
IEC61850_VISIBLE_STRING_64 = _iec61850.IEC61850_VISIBLE_STRING_64
IEC61850_VISIBLE_STRING_65 = _iec61850.IEC61850_VISIBLE_STRING_65
IEC61850_VISIBLE_STRING_129 = _iec61850.IEC61850_VISIBLE_STRING_129
IEC61850_VISIBLE_STRING_255 = _iec61850.IEC61850_VISIBLE_STRING_255
IEC61850_UNICODE_STRING_255 = _iec61850.IEC61850_UNICODE_STRING_255
IEC61850_TIMESTAMP = _iec61850.IEC61850_TIMESTAMP
IEC61850_QUALITY = _iec61850.IEC61850_QUALITY
IEC61850_CHECK = _iec61850.IEC61850_CHECK
IEC61850_CODEDENUM = _iec61850.IEC61850_CODEDENUM
IEC61850_GENERIC_BITSTRING = _iec61850.IEC61850_GENERIC_BITSTRING
IEC61850_CONSTRUCTED = _iec61850.IEC61850_CONSTRUCTED
IEC61850_ENTRY_TIME = _iec61850.IEC61850_ENTRY_TIME
IEC61850_PHYCOMADDR = _iec61850.IEC61850_PHYCOMADDR
LogicalDeviceModelType = _iec61850.LogicalDeviceModelType
LogicalNodeModelType = _iec61850.LogicalNodeModelType
DataObjectModelType = _iec61850.DataObjectModelType
DataAttributeModelType = _iec61850.DataAttributeModelType
class sIedModel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sIedModel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sIedModel, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _iec61850.sIedModel_name_set
    __swig_getmethods__["name"] = _iec61850.sIedModel_name_get
    if _newclass:
        name = _swig_property(_iec61850.sIedModel_name_get, _iec61850.sIedModel_name_set)
    __swig_setmethods__["firstChild"] = _iec61850.sIedModel_firstChild_set
    __swig_getmethods__["firstChild"] = _iec61850.sIedModel_firstChild_get
    if _newclass:
        firstChild = _swig_property(_iec61850.sIedModel_firstChild_get, _iec61850.sIedModel_firstChild_set)
    __swig_setmethods__["dataSets"] = _iec61850.sIedModel_dataSets_set
    __swig_getmethods__["dataSets"] = _iec61850.sIedModel_dataSets_get
    if _newclass:
        dataSets = _swig_property(_iec61850.sIedModel_dataSets_get, _iec61850.sIedModel_dataSets_set)
    __swig_setmethods__["rcbs"] = _iec61850.sIedModel_rcbs_set
    __swig_getmethods__["rcbs"] = _iec61850.sIedModel_rcbs_get
    if _newclass:
        rcbs = _swig_property(_iec61850.sIedModel_rcbs_get, _iec61850.sIedModel_rcbs_set)
    __swig_setmethods__["gseCBs"] = _iec61850.sIedModel_gseCBs_set
    __swig_getmethods__["gseCBs"] = _iec61850.sIedModel_gseCBs_get
    if _newclass:
        gseCBs = _swig_property(_iec61850.sIedModel_gseCBs_get, _iec61850.sIedModel_gseCBs_set)
    __swig_setmethods__["svCBs"] = _iec61850.sIedModel_svCBs_set
    __swig_getmethods__["svCBs"] = _iec61850.sIedModel_svCBs_get
    if _newclass:
        svCBs = _swig_property(_iec61850.sIedModel_svCBs_get, _iec61850.sIedModel_svCBs_set)
    __swig_setmethods__["sgcbs"] = _iec61850.sIedModel_sgcbs_set
    __swig_getmethods__["sgcbs"] = _iec61850.sIedModel_sgcbs_get
    if _newclass:
        sgcbs = _swig_property(_iec61850.sIedModel_sgcbs_get, _iec61850.sIedModel_sgcbs_set)
    __swig_setmethods__["lcbs"] = _iec61850.sIedModel_lcbs_set
    __swig_getmethods__["lcbs"] = _iec61850.sIedModel_lcbs_get
    if _newclass:
        lcbs = _swig_property(_iec61850.sIedModel_lcbs_get, _iec61850.sIedModel_lcbs_set)
    __swig_setmethods__["logs"] = _iec61850.sIedModel_logs_set
    __swig_getmethods__["logs"] = _iec61850.sIedModel_logs_get
    if _newclass:
        logs = _swig_property(_iec61850.sIedModel_logs_get, _iec61850.sIedModel_logs_set)
    __swig_setmethods__["initializer"] = _iec61850.sIedModel_initializer_set
    __swig_getmethods__["initializer"] = _iec61850.sIedModel_initializer_get
    if _newclass:
        initializer = _swig_property(_iec61850.sIedModel_initializer_get, _iec61850.sIedModel_initializer_set)

    def __init__(self):
        this = _iec61850.new_sIedModel()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sIedModel
    __del__ = lambda self: None
sIedModel_swigregister = _iec61850.sIedModel_swigregister
sIedModel_swigregister(sIedModel)

class sLogicalDevice(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sLogicalDevice, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sLogicalDevice, name)
    __repr__ = _swig_repr
    __swig_setmethods__["modelType"] = _iec61850.sLogicalDevice_modelType_set
    __swig_getmethods__["modelType"] = _iec61850.sLogicalDevice_modelType_get
    if _newclass:
        modelType = _swig_property(_iec61850.sLogicalDevice_modelType_get, _iec61850.sLogicalDevice_modelType_set)
    __swig_setmethods__["name"] = _iec61850.sLogicalDevice_name_set
    __swig_getmethods__["name"] = _iec61850.sLogicalDevice_name_get
    if _newclass:
        name = _swig_property(_iec61850.sLogicalDevice_name_get, _iec61850.sLogicalDevice_name_set)
    __swig_setmethods__["parent"] = _iec61850.sLogicalDevice_parent_set
    __swig_getmethods__["parent"] = _iec61850.sLogicalDevice_parent_get
    if _newclass:
        parent = _swig_property(_iec61850.sLogicalDevice_parent_get, _iec61850.sLogicalDevice_parent_set)
    __swig_setmethods__["sibling"] = _iec61850.sLogicalDevice_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.sLogicalDevice_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.sLogicalDevice_sibling_get, _iec61850.sLogicalDevice_sibling_set)
    __swig_setmethods__["firstChild"] = _iec61850.sLogicalDevice_firstChild_set
    __swig_getmethods__["firstChild"] = _iec61850.sLogicalDevice_firstChild_get
    if _newclass:
        firstChild = _swig_property(_iec61850.sLogicalDevice_firstChild_get, _iec61850.sLogicalDevice_firstChild_set)

    def __init__(self):
        this = _iec61850.new_sLogicalDevice()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sLogicalDevice
    __del__ = lambda self: None
sLogicalDevice_swigregister = _iec61850.sLogicalDevice_swigregister
sLogicalDevice_swigregister(sLogicalDevice)

class sModelNode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sModelNode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sModelNode, name)
    __repr__ = _swig_repr
    __swig_setmethods__["modelType"] = _iec61850.sModelNode_modelType_set
    __swig_getmethods__["modelType"] = _iec61850.sModelNode_modelType_get
    if _newclass:
        modelType = _swig_property(_iec61850.sModelNode_modelType_get, _iec61850.sModelNode_modelType_set)
    __swig_setmethods__["name"] = _iec61850.sModelNode_name_set
    __swig_getmethods__["name"] = _iec61850.sModelNode_name_get
    if _newclass:
        name = _swig_property(_iec61850.sModelNode_name_get, _iec61850.sModelNode_name_set)
    __swig_setmethods__["parent"] = _iec61850.sModelNode_parent_set
    __swig_getmethods__["parent"] = _iec61850.sModelNode_parent_get
    if _newclass:
        parent = _swig_property(_iec61850.sModelNode_parent_get, _iec61850.sModelNode_parent_set)
    __swig_setmethods__["sibling"] = _iec61850.sModelNode_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.sModelNode_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.sModelNode_sibling_get, _iec61850.sModelNode_sibling_set)
    __swig_setmethods__["firstChild"] = _iec61850.sModelNode_firstChild_set
    __swig_getmethods__["firstChild"] = _iec61850.sModelNode_firstChild_get
    if _newclass:
        firstChild = _swig_property(_iec61850.sModelNode_firstChild_get, _iec61850.sModelNode_firstChild_set)

    def __init__(self):
        this = _iec61850.new_sModelNode()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sModelNode
    __del__ = lambda self: None
sModelNode_swigregister = _iec61850.sModelNode_swigregister
sModelNode_swigregister(sModelNode)

class sLogicalNode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sLogicalNode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sLogicalNode, name)
    __repr__ = _swig_repr
    __swig_setmethods__["modelType"] = _iec61850.sLogicalNode_modelType_set
    __swig_getmethods__["modelType"] = _iec61850.sLogicalNode_modelType_get
    if _newclass:
        modelType = _swig_property(_iec61850.sLogicalNode_modelType_get, _iec61850.sLogicalNode_modelType_set)
    __swig_setmethods__["name"] = _iec61850.sLogicalNode_name_set
    __swig_getmethods__["name"] = _iec61850.sLogicalNode_name_get
    if _newclass:
        name = _swig_property(_iec61850.sLogicalNode_name_get, _iec61850.sLogicalNode_name_set)
    __swig_setmethods__["parent"] = _iec61850.sLogicalNode_parent_set
    __swig_getmethods__["parent"] = _iec61850.sLogicalNode_parent_get
    if _newclass:
        parent = _swig_property(_iec61850.sLogicalNode_parent_get, _iec61850.sLogicalNode_parent_set)
    __swig_setmethods__["sibling"] = _iec61850.sLogicalNode_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.sLogicalNode_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.sLogicalNode_sibling_get, _iec61850.sLogicalNode_sibling_set)
    __swig_setmethods__["firstChild"] = _iec61850.sLogicalNode_firstChild_set
    __swig_getmethods__["firstChild"] = _iec61850.sLogicalNode_firstChild_get
    if _newclass:
        firstChild = _swig_property(_iec61850.sLogicalNode_firstChild_get, _iec61850.sLogicalNode_firstChild_set)

    def __init__(self):
        this = _iec61850.new_sLogicalNode()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sLogicalNode
    __del__ = lambda self: None
sLogicalNode_swigregister = _iec61850.sLogicalNode_swigregister
sLogicalNode_swigregister(sLogicalNode)

class sDataObject(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sDataObject, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sDataObject, name)
    __repr__ = _swig_repr
    __swig_setmethods__["modelType"] = _iec61850.sDataObject_modelType_set
    __swig_getmethods__["modelType"] = _iec61850.sDataObject_modelType_get
    if _newclass:
        modelType = _swig_property(_iec61850.sDataObject_modelType_get, _iec61850.sDataObject_modelType_set)
    __swig_setmethods__["name"] = _iec61850.sDataObject_name_set
    __swig_getmethods__["name"] = _iec61850.sDataObject_name_get
    if _newclass:
        name = _swig_property(_iec61850.sDataObject_name_get, _iec61850.sDataObject_name_set)
    __swig_setmethods__["parent"] = _iec61850.sDataObject_parent_set
    __swig_getmethods__["parent"] = _iec61850.sDataObject_parent_get
    if _newclass:
        parent = _swig_property(_iec61850.sDataObject_parent_get, _iec61850.sDataObject_parent_set)
    __swig_setmethods__["sibling"] = _iec61850.sDataObject_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.sDataObject_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.sDataObject_sibling_get, _iec61850.sDataObject_sibling_set)
    __swig_setmethods__["firstChild"] = _iec61850.sDataObject_firstChild_set
    __swig_getmethods__["firstChild"] = _iec61850.sDataObject_firstChild_get
    if _newclass:
        firstChild = _swig_property(_iec61850.sDataObject_firstChild_get, _iec61850.sDataObject_firstChild_set)
    __swig_setmethods__["elementCount"] = _iec61850.sDataObject_elementCount_set
    __swig_getmethods__["elementCount"] = _iec61850.sDataObject_elementCount_get
    if _newclass:
        elementCount = _swig_property(_iec61850.sDataObject_elementCount_get, _iec61850.sDataObject_elementCount_set)

    def __init__(self):
        this = _iec61850.new_sDataObject()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sDataObject
    __del__ = lambda self: None
sDataObject_swigregister = _iec61850.sDataObject_swigregister
sDataObject_swigregister(sDataObject)

class sDataAttribute(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sDataAttribute, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sDataAttribute, name)
    __repr__ = _swig_repr
    __swig_setmethods__["modelType"] = _iec61850.sDataAttribute_modelType_set
    __swig_getmethods__["modelType"] = _iec61850.sDataAttribute_modelType_get
    if _newclass:
        modelType = _swig_property(_iec61850.sDataAttribute_modelType_get, _iec61850.sDataAttribute_modelType_set)
    __swig_setmethods__["name"] = _iec61850.sDataAttribute_name_set
    __swig_getmethods__["name"] = _iec61850.sDataAttribute_name_get
    if _newclass:
        name = _swig_property(_iec61850.sDataAttribute_name_get, _iec61850.sDataAttribute_name_set)
    __swig_setmethods__["parent"] = _iec61850.sDataAttribute_parent_set
    __swig_getmethods__["parent"] = _iec61850.sDataAttribute_parent_get
    if _newclass:
        parent = _swig_property(_iec61850.sDataAttribute_parent_get, _iec61850.sDataAttribute_parent_set)
    __swig_setmethods__["sibling"] = _iec61850.sDataAttribute_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.sDataAttribute_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.sDataAttribute_sibling_get, _iec61850.sDataAttribute_sibling_set)
    __swig_setmethods__["firstChild"] = _iec61850.sDataAttribute_firstChild_set
    __swig_getmethods__["firstChild"] = _iec61850.sDataAttribute_firstChild_get
    if _newclass:
        firstChild = _swig_property(_iec61850.sDataAttribute_firstChild_get, _iec61850.sDataAttribute_firstChild_set)
    __swig_setmethods__["elementCount"] = _iec61850.sDataAttribute_elementCount_set
    __swig_getmethods__["elementCount"] = _iec61850.sDataAttribute_elementCount_get
    if _newclass:
        elementCount = _swig_property(_iec61850.sDataAttribute_elementCount_get, _iec61850.sDataAttribute_elementCount_set)
    __swig_setmethods__["fc"] = _iec61850.sDataAttribute_fc_set
    __swig_getmethods__["fc"] = _iec61850.sDataAttribute_fc_get
    if _newclass:
        fc = _swig_property(_iec61850.sDataAttribute_fc_get, _iec61850.sDataAttribute_fc_set)
    __swig_setmethods__["type"] = _iec61850.sDataAttribute_type_set
    __swig_getmethods__["type"] = _iec61850.sDataAttribute_type_get
    if _newclass:
        type = _swig_property(_iec61850.sDataAttribute_type_get, _iec61850.sDataAttribute_type_set)
    __swig_setmethods__["triggerOptions"] = _iec61850.sDataAttribute_triggerOptions_set
    __swig_getmethods__["triggerOptions"] = _iec61850.sDataAttribute_triggerOptions_get
    if _newclass:
        triggerOptions = _swig_property(_iec61850.sDataAttribute_triggerOptions_get, _iec61850.sDataAttribute_triggerOptions_set)
    __swig_setmethods__["mmsValue"] = _iec61850.sDataAttribute_mmsValue_set
    __swig_getmethods__["mmsValue"] = _iec61850.sDataAttribute_mmsValue_get
    if _newclass:
        mmsValue = _swig_property(_iec61850.sDataAttribute_mmsValue_get, _iec61850.sDataAttribute_mmsValue_set)
    __swig_setmethods__["sAddr"] = _iec61850.sDataAttribute_sAddr_set
    __swig_getmethods__["sAddr"] = _iec61850.sDataAttribute_sAddr_get
    if _newclass:
        sAddr = _swig_property(_iec61850.sDataAttribute_sAddr_get, _iec61850.sDataAttribute_sAddr_set)

    def __init__(self):
        this = _iec61850.new_sDataAttribute()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sDataAttribute
    __del__ = lambda self: None
sDataAttribute_swigregister = _iec61850.sDataAttribute_swigregister
sDataAttribute_swigregister(sDataAttribute)

class DataSetEntry(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DataSetEntry, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DataSetEntry, name)
    __repr__ = _swig_repr
    __swig_setmethods__["logicalDeviceName"] = _iec61850.DataSetEntry_logicalDeviceName_set
    __swig_getmethods__["logicalDeviceName"] = _iec61850.DataSetEntry_logicalDeviceName_get
    if _newclass:
        logicalDeviceName = _swig_property(_iec61850.DataSetEntry_logicalDeviceName_get, _iec61850.DataSetEntry_logicalDeviceName_set)
    __swig_setmethods__["isLDNameDynamicallyAllocated"] = _iec61850.DataSetEntry_isLDNameDynamicallyAllocated_set
    __swig_getmethods__["isLDNameDynamicallyAllocated"] = _iec61850.DataSetEntry_isLDNameDynamicallyAllocated_get
    if _newclass:
        isLDNameDynamicallyAllocated = _swig_property(_iec61850.DataSetEntry_isLDNameDynamicallyAllocated_get, _iec61850.DataSetEntry_isLDNameDynamicallyAllocated_set)
    __swig_setmethods__["variableName"] = _iec61850.DataSetEntry_variableName_set
    __swig_getmethods__["variableName"] = _iec61850.DataSetEntry_variableName_get
    if _newclass:
        variableName = _swig_property(_iec61850.DataSetEntry_variableName_get, _iec61850.DataSetEntry_variableName_set)
    __swig_setmethods__["index"] = _iec61850.DataSetEntry_index_set
    __swig_getmethods__["index"] = _iec61850.DataSetEntry_index_get
    if _newclass:
        index = _swig_property(_iec61850.DataSetEntry_index_get, _iec61850.DataSetEntry_index_set)
    __swig_setmethods__["componentName"] = _iec61850.DataSetEntry_componentName_set
    __swig_getmethods__["componentName"] = _iec61850.DataSetEntry_componentName_get
    if _newclass:
        componentName = _swig_property(_iec61850.DataSetEntry_componentName_get, _iec61850.DataSetEntry_componentName_set)
    __swig_setmethods__["value"] = _iec61850.DataSetEntry_value_set
    __swig_getmethods__["value"] = _iec61850.DataSetEntry_value_get
    if _newclass:
        value = _swig_property(_iec61850.DataSetEntry_value_get, _iec61850.DataSetEntry_value_set)
    __swig_setmethods__["sibling"] = _iec61850.DataSetEntry_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.DataSetEntry_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.DataSetEntry_sibling_get, _iec61850.DataSetEntry_sibling_set)

    def __init__(self):
        this = _iec61850.new_DataSetEntry()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_DataSetEntry
    __del__ = lambda self: None
DataSetEntry_swigregister = _iec61850.DataSetEntry_swigregister
DataSetEntry_swigregister(DataSetEntry)

class sDataSet(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sDataSet, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sDataSet, name)
    __repr__ = _swig_repr
    __swig_setmethods__["logicalDeviceName"] = _iec61850.sDataSet_logicalDeviceName_set
    __swig_getmethods__["logicalDeviceName"] = _iec61850.sDataSet_logicalDeviceName_get
    if _newclass:
        logicalDeviceName = _swig_property(_iec61850.sDataSet_logicalDeviceName_get, _iec61850.sDataSet_logicalDeviceName_set)
    __swig_setmethods__["name"] = _iec61850.sDataSet_name_set
    __swig_getmethods__["name"] = _iec61850.sDataSet_name_get
    if _newclass:
        name = _swig_property(_iec61850.sDataSet_name_get, _iec61850.sDataSet_name_set)
    __swig_setmethods__["elementCount"] = _iec61850.sDataSet_elementCount_set
    __swig_getmethods__["elementCount"] = _iec61850.sDataSet_elementCount_get
    if _newclass:
        elementCount = _swig_property(_iec61850.sDataSet_elementCount_get, _iec61850.sDataSet_elementCount_set)
    __swig_setmethods__["fcdas"] = _iec61850.sDataSet_fcdas_set
    __swig_getmethods__["fcdas"] = _iec61850.sDataSet_fcdas_get
    if _newclass:
        fcdas = _swig_property(_iec61850.sDataSet_fcdas_get, _iec61850.sDataSet_fcdas_set)
    __swig_setmethods__["sibling"] = _iec61850.sDataSet_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.sDataSet_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.sDataSet_sibling_get, _iec61850.sDataSet_sibling_set)

    def __init__(self):
        this = _iec61850.new_sDataSet()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sDataSet
    __del__ = lambda self: None
sDataSet_swigregister = _iec61850.sDataSet_swigregister
sDataSet_swigregister(sDataSet)

class sReportControlBlock(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sReportControlBlock, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sReportControlBlock, name)
    __repr__ = _swig_repr
    __swig_setmethods__["parent"] = _iec61850.sReportControlBlock_parent_set
    __swig_getmethods__["parent"] = _iec61850.sReportControlBlock_parent_get
    if _newclass:
        parent = _swig_property(_iec61850.sReportControlBlock_parent_get, _iec61850.sReportControlBlock_parent_set)
    __swig_setmethods__["name"] = _iec61850.sReportControlBlock_name_set
    __swig_getmethods__["name"] = _iec61850.sReportControlBlock_name_get
    if _newclass:
        name = _swig_property(_iec61850.sReportControlBlock_name_get, _iec61850.sReportControlBlock_name_set)
    __swig_setmethods__["rptId"] = _iec61850.sReportControlBlock_rptId_set
    __swig_getmethods__["rptId"] = _iec61850.sReportControlBlock_rptId_get
    if _newclass:
        rptId = _swig_property(_iec61850.sReportControlBlock_rptId_get, _iec61850.sReportControlBlock_rptId_set)
    __swig_setmethods__["buffered"] = _iec61850.sReportControlBlock_buffered_set
    __swig_getmethods__["buffered"] = _iec61850.sReportControlBlock_buffered_get
    if _newclass:
        buffered = _swig_property(_iec61850.sReportControlBlock_buffered_get, _iec61850.sReportControlBlock_buffered_set)
    __swig_setmethods__["dataSetName"] = _iec61850.sReportControlBlock_dataSetName_set
    __swig_getmethods__["dataSetName"] = _iec61850.sReportControlBlock_dataSetName_get
    if _newclass:
        dataSetName = _swig_property(_iec61850.sReportControlBlock_dataSetName_get, _iec61850.sReportControlBlock_dataSetName_set)
    __swig_setmethods__["confRef"] = _iec61850.sReportControlBlock_confRef_set
    __swig_getmethods__["confRef"] = _iec61850.sReportControlBlock_confRef_get
    if _newclass:
        confRef = _swig_property(_iec61850.sReportControlBlock_confRef_get, _iec61850.sReportControlBlock_confRef_set)
    __swig_setmethods__["trgOps"] = _iec61850.sReportControlBlock_trgOps_set
    __swig_getmethods__["trgOps"] = _iec61850.sReportControlBlock_trgOps_get
    if _newclass:
        trgOps = _swig_property(_iec61850.sReportControlBlock_trgOps_get, _iec61850.sReportControlBlock_trgOps_set)
    __swig_setmethods__["options"] = _iec61850.sReportControlBlock_options_set
    __swig_getmethods__["options"] = _iec61850.sReportControlBlock_options_get
    if _newclass:
        options = _swig_property(_iec61850.sReportControlBlock_options_get, _iec61850.sReportControlBlock_options_set)
    __swig_setmethods__["bufferTime"] = _iec61850.sReportControlBlock_bufferTime_set
    __swig_getmethods__["bufferTime"] = _iec61850.sReportControlBlock_bufferTime_get
    if _newclass:
        bufferTime = _swig_property(_iec61850.sReportControlBlock_bufferTime_get, _iec61850.sReportControlBlock_bufferTime_set)
    __swig_setmethods__["intPeriod"] = _iec61850.sReportControlBlock_intPeriod_set
    __swig_getmethods__["intPeriod"] = _iec61850.sReportControlBlock_intPeriod_get
    if _newclass:
        intPeriod = _swig_property(_iec61850.sReportControlBlock_intPeriod_get, _iec61850.sReportControlBlock_intPeriod_set)
    __swig_setmethods__["sibling"] = _iec61850.sReportControlBlock_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.sReportControlBlock_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.sReportControlBlock_sibling_get, _iec61850.sReportControlBlock_sibling_set)

    def __init__(self):
        this = _iec61850.new_sReportControlBlock()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sReportControlBlock
    __del__ = lambda self: None
sReportControlBlock_swigregister = _iec61850.sReportControlBlock_swigregister
sReportControlBlock_swigregister(sReportControlBlock)

class sLogControlBlock(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sLogControlBlock, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sLogControlBlock, name)
    __repr__ = _swig_repr
    __swig_setmethods__["parent"] = _iec61850.sLogControlBlock_parent_set
    __swig_getmethods__["parent"] = _iec61850.sLogControlBlock_parent_get
    if _newclass:
        parent = _swig_property(_iec61850.sLogControlBlock_parent_get, _iec61850.sLogControlBlock_parent_set)
    __swig_setmethods__["name"] = _iec61850.sLogControlBlock_name_set
    __swig_getmethods__["name"] = _iec61850.sLogControlBlock_name_get
    if _newclass:
        name = _swig_property(_iec61850.sLogControlBlock_name_get, _iec61850.sLogControlBlock_name_set)
    __swig_setmethods__["dataSetName"] = _iec61850.sLogControlBlock_dataSetName_set
    __swig_getmethods__["dataSetName"] = _iec61850.sLogControlBlock_dataSetName_get
    if _newclass:
        dataSetName = _swig_property(_iec61850.sLogControlBlock_dataSetName_get, _iec61850.sLogControlBlock_dataSetName_set)
    __swig_setmethods__["logRef"] = _iec61850.sLogControlBlock_logRef_set
    __swig_getmethods__["logRef"] = _iec61850.sLogControlBlock_logRef_get
    if _newclass:
        logRef = _swig_property(_iec61850.sLogControlBlock_logRef_get, _iec61850.sLogControlBlock_logRef_set)
    __swig_setmethods__["trgOps"] = _iec61850.sLogControlBlock_trgOps_set
    __swig_getmethods__["trgOps"] = _iec61850.sLogControlBlock_trgOps_get
    if _newclass:
        trgOps = _swig_property(_iec61850.sLogControlBlock_trgOps_get, _iec61850.sLogControlBlock_trgOps_set)
    __swig_setmethods__["intPeriod"] = _iec61850.sLogControlBlock_intPeriod_set
    __swig_getmethods__["intPeriod"] = _iec61850.sLogControlBlock_intPeriod_get
    if _newclass:
        intPeriod = _swig_property(_iec61850.sLogControlBlock_intPeriod_get, _iec61850.sLogControlBlock_intPeriod_set)
    __swig_setmethods__["logEna"] = _iec61850.sLogControlBlock_logEna_set
    __swig_getmethods__["logEna"] = _iec61850.sLogControlBlock_logEna_get
    if _newclass:
        logEna = _swig_property(_iec61850.sLogControlBlock_logEna_get, _iec61850.sLogControlBlock_logEna_set)
    __swig_setmethods__["reasonCode"] = _iec61850.sLogControlBlock_reasonCode_set
    __swig_getmethods__["reasonCode"] = _iec61850.sLogControlBlock_reasonCode_get
    if _newclass:
        reasonCode = _swig_property(_iec61850.sLogControlBlock_reasonCode_get, _iec61850.sLogControlBlock_reasonCode_set)
    __swig_setmethods__["sibling"] = _iec61850.sLogControlBlock_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.sLogControlBlock_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.sLogControlBlock_sibling_get, _iec61850.sLogControlBlock_sibling_set)

    def __init__(self):
        this = _iec61850.new_sLogControlBlock()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sLogControlBlock
    __del__ = lambda self: None
sLogControlBlock_swigregister = _iec61850.sLogControlBlock_swigregister
sLogControlBlock_swigregister(sLogControlBlock)

class sLog(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sLog, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sLog, name)
    __repr__ = _swig_repr
    __swig_setmethods__["parent"] = _iec61850.sLog_parent_set
    __swig_getmethods__["parent"] = _iec61850.sLog_parent_get
    if _newclass:
        parent = _swig_property(_iec61850.sLog_parent_get, _iec61850.sLog_parent_set)
    __swig_setmethods__["name"] = _iec61850.sLog_name_set
    __swig_getmethods__["name"] = _iec61850.sLog_name_get
    if _newclass:
        name = _swig_property(_iec61850.sLog_name_get, _iec61850.sLog_name_set)
    __swig_setmethods__["sibling"] = _iec61850.sLog_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.sLog_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.sLog_sibling_get, _iec61850.sLog_sibling_set)

    def __init__(self):
        this = _iec61850.new_sLog()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sLog
    __del__ = lambda self: None
sLog_swigregister = _iec61850.sLog_swigregister
sLog_swigregister(sLog)

class sSettingGroupControlBlock(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sSettingGroupControlBlock, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sSettingGroupControlBlock, name)
    __repr__ = _swig_repr
    __swig_setmethods__["parent"] = _iec61850.sSettingGroupControlBlock_parent_set
    __swig_getmethods__["parent"] = _iec61850.sSettingGroupControlBlock_parent_get
    if _newclass:
        parent = _swig_property(_iec61850.sSettingGroupControlBlock_parent_get, _iec61850.sSettingGroupControlBlock_parent_set)
    __swig_setmethods__["actSG"] = _iec61850.sSettingGroupControlBlock_actSG_set
    __swig_getmethods__["actSG"] = _iec61850.sSettingGroupControlBlock_actSG_get
    if _newclass:
        actSG = _swig_property(_iec61850.sSettingGroupControlBlock_actSG_get, _iec61850.sSettingGroupControlBlock_actSG_set)
    __swig_setmethods__["numOfSGs"] = _iec61850.sSettingGroupControlBlock_numOfSGs_set
    __swig_getmethods__["numOfSGs"] = _iec61850.sSettingGroupControlBlock_numOfSGs_get
    if _newclass:
        numOfSGs = _swig_property(_iec61850.sSettingGroupControlBlock_numOfSGs_get, _iec61850.sSettingGroupControlBlock_numOfSGs_set)
    __swig_setmethods__["editSG"] = _iec61850.sSettingGroupControlBlock_editSG_set
    __swig_getmethods__["editSG"] = _iec61850.sSettingGroupControlBlock_editSG_get
    if _newclass:
        editSG = _swig_property(_iec61850.sSettingGroupControlBlock_editSG_get, _iec61850.sSettingGroupControlBlock_editSG_set)
    __swig_setmethods__["cnfEdit"] = _iec61850.sSettingGroupControlBlock_cnfEdit_set
    __swig_getmethods__["cnfEdit"] = _iec61850.sSettingGroupControlBlock_cnfEdit_get
    if _newclass:
        cnfEdit = _swig_property(_iec61850.sSettingGroupControlBlock_cnfEdit_get, _iec61850.sSettingGroupControlBlock_cnfEdit_set)
    __swig_setmethods__["timestamp"] = _iec61850.sSettingGroupControlBlock_timestamp_set
    __swig_getmethods__["timestamp"] = _iec61850.sSettingGroupControlBlock_timestamp_get
    if _newclass:
        timestamp = _swig_property(_iec61850.sSettingGroupControlBlock_timestamp_get, _iec61850.sSettingGroupControlBlock_timestamp_set)
    __swig_setmethods__["resvTms"] = _iec61850.sSettingGroupControlBlock_resvTms_set
    __swig_getmethods__["resvTms"] = _iec61850.sSettingGroupControlBlock_resvTms_get
    if _newclass:
        resvTms = _swig_property(_iec61850.sSettingGroupControlBlock_resvTms_get, _iec61850.sSettingGroupControlBlock_resvTms_set)
    __swig_setmethods__["sibling"] = _iec61850.sSettingGroupControlBlock_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.sSettingGroupControlBlock_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.sSettingGroupControlBlock_sibling_get, _iec61850.sSettingGroupControlBlock_sibling_set)

    def __init__(self):
        this = _iec61850.new_sSettingGroupControlBlock()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sSettingGroupControlBlock
    __del__ = lambda self: None
sSettingGroupControlBlock_swigregister = _iec61850.sSettingGroupControlBlock_swigregister
sSettingGroupControlBlock_swigregister(sSettingGroupControlBlock)

class sGSEControlBlock(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sGSEControlBlock, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sGSEControlBlock, name)
    __repr__ = _swig_repr
    __swig_setmethods__["parent"] = _iec61850.sGSEControlBlock_parent_set
    __swig_getmethods__["parent"] = _iec61850.sGSEControlBlock_parent_get
    if _newclass:
        parent = _swig_property(_iec61850.sGSEControlBlock_parent_get, _iec61850.sGSEControlBlock_parent_set)
    __swig_setmethods__["name"] = _iec61850.sGSEControlBlock_name_set
    __swig_getmethods__["name"] = _iec61850.sGSEControlBlock_name_get
    if _newclass:
        name = _swig_property(_iec61850.sGSEControlBlock_name_get, _iec61850.sGSEControlBlock_name_set)
    __swig_setmethods__["appId"] = _iec61850.sGSEControlBlock_appId_set
    __swig_getmethods__["appId"] = _iec61850.sGSEControlBlock_appId_get
    if _newclass:
        appId = _swig_property(_iec61850.sGSEControlBlock_appId_get, _iec61850.sGSEControlBlock_appId_set)
    __swig_setmethods__["dataSetName"] = _iec61850.sGSEControlBlock_dataSetName_set
    __swig_getmethods__["dataSetName"] = _iec61850.sGSEControlBlock_dataSetName_get
    if _newclass:
        dataSetName = _swig_property(_iec61850.sGSEControlBlock_dataSetName_get, _iec61850.sGSEControlBlock_dataSetName_set)
    __swig_setmethods__["confRev"] = _iec61850.sGSEControlBlock_confRev_set
    __swig_getmethods__["confRev"] = _iec61850.sGSEControlBlock_confRev_get
    if _newclass:
        confRev = _swig_property(_iec61850.sGSEControlBlock_confRev_get, _iec61850.sGSEControlBlock_confRev_set)
    __swig_setmethods__["fixedOffs"] = _iec61850.sGSEControlBlock_fixedOffs_set
    __swig_getmethods__["fixedOffs"] = _iec61850.sGSEControlBlock_fixedOffs_get
    if _newclass:
        fixedOffs = _swig_property(_iec61850.sGSEControlBlock_fixedOffs_get, _iec61850.sGSEControlBlock_fixedOffs_set)
    __swig_setmethods__["address"] = _iec61850.sGSEControlBlock_address_set
    __swig_getmethods__["address"] = _iec61850.sGSEControlBlock_address_get
    if _newclass:
        address = _swig_property(_iec61850.sGSEControlBlock_address_get, _iec61850.sGSEControlBlock_address_set)
    __swig_setmethods__["minTime"] = _iec61850.sGSEControlBlock_minTime_set
    __swig_getmethods__["minTime"] = _iec61850.sGSEControlBlock_minTime_get
    if _newclass:
        minTime = _swig_property(_iec61850.sGSEControlBlock_minTime_get, _iec61850.sGSEControlBlock_minTime_set)
    __swig_setmethods__["maxTime"] = _iec61850.sGSEControlBlock_maxTime_set
    __swig_getmethods__["maxTime"] = _iec61850.sGSEControlBlock_maxTime_get
    if _newclass:
        maxTime = _swig_property(_iec61850.sGSEControlBlock_maxTime_get, _iec61850.sGSEControlBlock_maxTime_set)
    __swig_setmethods__["sibling"] = _iec61850.sGSEControlBlock_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.sGSEControlBlock_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.sGSEControlBlock_sibling_get, _iec61850.sGSEControlBlock_sibling_set)

    def __init__(self):
        this = _iec61850.new_sGSEControlBlock()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sGSEControlBlock
    __del__ = lambda self: None
sGSEControlBlock_swigregister = _iec61850.sGSEControlBlock_swigregister
sGSEControlBlock_swigregister(sGSEControlBlock)

class sSVControlBlock(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sSVControlBlock, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sSVControlBlock, name)
    __repr__ = _swig_repr
    __swig_setmethods__["parent"] = _iec61850.sSVControlBlock_parent_set
    __swig_getmethods__["parent"] = _iec61850.sSVControlBlock_parent_get
    if _newclass:
        parent = _swig_property(_iec61850.sSVControlBlock_parent_get, _iec61850.sSVControlBlock_parent_set)
    __swig_setmethods__["name"] = _iec61850.sSVControlBlock_name_set
    __swig_getmethods__["name"] = _iec61850.sSVControlBlock_name_get
    if _newclass:
        name = _swig_property(_iec61850.sSVControlBlock_name_get, _iec61850.sSVControlBlock_name_set)
    __swig_setmethods__["svId"] = _iec61850.sSVControlBlock_svId_set
    __swig_getmethods__["svId"] = _iec61850.sSVControlBlock_svId_get
    if _newclass:
        svId = _swig_property(_iec61850.sSVControlBlock_svId_get, _iec61850.sSVControlBlock_svId_set)
    __swig_setmethods__["dataSetName"] = _iec61850.sSVControlBlock_dataSetName_set
    __swig_getmethods__["dataSetName"] = _iec61850.sSVControlBlock_dataSetName_get
    if _newclass:
        dataSetName = _swig_property(_iec61850.sSVControlBlock_dataSetName_get, _iec61850.sSVControlBlock_dataSetName_set)
    __swig_setmethods__["optFlds"] = _iec61850.sSVControlBlock_optFlds_set
    __swig_getmethods__["optFlds"] = _iec61850.sSVControlBlock_optFlds_get
    if _newclass:
        optFlds = _swig_property(_iec61850.sSVControlBlock_optFlds_get, _iec61850.sSVControlBlock_optFlds_set)
    __swig_setmethods__["smpMod"] = _iec61850.sSVControlBlock_smpMod_set
    __swig_getmethods__["smpMod"] = _iec61850.sSVControlBlock_smpMod_get
    if _newclass:
        smpMod = _swig_property(_iec61850.sSVControlBlock_smpMod_get, _iec61850.sSVControlBlock_smpMod_set)
    __swig_setmethods__["smpRate"] = _iec61850.sSVControlBlock_smpRate_set
    __swig_getmethods__["smpRate"] = _iec61850.sSVControlBlock_smpRate_get
    if _newclass:
        smpRate = _swig_property(_iec61850.sSVControlBlock_smpRate_get, _iec61850.sSVControlBlock_smpRate_set)
    __swig_setmethods__["confRev"] = _iec61850.sSVControlBlock_confRev_set
    __swig_getmethods__["confRev"] = _iec61850.sSVControlBlock_confRev_get
    if _newclass:
        confRev = _swig_property(_iec61850.sSVControlBlock_confRev_get, _iec61850.sSVControlBlock_confRev_set)
    __swig_setmethods__["dstAddress"] = _iec61850.sSVControlBlock_dstAddress_set
    __swig_getmethods__["dstAddress"] = _iec61850.sSVControlBlock_dstAddress_get
    if _newclass:
        dstAddress = _swig_property(_iec61850.sSVControlBlock_dstAddress_get, _iec61850.sSVControlBlock_dstAddress_set)
    __swig_setmethods__["isUnicast"] = _iec61850.sSVControlBlock_isUnicast_set
    __swig_getmethods__["isUnicast"] = _iec61850.sSVControlBlock_isUnicast_get
    if _newclass:
        isUnicast = _swig_property(_iec61850.sSVControlBlock_isUnicast_get, _iec61850.sSVControlBlock_isUnicast_set)
    __swig_setmethods__["noASDU"] = _iec61850.sSVControlBlock_noASDU_set
    __swig_getmethods__["noASDU"] = _iec61850.sSVControlBlock_noASDU_get
    if _newclass:
        noASDU = _swig_property(_iec61850.sSVControlBlock_noASDU_get, _iec61850.sSVControlBlock_noASDU_set)
    __swig_setmethods__["sibling"] = _iec61850.sSVControlBlock_sibling_set
    __swig_getmethods__["sibling"] = _iec61850.sSVControlBlock_sibling_get
    if _newclass:
        sibling = _swig_property(_iec61850.sSVControlBlock_sibling_get, _iec61850.sSVControlBlock_sibling_set)

    def __init__(self):
        this = _iec61850.new_sSVControlBlock()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sSVControlBlock
    __del__ = lambda self: None
sSVControlBlock_swigregister = _iec61850.sSVControlBlock_swigregister
sSVControlBlock_swigregister(sSVControlBlock)


def ModelNode_getChildCount(arg1):
    return _iec61850.ModelNode_getChildCount(arg1)
ModelNode_getChildCount = _iec61850.ModelNode_getChildCount

def ModelNode_getChild(arg1, name):
    return _iec61850.ModelNode_getChild(arg1, name)
ModelNode_getChild = _iec61850.ModelNode_getChild

def ModelNode_getChildWithFc(arg1, name, fc):
    return _iec61850.ModelNode_getChildWithFc(arg1, name, fc)
ModelNode_getChildWithFc = _iec61850.ModelNode_getChildWithFc

def ModelNode_getObjectReference(arg1, objectReference):
    return _iec61850.ModelNode_getObjectReference(arg1, objectReference)
ModelNode_getObjectReference = _iec61850.ModelNode_getObjectReference

def ModelNode_getType(arg1):
    return _iec61850.ModelNode_getType(arg1)
ModelNode_getType = _iec61850.ModelNode_getType

def IedModel_setIedName(arg1, iedName):
    return _iec61850.IedModel_setIedName(arg1, iedName)
IedModel_setIedName = _iec61850.IedModel_setIedName

def IedModel_getModelNodeByObjectReference(model, objectReference):
    return _iec61850.IedModel_getModelNodeByObjectReference(model, objectReference)
IedModel_getModelNodeByObjectReference = _iec61850.IedModel_getModelNodeByObjectReference

def IedModel_getSVControlBlock(arg1, parentLN, svcbName):
    return _iec61850.IedModel_getSVControlBlock(arg1, parentLN, svcbName)
IedModel_getSVControlBlock = _iec61850.IedModel_getSVControlBlock

def IedModel_getModelNodeByShortObjectReference(model, objectReference):
    return _iec61850.IedModel_getModelNodeByShortObjectReference(model, objectReference)
IedModel_getModelNodeByShortObjectReference = _iec61850.IedModel_getModelNodeByShortObjectReference

def IedModel_getModelNodeByShortAddress(model, shortAddress):
    return _iec61850.IedModel_getModelNodeByShortAddress(model, shortAddress)
IedModel_getModelNodeByShortAddress = _iec61850.IedModel_getModelNodeByShortAddress

def LogicalDevice_getLogicalNode(device, lnName):
    return _iec61850.LogicalDevice_getLogicalNode(device, lnName)
LogicalDevice_getLogicalNode = _iec61850.LogicalDevice_getLogicalNode

def LogicalDevice_getSettingGroupControlBlock(device):
    return _iec61850.LogicalDevice_getSettingGroupControlBlock(device)
LogicalDevice_getSettingGroupControlBlock = _iec61850.LogicalDevice_getSettingGroupControlBlock

def IedModel_setAttributeValuesToNull(iedModel):
    return _iec61850.IedModel_setAttributeValuesToNull(iedModel)
IedModel_setAttributeValuesToNull = _iec61850.IedModel_setAttributeValuesToNull

def IedModel_getDevice(model, deviceName):
    return _iec61850.IedModel_getDevice(model, deviceName)
IedModel_getDevice = _iec61850.IedModel_getDevice

def IedModel_lookupDataSet(model, dataSetReference):
    return _iec61850.IedModel_lookupDataSet(model, dataSetReference)
IedModel_lookupDataSet = _iec61850.IedModel_lookupDataSet

def IedModel_getLogicalDeviceCount(iedModel):
    return _iec61850.IedModel_getLogicalDeviceCount(iedModel)
IedModel_getLogicalDeviceCount = _iec61850.IedModel_getLogicalDeviceCount

def LogicalDevice_getLogicalNodeCount(logicalDevice):
    return _iec61850.LogicalDevice_getLogicalNodeCount(logicalDevice)
LogicalDevice_getLogicalNodeCount = _iec61850.LogicalDevice_getLogicalNodeCount

def LogicalDevice_getChildByMmsVariableName(logicalDevice, mmsVariableName):
    return _iec61850.LogicalDevice_getChildByMmsVariableName(logicalDevice, mmsVariableName)
LogicalDevice_getChildByMmsVariableName = _iec61850.LogicalDevice_getChildByMmsVariableName

def LogicalNode_hasFCData(node, fc):
    return _iec61850.LogicalNode_hasFCData(node, fc)
LogicalNode_hasFCData = _iec61850.LogicalNode_hasFCData

def LogicalNode_getDataSet(arg1, dataSetName):
    return _iec61850.LogicalNode_getDataSet(arg1, dataSetName)
LogicalNode_getDataSet = _iec61850.LogicalNode_getDataSet

def DataObject_hasFCData(dataObject, fc):
    return _iec61850.DataObject_hasFCData(dataObject, fc)
DataObject_hasFCData = _iec61850.DataObject_hasFCData

def IedModel_lookupDataAttributeByMmsValue(model, value):
    return _iec61850.IedModel_lookupDataAttributeByMmsValue(model, value)
IedModel_lookupDataAttributeByMmsValue = _iec61850.IedModel_lookupDataAttributeByMmsValue

def IedServer_create(iedModel):
    return _iec61850.IedServer_create(iedModel)
IedServer_create = _iec61850.IedServer_create

def IedServer_destroy(arg1):
    return _iec61850.IedServer_destroy(arg1)
IedServer_destroy = _iec61850.IedServer_destroy

def IedServer_start(arg1, tcpPort):
    return _iec61850.IedServer_start(arg1, tcpPort)
IedServer_start = _iec61850.IedServer_start

def IedServer_stop(arg1):
    return _iec61850.IedServer_stop(arg1)
IedServer_stop = _iec61850.IedServer_stop

def IedServer_startThreadless(arg1, tcpPort):
    return _iec61850.IedServer_startThreadless(arg1, tcpPort)
IedServer_startThreadless = _iec61850.IedServer_startThreadless

def IedServer_waitReady(arg1, timeoutMs):
    return _iec61850.IedServer_waitReady(arg1, timeoutMs)
IedServer_waitReady = _iec61850.IedServer_waitReady

def IedServer_processIncomingData(arg1):
    return _iec61850.IedServer_processIncomingData(arg1)
IedServer_processIncomingData = _iec61850.IedServer_processIncomingData

def IedServer_performPeriodicTasks(arg1):
    return _iec61850.IedServer_performPeriodicTasks(arg1)
IedServer_performPeriodicTasks = _iec61850.IedServer_performPeriodicTasks

def IedServer_stopThreadless(arg1):
    return _iec61850.IedServer_stopThreadless(arg1)
IedServer_stopThreadless = _iec61850.IedServer_stopThreadless

def IedServer_getDataModel(arg1):
    return _iec61850.IedServer_getDataModel(arg1)
IedServer_getDataModel = _iec61850.IedServer_getDataModel

def IedServer_isRunning(arg1):
    return _iec61850.IedServer_isRunning(arg1)
IedServer_isRunning = _iec61850.IedServer_isRunning

def IedServer_getMmsServer(arg1):
    return _iec61850.IedServer_getMmsServer(arg1)
IedServer_getMmsServer = _iec61850.IedServer_getMmsServer

def IedServer_getIsoServer(arg1):
    return _iec61850.IedServer_getIsoServer(arg1)
IedServer_getIsoServer = _iec61850.IedServer_getIsoServer

def IedServer_enableGoosePublishing(arg1):
    return _iec61850.IedServer_enableGoosePublishing(arg1)
IedServer_enableGoosePublishing = _iec61850.IedServer_enableGoosePublishing

def IedServer_disableGoosePublishing(arg1):
    return _iec61850.IedServer_disableGoosePublishing(arg1)
IedServer_disableGoosePublishing = _iec61850.IedServer_disableGoosePublishing

def IedServer_setGooseInterfaceId(arg1, interfaceId):
    return _iec61850.IedServer_setGooseInterfaceId(arg1, interfaceId)
IedServer_setGooseInterfaceId = _iec61850.IedServer_setGooseInterfaceId

def IedServer_setAuthenticator(arg1, authenticator, authenticatorParameter):
    return _iec61850.IedServer_setAuthenticator(arg1, authenticator, authenticatorParameter)
IedServer_setAuthenticator = _iec61850.IedServer_setAuthenticator

def ClientConnection_getPeerAddress(arg1):
    return _iec61850.ClientConnection_getPeerAddress(arg1)
ClientConnection_getPeerAddress = _iec61850.ClientConnection_getPeerAddress

def ClientConnection_getSecurityToken(arg1):
    return _iec61850.ClientConnection_getSecurityToken(arg1)
ClientConnection_getSecurityToken = _iec61850.ClientConnection_getSecurityToken

def IedServer_setConnectionIndicationHandler(arg1, handler, parameter):
    return _iec61850.IedServer_setConnectionIndicationHandler(arg1, handler, parameter)
IedServer_setConnectionIndicationHandler = _iec61850.IedServer_setConnectionIndicationHandler

def IedServer_lockDataModel(arg1):
    return _iec61850.IedServer_lockDataModel(arg1)
IedServer_lockDataModel = _iec61850.IedServer_lockDataModel

def IedServer_unlockDataModel(arg1):
    return _iec61850.IedServer_unlockDataModel(arg1)
IedServer_unlockDataModel = _iec61850.IedServer_unlockDataModel

def IedServer_getAttributeValue(arg1, dataAttribute):
    return _iec61850.IedServer_getAttributeValue(arg1, dataAttribute)
IedServer_getAttributeValue = _iec61850.IedServer_getAttributeValue

def IedServer_getBooleanAttributeValue(arg1, dataAttribute):
    return _iec61850.IedServer_getBooleanAttributeValue(arg1, dataAttribute)
IedServer_getBooleanAttributeValue = _iec61850.IedServer_getBooleanAttributeValue

def IedServer_getInt32AttributeValue(arg1, dataAttribute):
    return _iec61850.IedServer_getInt32AttributeValue(arg1, dataAttribute)
IedServer_getInt32AttributeValue = _iec61850.IedServer_getInt32AttributeValue

def IedServer_getInt64AttributeValue(arg1, dataAttribute):
    return _iec61850.IedServer_getInt64AttributeValue(arg1, dataAttribute)
IedServer_getInt64AttributeValue = _iec61850.IedServer_getInt64AttributeValue

def IedServer_getUInt32AttributeValue(arg1, dataAttribute):
    return _iec61850.IedServer_getUInt32AttributeValue(arg1, dataAttribute)
IedServer_getUInt32AttributeValue = _iec61850.IedServer_getUInt32AttributeValue

def IedServer_getFloatAttributeValue(arg1, dataAttribute):
    return _iec61850.IedServer_getFloatAttributeValue(arg1, dataAttribute)
IedServer_getFloatAttributeValue = _iec61850.IedServer_getFloatAttributeValue

def IedServer_getUTCTimeAttributeValue(arg1, dataAttribute):
    return _iec61850.IedServer_getUTCTimeAttributeValue(arg1, dataAttribute)
IedServer_getUTCTimeAttributeValue = _iec61850.IedServer_getUTCTimeAttributeValue

def IedServer_getBitStringAttributeValue(arg1, dataAttribute):
    return _iec61850.IedServer_getBitStringAttributeValue(arg1, dataAttribute)
IedServer_getBitStringAttributeValue = _iec61850.IedServer_getBitStringAttributeValue

def IedServer_getStringAttributeValue(arg1, dataAttribute):
    return _iec61850.IedServer_getStringAttributeValue(arg1, dataAttribute)
IedServer_getStringAttributeValue = _iec61850.IedServer_getStringAttributeValue

def IedServer_getFunctionalConstrainedData(arg1, dataObject, fc):
    return _iec61850.IedServer_getFunctionalConstrainedData(arg1, dataObject, fc)
IedServer_getFunctionalConstrainedData = _iec61850.IedServer_getFunctionalConstrainedData

def IedServer_updateAttributeValue(arg1, dataAttribute, value):
    return _iec61850.IedServer_updateAttributeValue(arg1, dataAttribute, value)
IedServer_updateAttributeValue = _iec61850.IedServer_updateAttributeValue

def IedServer_updateFloatAttributeValue(arg1, dataAttribute, value):
    return _iec61850.IedServer_updateFloatAttributeValue(arg1, dataAttribute, value)
IedServer_updateFloatAttributeValue = _iec61850.IedServer_updateFloatAttributeValue

def IedServer_updateInt32AttributeValue(arg1, dataAttribute, value):
    return _iec61850.IedServer_updateInt32AttributeValue(arg1, dataAttribute, value)
IedServer_updateInt32AttributeValue = _iec61850.IedServer_updateInt32AttributeValue

def IedServer_updateInt64AttributeValue(arg1, dataAttribute, value):
    return _iec61850.IedServer_updateInt64AttributeValue(arg1, dataAttribute, value)
IedServer_updateInt64AttributeValue = _iec61850.IedServer_updateInt64AttributeValue

def IedServer_updateUnsignedAttributeValue(arg1, dataAttribute, value):
    return _iec61850.IedServer_updateUnsignedAttributeValue(arg1, dataAttribute, value)
IedServer_updateUnsignedAttributeValue = _iec61850.IedServer_updateUnsignedAttributeValue

def IedServer_updateBitStringAttributeValue(arg1, dataAttribute, value):
    return _iec61850.IedServer_updateBitStringAttributeValue(arg1, dataAttribute, value)
IedServer_updateBitStringAttributeValue = _iec61850.IedServer_updateBitStringAttributeValue

def IedServer_updateBooleanAttributeValue(arg1, dataAttribute, value):
    return _iec61850.IedServer_updateBooleanAttributeValue(arg1, dataAttribute, value)
IedServer_updateBooleanAttributeValue = _iec61850.IedServer_updateBooleanAttributeValue

def IedServer_updateVisibleStringAttributeValue(arg1, dataAttribute, value):
    return _iec61850.IedServer_updateVisibleStringAttributeValue(arg1, dataAttribute, value)
IedServer_updateVisibleStringAttributeValue = _iec61850.IedServer_updateVisibleStringAttributeValue

def IedServer_updateUTCTimeAttributeValue(arg1, dataAttribute, value):
    return _iec61850.IedServer_updateUTCTimeAttributeValue(arg1, dataAttribute, value)
IedServer_updateUTCTimeAttributeValue = _iec61850.IedServer_updateUTCTimeAttributeValue

def IedServer_updateTimestampAttributeValue(arg1, dataAttribute, timestamp):
    return _iec61850.IedServer_updateTimestampAttributeValue(arg1, dataAttribute, timestamp)
IedServer_updateTimestampAttributeValue = _iec61850.IedServer_updateTimestampAttributeValue

def IedServer_updateQuality(arg1, dataAttribute, quality):
    return _iec61850.IedServer_updateQuality(arg1, dataAttribute, quality)
IedServer_updateQuality = _iec61850.IedServer_updateQuality

def IedServer_setLogStorage(arg1, logRef, logStorage):
    return _iec61850.IedServer_setLogStorage(arg1, logRef, logStorage)
IedServer_setLogStorage = _iec61850.IedServer_setLogStorage

def IedServer_changeActiveSettingGroup(arg1, sgcb, newActiveSg):
    return _iec61850.IedServer_changeActiveSettingGroup(arg1, sgcb, newActiveSg)
IedServer_changeActiveSettingGroup = _iec61850.IedServer_changeActiveSettingGroup

def IedServer_getActiveSettingGroup(arg1, sgcb):
    return _iec61850.IedServer_getActiveSettingGroup(arg1, sgcb)
IedServer_getActiveSettingGroup = _iec61850.IedServer_getActiveSettingGroup

def IedServer_setActiveSettingGroupChangedHandler(arg1, sgcb, handler, parameter):
    return _iec61850.IedServer_setActiveSettingGroupChangedHandler(arg1, sgcb, handler, parameter)
IedServer_setActiveSettingGroupChangedHandler = _iec61850.IedServer_setActiveSettingGroupChangedHandler

def IedServer_setEditSettingGroupChangedHandler(arg1, sgcb, handler, parameter):
    return _iec61850.IedServer_setEditSettingGroupChangedHandler(arg1, sgcb, handler, parameter)
IedServer_setEditSettingGroupChangedHandler = _iec61850.IedServer_setEditSettingGroupChangedHandler

def IedServer_setEditSettingGroupConfirmationHandler(arg1, sgcb, handler, parameter):
    return _iec61850.IedServer_setEditSettingGroupConfirmationHandler(arg1, sgcb, handler, parameter)
IedServer_setEditSettingGroupConfirmationHandler = _iec61850.IedServer_setEditSettingGroupConfirmationHandler
CONTROL_ACCEPTED = _iec61850.CONTROL_ACCEPTED
CONTROL_HARDWARE_FAULT = _iec61850.CONTROL_HARDWARE_FAULT
CONTROL_TEMPORARILY_UNAVAILABLE = _iec61850.CONTROL_TEMPORARILY_UNAVAILABLE
CONTROL_OBJECT_ACCESS_DENIED = _iec61850.CONTROL_OBJECT_ACCESS_DENIED
CONTROL_OBJECT_UNDEFINED = _iec61850.CONTROL_OBJECT_UNDEFINED
CONTROL_RESULT_FAILED = _iec61850.CONTROL_RESULT_FAILED
CONTROL_RESULT_OK = _iec61850.CONTROL_RESULT_OK
CONTROL_RESULT_WAITING = _iec61850.CONTROL_RESULT_WAITING

def IedServer_setControlHandler(arg1, node, handler, parameter):
    return _iec61850.IedServer_setControlHandler(arg1, node, handler, parameter)
IedServer_setControlHandler = _iec61850.IedServer_setControlHandler

def IedServer_setPerformCheckHandler(arg1, node, handler, parameter):
    return _iec61850.IedServer_setPerformCheckHandler(arg1, node, handler, parameter)
IedServer_setPerformCheckHandler = _iec61850.IedServer_setPerformCheckHandler

def IedServer_setWaitForExecutionHandler(arg1, node, handler, parameter):
    return _iec61850.IedServer_setWaitForExecutionHandler(arg1, node, handler, parameter)
IedServer_setWaitForExecutionHandler = _iec61850.IedServer_setWaitForExecutionHandler
IEC61850_SVCB_EVENT_ENABLE = _iec61850.IEC61850_SVCB_EVENT_ENABLE
IEC61850_SVCB_EVENT_DISABLE = _iec61850.IEC61850_SVCB_EVENT_DISABLE

def IedServer_setSVCBHandler(arg1, svcb, handler, parameter):
    return _iec61850.IedServer_setSVCBHandler(arg1, svcb, handler, parameter)
IedServer_setSVCBHandler = _iec61850.IedServer_setSVCBHandler

def IedServer_observeDataAttribute(arg1, dataAttribute, handler):
    return _iec61850.IedServer_observeDataAttribute(arg1, dataAttribute, handler)
IedServer_observeDataAttribute = _iec61850.IedServer_observeDataAttribute

def IedServer_handleWriteAccess(arg1, dataAttribute, handler, parameter):
    return _iec61850.IedServer_handleWriteAccess(arg1, dataAttribute, handler, parameter)
IedServer_handleWriteAccess = _iec61850.IedServer_handleWriteAccess
ACCESS_POLICY_ALLOW = _iec61850.ACCESS_POLICY_ALLOW
ACCESS_POLICY_DENY = _iec61850.ACCESS_POLICY_DENY

def IedServer_setWriteAccessPolicy(arg1, fc, policy):
    return _iec61850.IedServer_setWriteAccessPolicy(arg1, fc, policy)
IedServer_setWriteAccessPolicy = _iec61850.IedServer_setWriteAccessPolicy

def IedModel_create(name):
    return _iec61850.IedModel_create(name)
IedModel_create = _iec61850.IedModel_create

def IedModel_setIedNameForDynamicModel(arg1, name):
    return _iec61850.IedModel_setIedNameForDynamicModel(arg1, name)
IedModel_setIedNameForDynamicModel = _iec61850.IedModel_setIedNameForDynamicModel

def IedModel_destroy(model):
    return _iec61850.IedModel_destroy(model)
IedModel_destroy = _iec61850.IedModel_destroy

def LogicalDevice_create(name, parent):
    return _iec61850.LogicalDevice_create(name, parent)
LogicalDevice_create = _iec61850.LogicalDevice_create

def LogicalNode_create(name, parent):
    return _iec61850.LogicalNode_create(name, parent)
LogicalNode_create = _iec61850.LogicalNode_create

def DataObject_create(name, parent, arrayElements):
    return _iec61850.DataObject_create(name, parent, arrayElements)
DataObject_create = _iec61850.DataObject_create

def DataAttribute_create(name, parent, type, fc, triggerOptions, arrayElements, sAddr):
    return _iec61850.DataAttribute_create(name, parent, type, fc, triggerOptions, arrayElements, sAddr)
DataAttribute_create = _iec61850.DataAttribute_create

def ReportControlBlock_create(name, parent, rptId, isBuffered, dataSetName, confRef, trgOps, options, bufTm, intgPd):
    return _iec61850.ReportControlBlock_create(name, parent, rptId, isBuffered, dataSetName, confRef, trgOps, options, bufTm, intgPd)
ReportControlBlock_create = _iec61850.ReportControlBlock_create

def LogControlBlock_create(name, parent, dataSetName, logRef, trgOps, intgPd, logEna, reasonCode):
    return _iec61850.LogControlBlock_create(name, parent, dataSetName, logRef, trgOps, intgPd, logEna, reasonCode)
LogControlBlock_create = _iec61850.LogControlBlock_create

def Log_create(name, parent):
    return _iec61850.Log_create(name, parent)
Log_create = _iec61850.Log_create

def SettingGroupControlBlock_create(parent, actSG, numOfSGs):
    return _iec61850.SettingGroupControlBlock_create(parent, actSG, numOfSGs)
SettingGroupControlBlock_create = _iec61850.SettingGroupControlBlock_create

def GSEControlBlock_create(name, parent, appId, dataSet, confRev, fixedOffs, minTime, maxTime):
    return _iec61850.GSEControlBlock_create(name, parent, appId, dataSet, confRev, fixedOffs, minTime, maxTime)
GSEControlBlock_create = _iec61850.GSEControlBlock_create

def SVControlBlock_create(name, parent, svID, dataSet, confRev, smpMod, smpRate, optFlds, isUnicast):
    return _iec61850.SVControlBlock_create(name, parent, svID, dataSet, confRev, smpMod, smpRate, optFlds, isUnicast)
SVControlBlock_create = _iec61850.SVControlBlock_create

def SVControlBlock_addPhyComAddress(arg1, phyComAddress):
    return _iec61850.SVControlBlock_addPhyComAddress(arg1, phyComAddress)
SVControlBlock_addPhyComAddress = _iec61850.SVControlBlock_addPhyComAddress

def GSEControlBlock_addPhyComAddress(arg1, phyComAddress):
    return _iec61850.GSEControlBlock_addPhyComAddress(arg1, phyComAddress)
GSEControlBlock_addPhyComAddress = _iec61850.GSEControlBlock_addPhyComAddress

def PhyComAddress_create(vlanPriority, vlanId, appId, dstAddress):
    return _iec61850.PhyComAddress_create(vlanPriority, vlanId, appId, dstAddress)
PhyComAddress_create = _iec61850.PhyComAddress_create

def DataSet_create(name, parent):
    return _iec61850.DataSet_create(name, parent)
DataSet_create = _iec61850.DataSet_create

def DataSet_getSize(arg1):
    return _iec61850.DataSet_getSize(arg1)
DataSet_getSize = _iec61850.DataSet_getSize

def DataSet_getFirstEntry(arg1):
    return _iec61850.DataSet_getFirstEntry(arg1)
DataSet_getFirstEntry = _iec61850.DataSet_getFirstEntry

def DataSetEntry_getNext(arg1):
    return _iec61850.DataSetEntry_getNext(arg1)
DataSetEntry_getNext = _iec61850.DataSetEntry_getNext

def DataSetEntry_create(dataSet, variable, index, component):
    return _iec61850.DataSetEntry_create(dataSet, variable, index, component)
DataSetEntry_create = _iec61850.DataSetEntry_create
CDC_OPTION_PICS_SUBST = _iec61850.CDC_OPTION_PICS_SUBST
CDC_OPTION_BLK_ENA = _iec61850.CDC_OPTION_BLK_ENA
CDC_OPTION_DESC = _iec61850.CDC_OPTION_DESC
CDC_OPTION_DESC_UNICODE = _iec61850.CDC_OPTION_DESC_UNICODE
CDC_OPTION_AC_DLNDA = _iec61850.CDC_OPTION_AC_DLNDA
CDC_OPTION_AC_DLN = _iec61850.CDC_OPTION_AC_DLN
CDC_OPTION_UNIT = _iec61850.CDC_OPTION_UNIT
CDC_OPTION_FROZEN_VALUE = _iec61850.CDC_OPTION_FROZEN_VALUE
CDC_OPTION_ADDR = _iec61850.CDC_OPTION_ADDR
CDC_OPTION_ADDINFO = _iec61850.CDC_OPTION_ADDINFO
CDC_OPTION_INST_MAG = _iec61850.CDC_OPTION_INST_MAG
CDC_OPTION_RANGE = _iec61850.CDC_OPTION_RANGE
CDC_OPTION_UNIT_MULTIPLIER = _iec61850.CDC_OPTION_UNIT_MULTIPLIER
CDC_OPTION_AC_SCAV = _iec61850.CDC_OPTION_AC_SCAV
CDC_OPTION_MIN = _iec61850.CDC_OPTION_MIN
CDC_OPTION_MAX = _iec61850.CDC_OPTION_MAX
CDC_OPTION_AC_CLC_O = _iec61850.CDC_OPTION_AC_CLC_O
CDC_OPTION_RANGE_ANG = _iec61850.CDC_OPTION_RANGE_ANG
CDC_OPTION_PHASE_A = _iec61850.CDC_OPTION_PHASE_A
CDC_OPTION_PHASE_B = _iec61850.CDC_OPTION_PHASE_B
CDC_OPTION_PHASE_C = _iec61850.CDC_OPTION_PHASE_C
CDC_OPTION_PHASE_NEUT = _iec61850.CDC_OPTION_PHASE_NEUT
CDC_OPTION_PHASES_ABC = _iec61850.CDC_OPTION_PHASES_ABC
CDC_OPTION_PHASES_ALL = _iec61850.CDC_OPTION_PHASES_ALL
CDC_OPTION_STEP_SIZE = _iec61850.CDC_OPTION_STEP_SIZE
CDC_OPTION_ANGLE_REF = _iec61850.CDC_OPTION_ANGLE_REF
CDC_OPTION_DPL_HWREV = _iec61850.CDC_OPTION_DPL_HWREV
CDC_OPTION_DPL_SWREV = _iec61850.CDC_OPTION_DPL_SWREV
CDC_OPTION_DPL_SERNUM = _iec61850.CDC_OPTION_DPL_SERNUM
CDC_OPTION_DPL_MODEL = _iec61850.CDC_OPTION_DPL_MODEL
CDC_OPTION_DPL_LOCATION = _iec61850.CDC_OPTION_DPL_LOCATION
CDC_OPTION_AC_LN0_M = _iec61850.CDC_OPTION_AC_LN0_M
CDC_OPTION_AC_LN0_EX = _iec61850.CDC_OPTION_AC_LN0_EX
CDC_OPTION_AC_DLD_M = _iec61850.CDC_OPTION_AC_DLD_M
CDC_CTL_MODEL_NONE = _iec61850.CDC_CTL_MODEL_NONE
CDC_CTL_MODEL_DIRECT_NORMAL = _iec61850.CDC_CTL_MODEL_DIRECT_NORMAL
CDC_CTL_MODEL_SBO_NORMAL = _iec61850.CDC_CTL_MODEL_SBO_NORMAL
CDC_CTL_MODEL_DIRECT_ENHANCED = _iec61850.CDC_CTL_MODEL_DIRECT_ENHANCED
CDC_CTL_MODEL_SBO_ENHANCED = _iec61850.CDC_CTL_MODEL_SBO_ENHANCED
CDC_CTL_MODEL_HAS_CANCEL = _iec61850.CDC_CTL_MODEL_HAS_CANCEL
CDC_CTL_MODEL_IS_TIME_ACTIVATED = _iec61850.CDC_CTL_MODEL_IS_TIME_ACTIVATED
CDC_CTL_OPTION_ORIGIN = _iec61850.CDC_CTL_OPTION_ORIGIN
CDC_CTL_OPTION_CTL_NUM = _iec61850.CDC_CTL_OPTION_CTL_NUM
CDC_CTL_OPTION_ST_SELD = _iec61850.CDC_CTL_OPTION_ST_SELD
CDC_CTL_OPTION_OP_RCVD = _iec61850.CDC_CTL_OPTION_OP_RCVD
CDC_CTL_OPTION_OP_OK = _iec61850.CDC_CTL_OPTION_OP_OK
CDC_CTL_OPTION_T_OP_OK = _iec61850.CDC_CTL_OPTION_T_OP_OK
CDC_CTL_OPTION_SBO_TIMEOUT = _iec61850.CDC_CTL_OPTION_SBO_TIMEOUT
CDC_CTL_OPTION_SBO_CLASS = _iec61850.CDC_CTL_OPTION_SBO_CLASS
CDC_CTL_OPTION_OPER_TIMEOUT = _iec61850.CDC_CTL_OPTION_OPER_TIMEOUT

def CAC_AnalogueValue_create(name, parent, fc, triggerOptions, isIntegerNotFloat):
    return _iec61850.CAC_AnalogueValue_create(name, parent, fc, triggerOptions, isIntegerNotFloat)
CAC_AnalogueValue_create = _iec61850.CAC_AnalogueValue_create

def CAC_ValWithTrans_create(name, parent, fc, triggerOptions, hasTransientIndicator):
    return _iec61850.CAC_ValWithTrans_create(name, parent, fc, triggerOptions, hasTransientIndicator)
CAC_ValWithTrans_create = _iec61850.CAC_ValWithTrans_create

def CAC_Vector_create(name, parent, options, fc, triggerOptions):
    return _iec61850.CAC_Vector_create(name, parent, options, fc, triggerOptions)
CAC_Vector_create = _iec61850.CAC_Vector_create

def CAC_Point_create(name, parent, fc, triggerOptions, hasZVal):
    return _iec61850.CAC_Point_create(name, parent, fc, triggerOptions, hasZVal)
CAC_Point_create = _iec61850.CAC_Point_create

def CAC_ScaledValueConfig_create(name, parent):
    return _iec61850.CAC_ScaledValueConfig_create(name, parent)
CAC_ScaledValueConfig_create = _iec61850.CAC_ScaledValueConfig_create

def CAC_Unit_create(name, parent, hasMagnitude):
    return _iec61850.CAC_Unit_create(name, parent, hasMagnitude)
CAC_Unit_create = _iec61850.CAC_Unit_create

def CDC_SPS_create(dataObjectName, parent, options):
    return _iec61850.CDC_SPS_create(dataObjectName, parent, options)
CDC_SPS_create = _iec61850.CDC_SPS_create

def CDC_DPS_create(dataObjectName, parent, options):
    return _iec61850.CDC_DPS_create(dataObjectName, parent, options)
CDC_DPS_create = _iec61850.CDC_DPS_create

def CDC_INS_create(dataObjectName, parent, options):
    return _iec61850.CDC_INS_create(dataObjectName, parent, options)
CDC_INS_create = _iec61850.CDC_INS_create

def CDC_ENS_create(dataObjectName, parent, options):
    return _iec61850.CDC_ENS_create(dataObjectName, parent, options)
CDC_ENS_create = _iec61850.CDC_ENS_create

def CDC_BCR_create(dataObjectName, parent, options):
    return _iec61850.CDC_BCR_create(dataObjectName, parent, options)
CDC_BCR_create = _iec61850.CDC_BCR_create

def CDC_SEC_create(dataObjectName, parent, options):
    return _iec61850.CDC_SEC_create(dataObjectName, parent, options)
CDC_SEC_create = _iec61850.CDC_SEC_create

def CDC_MV_create(dataObjectName, parent, options, isIntegerNotFloat):
    return _iec61850.CDC_MV_create(dataObjectName, parent, options, isIntegerNotFloat)
CDC_MV_create = _iec61850.CDC_MV_create

def CDC_CMV_create(dataObjectName, parent, options):
    return _iec61850.CDC_CMV_create(dataObjectName, parent, options)
CDC_CMV_create = _iec61850.CDC_CMV_create

def CDC_SAV_create(dataObjectName, parent, options, isIntegerNotFloat):
    return _iec61850.CDC_SAV_create(dataObjectName, parent, options, isIntegerNotFloat)
CDC_SAV_create = _iec61850.CDC_SAV_create

def CDC_LPL_create(dataObjectName, parent, options):
    return _iec61850.CDC_LPL_create(dataObjectName, parent, options)
CDC_LPL_create = _iec61850.CDC_LPL_create

def CDC_DPL_create(dataObjectName, parent, options):
    return _iec61850.CDC_DPL_create(dataObjectName, parent, options)
CDC_DPL_create = _iec61850.CDC_DPL_create

def CDC_HST_create(dataObjectName, parent, options, maxPts):
    return _iec61850.CDC_HST_create(dataObjectName, parent, options, maxPts)
CDC_HST_create = _iec61850.CDC_HST_create

def CDC_ACD_create(dataObjectName, parent, options):
    return _iec61850.CDC_ACD_create(dataObjectName, parent, options)
CDC_ACD_create = _iec61850.CDC_ACD_create

def CDC_ACT_create(dataObjectName, parent, options):
    return _iec61850.CDC_ACT_create(dataObjectName, parent, options)
CDC_ACT_create = _iec61850.CDC_ACT_create

def CDC_SPG_create(dataObjectName, parent, options):
    return _iec61850.CDC_SPG_create(dataObjectName, parent, options)
CDC_SPG_create = _iec61850.CDC_SPG_create

def CDC_ENG_create(dataObjectName, parent, options):
    return _iec61850.CDC_ENG_create(dataObjectName, parent, options)
CDC_ENG_create = _iec61850.CDC_ENG_create

def CDC_ING_create(dataObjectName, parent, options):
    return _iec61850.CDC_ING_create(dataObjectName, parent, options)
CDC_ING_create = _iec61850.CDC_ING_create

def CDC_ASG_create(dataObjectName, parent, options, isIntegerNotFloat):
    return _iec61850.CDC_ASG_create(dataObjectName, parent, options, isIntegerNotFloat)
CDC_ASG_create = _iec61850.CDC_ASG_create

def CDC_WYE_create(dataObjectName, parent, options):
    return _iec61850.CDC_WYE_create(dataObjectName, parent, options)
CDC_WYE_create = _iec61850.CDC_WYE_create

def CDC_DEL_create(dataObjectName, parent, options):
    return _iec61850.CDC_DEL_create(dataObjectName, parent, options)
CDC_DEL_create = _iec61850.CDC_DEL_create

def CDC_SPC_create(dataObjectName, parent, options, controlOptions):
    return _iec61850.CDC_SPC_create(dataObjectName, parent, options, controlOptions)
CDC_SPC_create = _iec61850.CDC_SPC_create

def CDC_DPC_create(dataObjectName, parent, options, controlOptions):
    return _iec61850.CDC_DPC_create(dataObjectName, parent, options, controlOptions)
CDC_DPC_create = _iec61850.CDC_DPC_create

def CDC_INC_create(dataObjectName, parent, options, controlOptions):
    return _iec61850.CDC_INC_create(dataObjectName, parent, options, controlOptions)
CDC_INC_create = _iec61850.CDC_INC_create

def CDC_ENC_create(dataObjectName, parent, options, controlOptions):
    return _iec61850.CDC_ENC_create(dataObjectName, parent, options, controlOptions)
CDC_ENC_create = _iec61850.CDC_ENC_create

def CDC_BSC_create(dataObjectName, parent, options, controlOptions, hasTransientIndicator):
    return _iec61850.CDC_BSC_create(dataObjectName, parent, options, controlOptions, hasTransientIndicator)
CDC_BSC_create = _iec61850.CDC_BSC_create

def CDC_APC_create(dataObjectName, parent, options, controlOptions, isIntegerNotFloat):
    return _iec61850.CDC_APC_create(dataObjectName, parent, options, controlOptions, isIntegerNotFloat)
CDC_APC_create = _iec61850.CDC_APC_create
CDC_OPTION_61400_MIN_MX_VAL = _iec61850.CDC_OPTION_61400_MIN_MX_VAL
CDC_OPTION_61400_MAX_MX_VAL = _iec61850.CDC_OPTION_61400_MAX_MX_VAL
CDC_OPTION_61400_TOT_AV_VAL = _iec61850.CDC_OPTION_61400_TOT_AV_VAL
CDC_OPTION_61400_SDV_VAL = _iec61850.CDC_OPTION_61400_SDV_VAL
CDC_OPTION_61400_INC_RATE = _iec61850.CDC_OPTION_61400_INC_RATE
CDC_OPTION_61400_DEC_RATE = _iec61850.CDC_OPTION_61400_DEC_RATE
CDC_OPTION_61400_SP_ACS = _iec61850.CDC_OPTION_61400_SP_ACS
CDC_OPTION_61400_CHA_PER_RS = _iec61850.CDC_OPTION_61400_CHA_PER_RS
CDC_OPTION_61400_CM_ACS = _iec61850.CDC_OPTION_61400_CM_ACS
CDC_OPTION_61400_TM_TOT = _iec61850.CDC_OPTION_61400_TM_TOT
CDC_OPTION_61400_COUNTING_DAILY = _iec61850.CDC_OPTION_61400_COUNTING_DAILY
CDC_OPTION_61400_COUNTING_MONTHLY = _iec61850.CDC_OPTION_61400_COUNTING_MONTHLY
CDC_OPTION_61400_COUNTING_YEARLY = _iec61850.CDC_OPTION_61400_COUNTING_YEARLY
CDC_OPTION_61400_COUNTING_TOTAL = _iec61850.CDC_OPTION_61400_COUNTING_TOTAL
CDC_OPTION_61400_COUNTING_ALL = _iec61850.CDC_OPTION_61400_COUNTING_ALL

def CDC_SPV_create(dataObjectName, parent, options, controlOptions, wpOptions, hasChaManRs):
    return _iec61850.CDC_SPV_create(dataObjectName, parent, options, controlOptions, wpOptions, hasChaManRs)
CDC_SPV_create = _iec61850.CDC_SPV_create

def CDC_STV_create(dataObjectName, parent, options, controlOptions, wpOptions, hasOldStatus):
    return _iec61850.CDC_STV_create(dataObjectName, parent, options, controlOptions, wpOptions, hasOldStatus)
CDC_STV_create = _iec61850.CDC_STV_create

def CDC_CMD_create(dataObjectName, parent, options, controlOptions, wpOptions, hasOldStatus, hasCmTm, hasCmCt):
    return _iec61850.CDC_CMD_create(dataObjectName, parent, options, controlOptions, wpOptions, hasOldStatus, hasCmTm, hasCmCt)
CDC_CMD_create = _iec61850.CDC_CMD_create

def CDC_ALM_create(dataObjectName, parent, options, controlOptions, wpOptions, hasOldStatus):
    return _iec61850.CDC_ALM_create(dataObjectName, parent, options, controlOptions, wpOptions, hasOldStatus)
CDC_ALM_create = _iec61850.CDC_ALM_create

def CDC_CTE_create(dataObjectName, parent, options, controlOptions, wpOptions, hasHisRs):
    return _iec61850.CDC_CTE_create(dataObjectName, parent, options, controlOptions, wpOptions, hasHisRs)
CDC_CTE_create = _iec61850.CDC_CTE_create

def CDC_TMS_create(dataObjectName, parent, options, controlOptions, wpOptions, hasHisRs):
    return _iec61850.CDC_TMS_create(dataObjectName, parent, options, controlOptions, wpOptions, hasHisRs)
CDC_TMS_create = _iec61850.CDC_TMS_create
class sLinkedList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sLinkedList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sLinkedList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data"] = _iec61850.sLinkedList_data_set
    __swig_getmethods__["data"] = _iec61850.sLinkedList_data_get
    if _newclass:
        data = _swig_property(_iec61850.sLinkedList_data_get, _iec61850.sLinkedList_data_set)
    __swig_setmethods__["next"] = _iec61850.sLinkedList_next_set
    __swig_getmethods__["next"] = _iec61850.sLinkedList_next_get
    if _newclass:
        next = _swig_property(_iec61850.sLinkedList_next_get, _iec61850.sLinkedList_next_set)

    def __init__(self):
        this = _iec61850.new_sLinkedList()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _iec61850.delete_sLinkedList
    __del__ = lambda self: None
sLinkedList_swigregister = _iec61850.sLinkedList_swigregister
sLinkedList_swigregister(sLinkedList)


def LinkedList_create():
    return _iec61850.LinkedList_create()
LinkedList_create = _iec61850.LinkedList_create

def LinkedList_destroy(arg1):
    return _iec61850.LinkedList_destroy(arg1)
LinkedList_destroy = _iec61850.LinkedList_destroy

def LinkedList_destroyDeep(arg1, valueDeleteFunction):
    return _iec61850.LinkedList_destroyDeep(arg1, valueDeleteFunction)
LinkedList_destroyDeep = _iec61850.LinkedList_destroyDeep

def LinkedList_destroyStatic(arg1):
    return _iec61850.LinkedList_destroyStatic(arg1)
LinkedList_destroyStatic = _iec61850.LinkedList_destroyStatic

def LinkedList_add(arg1, data):
    return _iec61850.LinkedList_add(arg1, data)
LinkedList_add = _iec61850.LinkedList_add

def LinkedList_remove(arg1, data):
    return _iec61850.LinkedList_remove(arg1, data)
LinkedList_remove = _iec61850.LinkedList_remove

def LinkedList_get(arg1, index):
    return _iec61850.LinkedList_get(arg1, index)
LinkedList_get = _iec61850.LinkedList_get

def LinkedList_getNext(arg1):
    return _iec61850.LinkedList_getNext(arg1)
LinkedList_getNext = _iec61850.LinkedList_getNext

def LinkedList_getLastElement(arg1):
    return _iec61850.LinkedList_getLastElement(arg1)
LinkedList_getLastElement = _iec61850.LinkedList_getLastElement

def LinkedList_insertAfter(listElement, data):
    return _iec61850.LinkedList_insertAfter(listElement, data)
LinkedList_insertAfter = _iec61850.LinkedList_insertAfter

def LinkedList_size(arg1):
    return _iec61850.LinkedList_size(arg1)
LinkedList_size = _iec61850.LinkedList_size

def LinkedList_getData(arg1):
    return _iec61850.LinkedList_getData(arg1)
LinkedList_getData = _iec61850.LinkedList_getData

def LinkedList_printStringList(arg1):
    return _iec61850.LinkedList_printStringList(arg1)
LinkedList_printStringList = _iec61850.LinkedList_printStringList

def toModelNode(*args):
    return _iec61850.toModelNode(*args)
toModelNode = _iec61850.toModelNode

def toDataAttribute(*args):
    return _iec61850.toDataAttribute(*args)
toDataAttribute = _iec61850.toDataAttribute

def toCharP(arg1):
    return _iec61850.toCharP(arg1)
toCharP = _iec61850.toCharP
# This file is compatible with both classic and new-style classes.
